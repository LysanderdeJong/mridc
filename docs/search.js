window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"mridc": {"fullname": "mridc", "modulename": "mridc", "type": "module", "doc": "<p></p>\n"}, "mridc.collections": {"fullname": "mridc.collections", "modulename": "mridc.collections", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common": {"fullname": "mridc.collections.common", "modulename": "mridc.collections.common", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.callbacks": {"fullname": "mridc.collections.common.callbacks", "modulename": "mridc.collections.common.callbacks", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.callbacks.callbacks": {"fullname": "mridc.collections.common.callbacks.callbacks", "modulename": "mridc.collections.common.callbacks.callbacks", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"fullname": "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback", "modulename": "mridc.collections.common.callbacks.callbacks", "qualname": "LogEpochTimeCallback", "type": "class", "doc": "<p>Simple callback that logs how long each epoch takes, in seconds, to a pytorch lightning log</p>\n", "bases": "pytorch_lightning.callbacks.base.Callback"}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"fullname": "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__", "modulename": "mridc.collections.common.callbacks.callbacks", "qualname": "LogEpochTimeCallback.__init__", "type": "function", "doc": "<p>Initialize the callback.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"fullname": "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start", "modulename": "mridc.collections.common.callbacks.callbacks", "qualname": "LogEpochTimeCallback.on_train_epoch_start", "type": "function", "doc": "<p>Called at the start of each epoch.</p>\n", "signature": "(self, trainer, pl_module)", "funcdef": "def"}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"fullname": "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end", "modulename": "mridc.collections.common.callbacks.callbacks", "qualname": "LogEpochTimeCallback.on_train_epoch_end", "type": "function", "doc": "<p>Called at the end of each epoch.</p>\n", "signature": "(self, trainer, pl_module)", "funcdef": "def"}, "mridc.collections.common.data": {"fullname": "mridc.collections.common.data", "modulename": "mridc.collections.common.data", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.data.dataset": {"fullname": "mridc.collections.common.data.dataset", "modulename": "mridc.collections.common.data.dataset", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.data.dataset.ConcatDataset": {"fullname": "mridc.collections.common.data.dataset.ConcatDataset", "modulename": "mridc.collections.common.data.dataset", "qualname": "ConcatDataset", "type": "class", "doc": "<p>A dataset that accepts as argument multiple datasets and then samples from them based on the specified\nsampling technique.\nArgs:\n    datasets (list): A list of datasets to sample from.\n    shuffle (bool): Whether to shuffle individual datasets. Only works with non-iterable datasets.\n        Defaults to True.\n    sampling_technique (str): Sampling technique to choose which dataset to draw a sample from.\n        Defaults to 'random'. Currently supports 'random' and 'round-robin'.\n    sampling_probabilities (list): Probability values for sampling. Only used when sampling_technique = 'random'.\n    global_rank (int): Worker rank, used for partitioning map style datasets. Defaults to 0.\n    world_size (int): Total number of processes, used for partitioning map style datasets. Defaults to 1.</p>\n", "bases": "torch.utils.data.dataset.Dataset[+T_co]"}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"fullname": "mridc.collections.common.data.dataset.ConcatDataset.__init__", "modulename": "mridc.collections.common.data.dataset", "qualname": "ConcatDataset.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    datasets: List[Any],\n    shuffle: bool = True,\n    sampling_technique: str = 'random',\n    sampling_probabilities: List[float] = None,\n    global_rank: int = 0,\n    world_size: int = 1\n)", "funcdef": "def"}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"fullname": "mridc.collections.common.data.dataset.ConcatDataset.get_iterable", "modulename": "mridc.collections.common.data.dataset", "qualname": "ConcatDataset.get_iterable", "type": "function", "doc": "<p>Returns an iterable dataset.</p>\n", "signature": "(self, dataset)", "funcdef": "def"}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"fullname": "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator", "modulename": "mridc.collections.common.data.dataset", "qualname": "ConcatDataset.round_robin_generator", "type": "function", "doc": "<p>Generates indices in a round-robin fashion.</p>\n", "signature": "(datasets, **kwargs)", "funcdef": "def"}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"fullname": "mridc.collections.common.data.dataset.ConcatDataset.random_generator", "modulename": "mridc.collections.common.data.dataset", "qualname": "ConcatDataset.random_generator", "type": "function", "doc": "<p>Generates random indices.</p>\n", "signature": "(datasets, **kwargs)", "funcdef": "def"}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"fullname": "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type", "modulename": "mridc.collections.common.data.dataset", "qualname": "ConcatDataset.reinforce_type", "type": "function", "doc": "<p>Reinforce the type for DataPipe instance. And the 'expected_type' is required\nto be a subtype of the original type hint to restrict the type requirement\nof DataPipe instance.</p>\n", "signature": "(self, expected_type)", "funcdef": "def"}, "mridc.collections.common.losses": {"fullname": "mridc.collections.common.losses", "modulename": "mridc.collections.common.losses", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.losses.aggregator": {"fullname": "mridc.collections.common.losses.aggregator", "modulename": "mridc.collections.common.losses.aggregator", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"fullname": "mridc.collections.common.losses.aggregator.AggregatorLoss", "modulename": "mridc.collections.common.losses.aggregator", "qualname": "AggregatorLoss", "type": "class", "doc": "<p>Sums several losses into one.\nArgs:\n    num_inputs: number of input losses\n    weights: a list of coefficient for merging losses</p>\n", "bases": "mridc.core.classes.loss.Loss"}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"fullname": "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__", "modulename": "mridc.collections.common.losses.aggregator", "qualname": "AggregatorLoss.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(self, num_inputs: int = 2, weights: List[float] = None)", "funcdef": "def"}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"fullname": "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types", "modulename": "mridc.collections.common.losses.aggregator", "qualname": "AggregatorLoss.input_types", "type": "variable", "doc": "<p>Returns definitions of module input ports.</p>\n"}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"fullname": "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types", "modulename": "mridc.collections.common.losses.aggregator", "qualname": "AggregatorLoss.output_types", "type": "variable", "doc": "<p>Returns definitions of module output ports.</p>\n"}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"fullname": "mridc.collections.common.losses.aggregator.AggregatorLoss.forward", "modulename": "mridc.collections.common.losses.aggregator", "qualname": "AggregatorLoss.forward", "type": "function", "doc": "<p>Computes the sum of the losses.</p>\n", "signature": "(self, **kwargs)", "funcdef": "def"}, "mridc.collections.common.losses.ssim": {"fullname": "mridc.collections.common.losses.ssim", "modulename": "mridc.collections.common.losses.ssim", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.losses.ssim.SSIMLoss": {"fullname": "mridc.collections.common.losses.ssim.SSIMLoss", "modulename": "mridc.collections.common.losses.ssim", "qualname": "SSIMLoss", "type": "class", "doc": "<p>SSIM loss module.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"fullname": "mridc.collections.common.losses.ssim.SSIMLoss.__init__", "modulename": "mridc.collections.common.losses.ssim", "qualname": "SSIMLoss.__init__", "type": "function", "doc": "<p>Args:\n    win_size: Window size for SSIM calculation.\n    k1: k1 parameter for SSIM calculation.\n    k2: k2 parameter for SSIM calculation.</p>\n", "signature": "(self, win_size: int = 7, k1: float = 0.01, k2: float = 0.03)", "funcdef": "def"}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"fullname": "mridc.collections.common.losses.ssim.SSIMLoss.forward", "modulename": "mridc.collections.common.losses.ssim", "qualname": "SSIMLoss.forward", "type": "function", "doc": "<p>Args:\n    X: First input tensor.\n    Y: Second input tensor.\n    data_range: Data range.</p>\n\n<p>Returns:\n    SSIM loss.</p>\n", "signature": "(self, X: torch.Tensor, Y: torch.Tensor, data_range: torch.Tensor)", "funcdef": "def"}, "mridc.collections.common.metrics": {"fullname": "mridc.collections.common.metrics", "modulename": "mridc.collections.common.metrics", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.metrics.global_average_loss_metric": {"fullname": "mridc.collections.common.metrics.global_average_loss_metric", "modulename": "mridc.collections.common.metrics.global_average_loss_metric", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"fullname": "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric", "modulename": "mridc.collections.common.metrics.global_average_loss_metric", "qualname": "GlobalAverageLossMetric", "type": "class", "doc": "<p>This class is for averaging loss across multiple processes if a distributed backend is used. True average is\ncomputed not running average. It does not accumulate gradients so the averaged loss cannot be used for\noptimization.\nIf <code>take_avg_loss</code> is <code>True</code>, the :meth:<code>update</code> method <code>loss</code> argument has to be a mean loss. If\n<code>take_avg_loss</code> is <code>False</code> then the :meth:<code>update</code> method <code>loss</code> argument has to be a sum of losses.\nSee :doc:<code>PyTorch Lightning Metrics&lt;pytorch-lightning:metrics&gt;</code> for the metric usage instruction.\nArgs:\n    compute_on_step:\n        The method :meth:<code>forward</code> only calls <code>update()</code> and returns <code>None</code> if this is set to <code>False</code>.\n        default: <code>True</code>\n    dist_sync_on_step:\n        Synchronize metric state across processes at each method :meth:<code>forward</code> call before returning the\n        value at the step\n    process_group:\n        Specify the process group on which synchronization is called. default: <code>None</code> (which selects the entire\n        world)\n    take_avg_loss:\n        If <code>True</code> values of :meth:<code>update</code> method <code>loss</code> argument has to be a mean loss. If <code>False</code>\n        values of :meth:<code>update</code> method <code>loss</code> argument has to be a sum of losses. default: <code>True</code></p>\n", "bases": "torchmetrics.metric.Metric"}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"fullname": "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__", "modulename": "mridc.collections.common.metrics.global_average_loss_metric", "qualname": "GlobalAverageLossMetric.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(\n    self,\n    compute_on_step=True,\n    dist_sync_on_step=False,\n    process_group=None,\n    take_avg_loss=True\n)", "funcdef": "def"}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"fullname": "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update", "modulename": "mridc.collections.common.metrics.global_average_loss_metric", "qualname": "GlobalAverageLossMetric.update", "type": "function", "doc": "<p>Updates :attr:<code>loss_sum</code> and :attr:<code>num_measurements</code>.\nArgs:\n    loss: A float zero dimensional <code>torch.Tensor</code> which is either sum or average of losses for processed\n        examples. See <code>take_avg_loss</code> parameter of :meth:<code>__init__</code>.\n    num_measurements: An integer zero dimensional <code>torch.Tensor</code> which contains a number of loss\n        measurements. The sum or mean of the results of these measurements are in the <code>loss</code> parameter.</p>\n", "signature": "(self, loss, num_measurements)", "funcdef": "def"}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"fullname": "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute", "modulename": "mridc.collections.common.metrics.global_average_loss_metric", "qualname": "GlobalAverageLossMetric.compute", "type": "function", "doc": "<p>Returns mean loss.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.common.parts": {"fullname": "mridc.collections.common.parts", "modulename": "mridc.collections.common.parts", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.parts.fft": {"fullname": "mridc.collections.common.parts.fft", "modulename": "mridc.collections.common.parts.fft", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.parts.fft.fft2c": {"fullname": "mridc.collections.common.parts.fft.fft2c", "modulename": "mridc.collections.common.parts.fft", "qualname": "fft2c", "type": "function", "doc": "<p>Apply centered 2 dimensional Fast Fourier Transform.</p>\n\n<p>Args:\n    data: Complex valued input data containing at least 3 dimensions:\n        dimensions -2 &amp; -1 are spatial dimensions. All other dimensions are assumed to be batch dimensions.\n    fft_type: Specify fft type. This is important if an orthogonal transformation is needed or not.\n    fft_normalization: \"ortho\" is the default normalization used by PyTorch. Can be changed to \"ortho\" or None.\n    fft_dim: dimensions to apply the FFT</p>\n\n<p>Returns:\n    The FFT of the input.</p>\n", "signature": "(\n    data: torch.Tensor,\n    fft_type: str = 'orthogonal',\n    fft_normalization: str = 'ortho',\n    fft_dim: Union[int, NoneType, List[int]] = None\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.fft.ifft2c": {"fullname": "mridc.collections.common.parts.fft.ifft2c", "modulename": "mridc.collections.common.parts.fft", "qualname": "ifft2c", "type": "function", "doc": "<p>Apply centered 2 dimensional Inverse Fast Fourier Transform.</p>\n\n<p>Args:\n    data: Complex valued input data containing at least 3 dimensions:\n        dimensions -2 &amp; -1 are spatial dimensions. All other dimensions are assumed to be batch dimensions.\n    fft_type: Specify fft type. This is important if an orthogonal transformation is needed or not.\n    fft_normalization: \"ortho\" is the default normalization used by PyTorch. Can be changed to \"ortho\" or None.\n    fft_dim: dimensions to apply the FFT</p>\n\n<p>Returns:\n    The IFFT of the input.</p>\n", "signature": "(\n    data: torch.Tensor,\n    fft_type: str = 'orthogonal',\n    fft_normalization: str = 'ortho',\n    fft_dim: Union[int, NoneType, List[int]] = None\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.patch_utils": {"fullname": "mridc.collections.common.parts.patch_utils", "modulename": "mridc.collections.common.parts.patch_utils", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.parts.ptl_overrides": {"fullname": "mridc.collections.common.parts.ptl_overrides", "modulename": "mridc.collections.common.parts.ptl_overrides", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"fullname": "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin", "modulename": "mridc.collections.common.parts.ptl_overrides", "qualname": "MRIDCNativeMixedPrecisionPlugin", "type": "class", "doc": "<p>Native Mixed Precision Plugin for MRIDC.</p>\n", "bases": "pytorch_lightning.plugins.precision.native_amp.NativeMixedPrecisionPlugin"}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"fullname": "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__", "modulename": "mridc.collections.common.parts.ptl_overrides", "qualname": "MRIDCNativeMixedPrecisionPlugin.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, init_scale: float = 4294967296, growth_interval: int = 1000)", "funcdef": "def"}, "mridc.collections.common.parts.rnn_utils": {"fullname": "mridc.collections.common.parts.rnn_utils", "modulename": "mridc.collections.common.parts.rnn_utils", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"fullname": "mridc.collections.common.parts.rnn_utils.rnn_weights_init", "modulename": "mridc.collections.common.parts.rnn_utils", "qualname": "rnn_weights_init", "type": "function", "doc": "<h1 id=\"todo-check-if-this-is-the-correct-way-to-initialize-rnn-weights\">TODO: check if this is the correct way to initialize RNN weights</h1>\n\n<p>Initialize different weights in Transformer model.\nArgs:\n    module: torch.nn.Module to be initialized\n    std_init_range: standard deviation of normal initializer\n    xavier: if True, xavier initializer will be used in Linear layers\n        as was proposed in AIAYN paper, otherwise normal initializer\n        will be used (like in BERT paper)</p>\n", "signature": "(module, std_init_range=0.02, xavier=True)", "funcdef": "def"}, "mridc.collections.common.parts.utils": {"fullname": "mridc.collections.common.parts.utils", "modulename": "mridc.collections.common.parts.utils", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.common.parts.utils.to_tensor": {"fullname": "mridc.collections.common.parts.utils.to_tensor", "modulename": "mridc.collections.common.parts.utils", "qualname": "to_tensor", "type": "function", "doc": "<p>Converts a numpy array to a torch tensor.</p>\n\n<p>For complex arrays, the real and imaginary parts are stacked along the last\ndimension.</p>\n\n<p>Args:\n    data: Input numpy array to be converted to torch.</p>\n\n<p>Returns:\n    Torch tensor version of data.</p>\n", "signature": "(data: numpy.ndarray) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"fullname": "mridc.collections.common.parts.utils.tensor_to_complex_np", "modulename": "mridc.collections.common.parts.utils", "qualname": "tensor_to_complex_np", "type": "function", "doc": "<p>Converts a torch tensor to a numpy array.</p>\n\n<p>Args:\n    data: Input torch tensor to be converted to numpy.</p>\n\n<p>Returns:\n    Complex Numpy array version of data.</p>\n", "signature": "(data: torch.Tensor) -> numpy.ndarray", "funcdef": "def"}, "mridc.collections.common.parts.utils.complex_mul": {"fullname": "mridc.collections.common.parts.utils.complex_mul", "modulename": "mridc.collections.common.parts.utils", "qualname": "complex_mul", "type": "function", "doc": "<p>Complex multiplication.</p>\n\n<p>This multiplies two complex tensors assuming that they are both stored as\nreal arrays with the last dimension being the complex dimension.</p>\n\n<p>Args:\n    x: A PyTorch tensor with the last dimension of size 2.\n    y: A PyTorch tensor with the last dimension of size 2.</p>\n\n<p>Returns:\n    A PyTorch tensor with the last dimension of size 2.</p>\n", "signature": "(x: torch.Tensor, y: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.complex_conj": {"fullname": "mridc.collections.common.parts.utils.complex_conj", "modulename": "mridc.collections.common.parts.utils", "qualname": "complex_conj", "type": "function", "doc": "<p>Complex conjugate.</p>\n\n<p>This applies the complex conjugate assuming that the input array has the\nlast dimension as the complex dimension.</p>\n\n<p>Args:\n    x: A PyTorch tensor with the last dimension of size 2.</p>\n\n<p>Returns:\n    A PyTorch tensor with the last dimension of size 2.</p>\n", "signature": "(x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.complex_abs": {"fullname": "mridc.collections.common.parts.utils.complex_abs", "modulename": "mridc.collections.common.parts.utils", "qualname": "complex_abs", "type": "function", "doc": "<p>Compute the absolute value of a complex valued input tensor.</p>\n\n<p>Args:\n    data: A complex valued tensor, where the size of the final dimension\n        should be 2.</p>\n\n<p>Returns:\n    Absolute value of data.</p>\n", "signature": "(data: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.complex_abs_sq": {"fullname": "mridc.collections.common.parts.utils.complex_abs_sq", "modulename": "mridc.collections.common.parts.utils", "qualname": "complex_abs_sq", "type": "function", "doc": "<p>Compute the squared absolute value of a complex tensor.</p>\n\n<p>Args:\n    data: A complex valued tensor, where the size of the final dimension\n        should be 2.</p>\n\n<p>Returns:\n    Squared absolute value of data.</p>\n", "signature": "(data: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.rss": {"fullname": "mridc.collections.common.parts.utils.rss", "modulename": "mridc.collections.common.parts.utils", "qualname": "rss", "type": "function", "doc": "<p>Compute the Root Sum of Squares (RSS).</p>\n\n<p>RSS is computed assuming that dim is the coil dimension.</p>\n\n<p>Args:\n    data: The input tensor\n    dim: The dimensions along which to apply the RSS transform</p>\n\n<p>Returns:\n    The RSS value.</p>\n", "signature": "(data: torch.Tensor, dim: int = 0) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.rss_complex": {"fullname": "mridc.collections.common.parts.utils.rss_complex", "modulename": "mridc.collections.common.parts.utils", "qualname": "rss_complex", "type": "function", "doc": "<p>Compute the Root Sum of Squares (RSS) for complex inputs.</p>\n\n<p>RSS is computed assuming that dim is the coil dimension.</p>\n\n<p>Args:\n    data: The input tensor\n    dim: The dimensions along which to apply the RSS transform</p>\n\n<p>Returns:\n    The RSS value.</p>\n", "signature": "(data: torch.Tensor, dim: int = 0) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.sense": {"fullname": "mridc.collections.common.parts.utils.sense", "modulename": "mridc.collections.common.parts.utils", "qualname": "sense", "type": "function", "doc": "<p>The SENSitivity Encoding (SENSE) transform [1].</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Pruessmann KP, Weiger M, Scheidegger MB, Boesiger P. SENSE: Sensitivity encoding for fast MRI.\nMagn Reson Med 1999; 42:952-962.</p>\n\n<p>Args:\n    data: The input tensor\n    sensitivity_maps: The sensitivity maps\n    dim: The coil dimension</p>\n\n<p>Returns:\n    A coil-combined image.</p>\n", "signature": "(\n    data: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    dim: int = 0\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.coil_combination": {"fullname": "mridc.collections.common.parts.utils.coil_combination", "modulename": "mridc.collections.common.parts.utils", "qualname": "coil_combination", "type": "function", "doc": "<p>Coil combination.</p>\n\n<p>Args:\n    data: The input tensor.\n    sensitivity_maps: The sensitivity maps.\n    method: The coil combination method.\n    dim: The dimensions along which to apply the coil combination transform.</p>\n\n<p>Returns:\n    Coil combined data.</p>\n", "signature": "(\n    data: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    method: str = 'SENSE',\n    dim: int = 0\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.common.parts.utils.save_reconstructions": {"fullname": "mridc.collections.common.parts.utils.save_reconstructions", "modulename": "mridc.collections.common.parts.utils", "qualname": "save_reconstructions", "type": "function", "doc": "<p>Save reconstruction images.</p>\n\n<p>This function writes to h5 files that are appropriate for submission to the\nleaderboard.</p>\n\n<p>Args:\n    reconstructions: A dictionary mapping input filenames to corresponding\n        reconstructions.\n    out_dir: Path to the output directory where the reconstructions should\n        be saved.</p>\n", "signature": "(reconstructions: Dict[str, numpy.ndarray], out_dir: pathlib.Path)", "funcdef": "def"}, "mridc.collections.common.parts.utils.check_stacked_complex": {"fullname": "mridc.collections.common.parts.utils.check_stacked_complex", "modulename": "mridc.collections.common.parts.utils", "qualname": "check_stacked_complex", "type": "function", "doc": "<p>Check if tensor is stacked complex (real &amp; imag parts stacked along last dim) and convert it to a combined complex\ntensor.</p>\n\n<p>Args:\n    data: A complex valued tensor, where the size of the final dimension might be 2.</p>\n\n<p>Returns:\n    A complex valued tensor.</p>\n", "signature": "(data: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction": {"fullname": "mridc.collections.reconstruction", "modulename": "mridc.collections.reconstruction", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.data": {"fullname": "mridc.collections.reconstruction.data", "modulename": "mridc.collections.reconstruction.data", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.data.mri_data": {"fullname": "mridc.collections.reconstruction.data.mri_data", "modulename": "mridc.collections.reconstruction.data.mri_data", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.data.mri_data.et_query": {"fullname": "mridc.collections.reconstruction.data.mri_data.et_query", "modulename": "mridc.collections.reconstruction.data.mri_data", "qualname": "et_query", "type": "function", "doc": "<p>Query an XML element for a list of attributes.</p>\n\n<p>Args:\n    root: The root element of the XML tree.\n    qlist: A list of strings, each of which is an attribute name.\n    namespace: The namespace of the XML tree.</p>\n\n<p>Returns:\n    A string containing the value of the last attribute in the list.</p>\n", "signature": "(\n    root: str,\n    qlist: Sequence[str],\n    namespace: str = 'https://www.ismrm.org/ISMRMRD'\n) -> str", "funcdef": "def"}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"fullname": "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset", "modulename": "mridc.collections.reconstruction.data.mri_data", "qualname": "FastMRICombinedSliceDataset", "type": "class", "doc": "<p>A dataset that combines multiple datasets.</p>\n", "bases": "typing.Generic[+T_co]"}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"fullname": "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__", "modulename": "mridc.collections.reconstruction.data.mri_data", "qualname": "FastMRICombinedSliceDataset.__init__", "type": "function", "doc": "<p>Args:\n    roots: Paths to the datasets.\n    challenges: \"singlecoil\" or \"multicoil\" depending on which challenge to use.\n    sense_roots: Load pre-computed (stored) sensitivity maps.\n    transforms: Optional; A sequence of callable objects that preprocesses the raw data into appropriate form.\n        The transform function should take 'kspace', 'target', 'attributes', 'filename', and 'slice' as inputs.\n        'target' may be null for test data.\n    sample_rates: Optional; A sequence of floats between 0 and 1. This controls what fraction of the slices\n        should be loaded. When creating subsampled datasets either set sample_rates (sample by slices) or\n        volume_sample_rates (sample by volumes) but not both.\n    volume_sample_rates: Optional; A sequence of floats between 0 and 1. This controls what fraction of the\n        volumes should be loaded. When creating subsampled datasets either set sample_rates (sample by slices)\n        or volume_sample_rates (sample by volumes) but not both.\n    use_dataset_cache: Whether to cache dataset metadata. This is very useful for large datasets like the brain\n        data.\n    dataset_cache_file: Optional; A file in which to cache dataset information for faster load times.\n    num_cols: Optional; If provided, only slices with the desired number of columns will be considered.</p>\n", "signature": "(\n    self,\n    roots: Sequence[pathlib.Path],\n    challenges: Sequence[str],\n    sense_roots: Optional[Sequence[pathlib.Path]] = None,\n    transforms: Optional[Sequence[Optional[Callable]]] = None,\n    sample_rates: Optional[Sequence[Optional[float]]] = None,\n    volume_sample_rates: Optional[Sequence[Optional[float]]] = None,\n    use_dataset_cache: bool = False,\n    dataset_cache_file: Union[str, pathlib.Path, os.PathLike] = 'dataset_cache.yaml',\n    num_cols: Optional[Tuple[int]] = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"fullname": "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset", "modulename": "mridc.collections.reconstruction.data.mri_data", "qualname": "FastMRISliceDataset", "type": "class", "doc": "<p>A dataset that loads slices from a single dataset.</p>\n", "bases": "typing.Generic[+T_co]"}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"fullname": "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__", "modulename": "mridc.collections.reconstruction.data.mri_data", "qualname": "FastMRISliceDataset.__init__", "type": "function", "doc": "<p>Args:\n    root: Path to the dataset.\n    challenge: \"singlecoil\" or \"multicoil\" depending on which challenge to use.\n    transform: Optional; A sequence of callable objects that preprocesses the raw data into appropriate form.\n        The transform function should take 'kspace', 'target', 'attributes', 'filename', and 'slice' as inputs.\n        'target' may be null for test data.\n    sense_root: Path to the coil sensitivities maps dataset.\n    use_dataset_cache: Whether to cache dataset metadata. This is very useful for large datasets like the brain\n        data.\n    sample_rate: Optional; A sequence of floats between 0 and 1. This controls what fraction of the slices\n        should be loaded. When creating subsampled datasets either set sample_rates (sample by slices) or\n        volume_sample_rates (sample by volumes) but not both.\n    volume_sample_rate: Optional; A sequence of floats between 0 and 1. This controls what fraction of the\n         volumes should be loaded. When creating subsampled datasets either set sample_rates (sample by slices)\n          or volume_sample_rates (sample by volumes) but not both.\n    dataset_cache_file: Optional; A file in which to cache dataset information for faster load times.\n    num_cols: Optional; If provided, only slices with the desired number of columns will be considered.\n    mask_root: Path to stored masks.</p>\n\n<p>Returns:\n    object:</p>\n", "signature": "(\n    self,\n    root: Union[str, pathlib.Path, os.PathLike],\n    challenge: str = 'multicoil',\n    transform: Optional[Callable] = None,\n    sense_root: Union[str, pathlib.Path, os.PathLike] = None,\n    use_dataset_cache: bool = False,\n    sample_rate: Optional[float] = None,\n    volume_sample_rate: Optional[float] = None,\n    dataset_cache_file: Union[str, pathlib.Path, os.PathLike] = 'dataset_cache.yaml',\n    num_cols: Optional[Tuple[int]] = None,\n    mask_root: Union[str, pathlib.Path, os.PathLike] = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample": {"fullname": "mridc.collections.reconstruction.data.subsample", "modulename": "mridc.collections.reconstruction.data.subsample", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"fullname": "mridc.collections.reconstruction.data.subsample.temp_seed", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "temp_seed", "type": "function", "doc": "<p>Temporarily sets the seed of the given random number generator.</p>\n\n<p>Args:\n    rng: The random number generator.\n    seed: The seed to set.</p>\n\n<p>Returns:\n    A context manager.</p>\n", "signature": "(\n    rng: <module 'numpy.random' from '/home/dimitris/anaconda3/envs/mridc/lib/python3.9/site-packages/numpy/random/__init__.py'>,\n    seed: Union[int, Tuple[int, ...], NoneType]\n)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"fullname": "mridc.collections.reconstruction.data.subsample.MaskFunc", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "MaskFunc", "type": "class", "doc": "<p>A class that defines a mask function.</p>\n"}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"fullname": "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "MaskFunc.__init__", "type": "function", "doc": "<p>Initialize the mask function.</p>\n\n<p>Args:\n    center_fractions: Fraction of low-frequency columns to be retained. If multiple values are provided, then\n        one of these numbers is chosen uniformly each time. For 2D setting this value corresponds to setting\n        the Full-Width-Half-Maximum.\n    accelerations: Amount of under-sampling. This should have the same length as center_fractions. If multiple\n    values are provided, then one of these is chosen uniformly each time.</p>\n", "signature": "(\n    self,\n    center_fractions: Sequence[float],\n    accelerations: Sequence[int]\n)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"fullname": "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "MaskFunc.choose_acceleration", "type": "function", "doc": "<p>Choose acceleration.</p>\n\n<p>Returns:\n    Acceleration.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"fullname": "mridc.collections.reconstruction.data.subsample.RandomMaskFunc", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "RandomMaskFunc", "type": "class", "doc": "<p>RandomMaskFunc creates a sub-sampling mask of a given shape.</p>\n\n<p>The mask selects a subset of columns from the input k-space data. If the\nk-space data has N columns, the mask picks out:\n    1. N_low_freqs = (N * center_fraction) columns in the center\n       corresponding to low-frequencies.\n    2. The other columns are selected uniformly at random with a\n    probability equal to: prob = (N / acceleration - N_low_freqs) /\n    (N - N_low_freqs). This ensures that the expected number of columns\n    selected is equal to (N / acceleration).</p>\n\n<p>It is possible to use multiple center_fractions and accelerations, in which\ncase one possible (center_fraction, acceleration) is chosen uniformly at\nrandom each time the RandomMaskFunc object is called.</p>\n\n<p>For example, if accelerations = [4, 8] and center_fractions = [0.08, 0.04],\nthen there is a 50% probability that 4-fold acceleration with 8% center\nfraction is selected and a 50% probability that 8-fold acceleration with 4%\ncenter fraction is selected.</p>\n", "bases": "MaskFunc"}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"fullname": "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "EquispacedMaskFunc", "type": "class", "doc": "<p>EquispacedMaskFunc creates a sub-sampling mask of a given shape.</p>\n\n<p>The mask selects a subset of columns from the input k-space data. If the\nk-space data has N columns, the mask picks out:\n    1. N_low_freqs = (N * center_fraction) columns in the center\n       corresponding to low-frequencies.\n    2. The other columns are selected with equal spacing at a proportion\n       that reaches the desired acceleration rate taking into consideration\n       the number of low frequencies. This ensures that the expected number\n       of columns selected is equal to (N / acceleration)</p>\n\n<p>It is possible to use multiple center_fractions and accelerations, in which\ncase one possible (center_fraction, acceleration) is chosen uniformly at\nrandom each time the EquispacedMaskFunc object is called.</p>\n\n<p>Note that this function may not give equispaced samples (documented in\nhttps://github.com/facebookresearch/fastMRI/issues/54), which will require\nmodifications to standard GRAPPA approaches. Nonetheless, this aspect of\nthe function has been preserved to match the public multicoil data.</p>\n", "bases": "MaskFunc"}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian1DMaskFunc", "type": "class", "doc": "<p>Creates a 1D sub-sampling mask of a given shape.</p>\n\n<p>For autocalibration purposes, data points near the k-space center will be fully sampled within an ellipse of which\nthe half-axes will set to the set scale % of the fully sampled region. The remaining points will be sampled\naccording to a Gaussian distribution.</p>\n\n<p>The center fractions here act as Full-Width at Half-Maximum (FWHM) values.</p>\n", "bases": "MaskFunc"}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian1DMaskFunc.gaussian_kspace", "type": "function", "doc": "<p>Creates a Gaussian sampled k-space center.</p>\n\n<p>Returns:\n    A numpy array of the k-space center.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian1DMaskFunc.gaussian_coordinates", "type": "function", "doc": "<p>Creates a Gaussian sampled k-space coordinates.</p>\n\n<p>Returns:\n    A numpy array of the k-space coordinates.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian1DMaskFunc.gaussian_kernel", "type": "function", "doc": "<p>Creates a Gaussian sampled k-space kernel.</p>\n\n<p>Returns:\n    A numpy array of the k-space kernel.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian2DMaskFunc", "type": "class", "doc": "<p>Creates a 2D sub-sampling mask of a given shape.</p>\n\n<p>For autocalibration purposes, data points near the k-space center will be fully sampled within an ellipse of which\nthe half-axes will set to the set scale % of the fully sampled region. The remaining points will be sampled\naccording to a Gaussian distribution.</p>\n\n<p>The center fractions here act as Full-Width at Half-Maximum (FWHM) values.</p>\n", "bases": "MaskFunc"}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian2DMaskFunc.gaussian_kspace", "type": "function", "doc": "<p>Creates a Gaussian sampled k-space center.</p>\n\n<p>Returns:\n    A numpy array of the k-space center.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian2DMaskFunc.gaussian_coordinates", "type": "function", "doc": "<p>Creates a Gaussian sampled k-space coordinates.</p>\n\n<p>Returns:\n    A numpy array of the k-space coordinates.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"fullname": "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Gaussian2DMaskFunc.gaussian_kernel", "type": "function", "doc": "<p>Creates a Gaussian kernel.</p>\n\n<p>Returns:\n    A numpy array of the kernel.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"fullname": "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Poisson2DMaskFunc", "type": "class", "doc": "<p>Creates a 2D sub-sampling mask of a given shape.</p>\n\n<p>For autocalibration purposes, data points near the k-space center will be fully sampled within an ellipse of which\nthe half-axes will set to the set scale % of the fully sampled region. The remaining points will be sampled\naccording to a (variable density) Poisson distribution.</p>\n\n<p>For a given acceleration factor to be accurate, the scale for the fully sampled center should remain at the default\n0.02. A predefined list is used to convert the acceleration factor to the appropriate r parameter needed for the\nvariable density calculation. This list has been made to accommodate acceleration factors of 4 up to 21, rounding\noff to the nearest one available. As such, acceleration factors outside this range cannot be used.</p>\n", "bases": "MaskFunc"}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"fullname": "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Poisson2DMaskFunc.poisson_disc2d", "type": "function", "doc": "<p>Creates a 2D Poisson disc pattern.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"fullname": "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "Poisson2DMaskFunc.centered_circle", "type": "function", "doc": "<p>Creates a boolean centered circle image using the scale as a radius.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"fullname": "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type", "modulename": "mridc.collections.reconstruction.data.subsample", "qualname": "create_mask_for_mask_type", "type": "function", "doc": "<p>Creates a MaskFunc object for the given mask type.</p>\n\n<p>Args:\n    mask_type_str: The string representation of the mask type.\n    center_fractions: The center fractions for the mask.\n        # TODO: For gaussian masking serves as Full-Width-at-Half-Maximum, consider renaming.\n    accelerations: The accelerations for the mask.</p>\n\n<p>Returns:\n    A MaskFunc object.</p>\n", "signature": "(\n    mask_type_str: str,\n    center_fractions: Sequence[float],\n    accelerations: Sequence[int]\n) -> mridc.collections.reconstruction.data.subsample.MaskFunc", "funcdef": "def"}, "mridc.collections.reconstruction.metrics": {"fullname": "mridc.collections.reconstruction.metrics", "modulename": "mridc.collections.reconstruction.metrics", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.metrics.evaluate": {"fullname": "mridc.collections.reconstruction.metrics.evaluate", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.mse", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "mse", "type": "function", "doc": "<p>Compute Mean Squared Error (MSE)</p>\n", "signature": "(gt: numpy.ndarray, pred: numpy.ndarray) -> float", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.nmse", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "nmse", "type": "function", "doc": "<p>Compute Normalized Mean Squared Error (NMSE)</p>\n", "signature": "(gt: numpy.ndarray, pred: numpy.ndarray) -> float", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.psnr", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "psnr", "type": "function", "doc": "<p>Compute Peak Signal to Noise Ratio metric (PSNR)</p>\n", "signature": "(\n    gt: numpy.ndarray,\n    pred: numpy.ndarray,\n    maxval: numpy.ndarray = None\n) -> float", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.ssim", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "ssim", "type": "function", "doc": "<p>Compute Structural Similarity Index Metric (SSIM)</p>\n", "signature": "(\n    gt: numpy.ndarray,\n    pred: numpy.ndarray,\n    maxval: numpy.ndarray = None\n) -> float", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.Metrics", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "Metrics", "type": "class", "doc": "<p>Maintains running statistics for a given collection of metrics.</p>\n"}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "Metrics.__init__", "type": "function", "doc": "<p>Args:\n    metric_funcs (dict): A dict where the keys are metric names and the\n        values are Python functions for evaluating that metric.\n    output_path:\n    method:</p>\n", "signature": "(self, metric_funcs, output_path, method)", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.Metrics.push", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "Metrics.push", "type": "function", "doc": "<p>Pushes a new batch of metrics to the running statistics.</p>\n\n<p>Args:\n    target: target image\n    recons: reconstructed image</p>\n\n<p>Returns:\n    dict: A dict where the keys are metric names and the values are</p>\n", "signature": "(self, target, recons)", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.Metrics.means", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "Metrics.means", "type": "function", "doc": "<p>Mean of the means of each metric.</p>\n\n<p>Returns:\n    dict: A dict where the keys are metric names and the values are</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "Metrics.stddevs", "type": "function", "doc": "<p>Standard deviation of the means of each metric.</p>\n\n<p>Returns:\n    dict: A dict where the keys are metric names and the values are</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"fullname": "mridc.collections.reconstruction.metrics.evaluate.evaluate", "modulename": "mridc.collections.reconstruction.metrics.evaluate", "qualname": "evaluate", "type": "function", "doc": "<p>Evaluate the reconstruction.\nTODO: Refine this function.</p>\n", "signature": "(\n    arguments,\n    reconstruction_key,\n    mask_background,\n    output_path,\n    method,\n    acc,\n    no_params,\n    slice_start,\n    slice_end\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models": {"fullname": "mridc.collections.reconstruction.models", "modulename": "mridc.collections.reconstruction.models", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.base": {"fullname": "mridc.collections.reconstruction.models.base", "modulename": "mridc.collections.reconstruction.models.base", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel", "type": "class", "doc": "<p>Base class for all MRIReconstruction models.</p>\n", "bases": "mridc.core.classes.modelPT.ModelPT, abc.ABC"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.process_loss", "type": "function", "doc": "<p>Calculate the loss.</p>\n", "signature": "(self, target, pred, _loss_fn)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.process_inputs", "type": "function", "doc": "<p>Process the inputs to the network.</p>\n", "signature": "(y, mask)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.training_step", "type": "function", "doc": "<p>Training step for the model.\nArgs:\n    batch: A dictionary of the form {\n        'y': subsampled kspace\n        'sensitivity_maps': sensitivity_maps\n        'mask': mask\n        'init_pred': initial prediction. For example zero-filled or PICS.\n        'target': target\n        'fname': filename\n        'slice_idx': slice_idx\n        'acc': acceleration factor\n        'max_value': maximum value of the magnitude image space\n        'crop_size': crop size\n        }\n    batch_idx: The index of the batch.\nReturns:\n    A dictionary of the form {\n        'loss': loss value,\n        'log': log,\n    }</p>\n", "signature": "(\n    self,\n    batch: Dict[float, torch.Tensor],\n    batch_idx: int\n) -> Dict[str, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.validation_step", "type": "function", "doc": "<p>Validation step for the model.</p>\n", "signature": "(self, batch: Dict[float, torch.Tensor], batch_idx: int) -> Dict", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.test_step", "type": "function", "doc": "<p>Test step for the model.</p>\n", "signature": "(\n    self,\n    batch: Dict[float, torch.Tensor],\n    batch_idx: int\n) -> Tuple[str, int, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.log_image", "type": "function", "doc": "<p>Log an image.</p>\n", "signature": "(self, name, image)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.validation_epoch_end", "type": "function", "doc": "<p>Validation epoch end. Called at the end of validation to aggregate outputs.</p>\n", "signature": "(self, outputs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.test_epoch_end", "type": "function", "doc": "<p>Test epoch end.</p>\n", "signature": "(self, outputs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.setup_training_data", "type": "function", "doc": "<p>Setup the training data.</p>\n", "signature": "(self, train_data_config: Optional[omegaconf.dictconfig.DictConfig])", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.setup_validation_data", "type": "function", "doc": "<p>Setup the validation data.</p>\n", "signature": "(self, val_data_config: Optional[omegaconf.dictconfig.DictConfig])", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"fullname": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseMRIReconstructionModel.setup_test_data", "type": "function", "doc": "<p>Setup the test data.</p>\n", "signature": "(self, test_data_config: Optional[omegaconf.dictconfig.DictConfig])", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel", "type": "class", "doc": "<p>Model for learning sensitivity estimation from k-space data.</p>\n\n<p>This model applies an IFFT to multichannel k-space data and then a U-Net to the coil images to estimate coil\nsensitivities.</p>\n", "bases": "torch.nn.modules.module.Module, abc.ABC"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel.__init__", "type": "function", "doc": "<p>Initialize the model.</p>\n\n<p>Args:\n    chans : Number of output channels of the first convolution layer.\n    num_pools : Number of down-sampling and up-sampling layers.\n    in_chan s: Number of channels in the input to the U-Net model.\n    out_chans : Number of channels in the output to the U-Net model.\n    drop_prob : Dropout probability.\n    padding_size: Size of the zero-padding.\n    mask_type : Type of mask to use.\n    fft_type : Type of FFT to use.\n    normalize : Whether to normalize the data.\n    mask_center: Whether to mask the center of the sensitivity map.</p>\n", "signature": "(\n    self,\n    chans: int = 8,\n    num_pools: int = 4,\n    in_chans: int = 2,\n    out_chans: int = 2,\n    drop_prob: float = 0.0,\n    padding_size: int = 15,\n    mask_type: str = '2D',\n    fft_type: str = 'orthogonal',\n    normalize: bool = True,\n    mask_center: bool = True\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel.chans_to_batch_dim", "type": "function", "doc": "<p>Convert the last dimension of the input to the batch dimension.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    Tuple of the converted tensor and the original last dimension.</p>\n", "signature": "(x: torch.Tensor) -> Tuple[torch.Tensor, int]", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel.batch_chans_to_chan_dim", "type": "function", "doc": "<p>Convert the batch dimension of the input to the last dimension.</p>\n\n<p>Args:\n    x: Input tensor.\n    batch_size: Original batch size.</p>\n\n<p>Returns:\n    Converted tensor.</p>\n", "signature": "(x: torch.Tensor, batch_size: int) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel.divide_root_sum_of_squares", "type": "function", "doc": "<p>Divide the input by the root of the sum of squares of the magnitude of each complex number.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    RSS output tensor.</p>\n", "signature": "(x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel.get_pad_and_num_low_freqs", "type": "function", "doc": "<p>Get the padding to apply to the input to make it square and the number of low frequencies to keep.</p>\n\n<p>Args:\n    mask (): Mask to use.\n    num_low_frequencies (): Number of low frequencies to keep. If None, keep all.</p>\n\n<p>Returns:\n    Tuple of the padding and the number of low frequencies to keep.</p>\n", "signature": "(\n    mask: torch.Tensor,\n    num_low_frequencies: Optional[int] = None\n) -> Tuple[torch.Tensor, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"fullname": "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward", "modulename": "mridc.collections.reconstruction.models.base", "qualname": "BaseSensitivityModel.forward", "type": "function", "doc": "<p>Forward pass of the model.</p>\n\n<p>Args:\n    masked_kspace: Masked k-space data.\n    mask: Mask to apply to the k-space data.\n    num_low_frequencies: Number of low frequencies to use.</p>\n\n<p>Returns:\n    Normalized UNet output tensor.</p>\n", "signature": "(\n    self,\n    masked_kspace: torch.Tensor,\n    mask: torch.Tensor,\n    num_low_frequencies: Optional[int] = None\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.cascadenet": {"fullname": "mridc.collections.reconstruction.models.cascadenet", "modulename": "mridc.collections.reconstruction.models.cascadenet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"fullname": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "modulename": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"fullname": "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock", "modulename": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "qualname": "CascadeNetBlock", "type": "class", "doc": "<p>Model block for CascadeNet &amp; Convolution Recurrent Neural Network.</p>\n\n<p>This model applies a combination of soft data consistency with the input model as a regularizer.\nA series of these blocks can be stacked to form the full variational network.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__", "modulename": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "qualname": "CascadeNetBlock.__init__", "type": "function", "doc": "<p>Initialize the model block.</p>\n\n<p>Args:\n    model: Model to apply soft data consistency.\n    fft_type: Type of FFT to use.\n    no_dc: Whether to remove the DC component.</p>\n", "signature": "(\n    self,\n    model: torch.nn.modules.module.Module,\n    fft_type: str = 'orthogonal',\n    no_dc: bool = False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"fullname": "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand", "modulename": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "qualname": "CascadeNetBlock.sens_expand", "type": "function", "doc": "<p>Expand the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction expanded to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"fullname": "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce", "modulename": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "qualname": "CascadeNetBlock.sens_reduce", "type": "function", "doc": "<p>Reduce the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction reduced to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"fullname": "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward", "modulename": "mridc.collections.reconstruction.models.cascadenet.ccnn_block", "qualname": "CascadeNetBlock.forward", "type": "function", "doc": "<p>Forward pass of the model.</p>\n\n<p>Args:\n    pred: Predicted k-space data.\n    ref_kspace: Reference k-space data.\n    sens_maps: Sensitivity maps.\n    mask: Mask to apply to the data.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>Reconstructed image.\n</code></pre>\n", "signature": "(\n    self,\n    pred: torch.Tensor,\n    ref_kspace: torch.Tensor,\n    sens_maps: torch.Tensor,\n    mask: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.ccnn": {"fullname": "mridc.collections.reconstruction.models.ccnn", "modulename": "mridc.collections.reconstruction.models.ccnn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"fullname": "mridc.collections.reconstruction.models.ccnn.CascadeNet", "modulename": "mridc.collections.reconstruction.models.ccnn", "qualname": "CascadeNet", "type": "class", "doc": "<p>Deep Cascade of Convolutional Neural Networks model implementation as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Schlemper, J., Caballero, J., Hajnal, J. V., Price, A., &amp; Rueckert, D.\nA Deep Cascade of Convolutional Neural Networks for MR Image Reconstruction.\nInformation Processing in Medical Imaging (IPMI), 2017. Available at: https://arxiv.org/pdf/1703.00555.pdf</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"fullname": "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__", "modulename": "mridc.collections.reconstruction.models.ccnn", "qualname": "CascadeNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"fullname": "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward", "modulename": "mridc.collections.reconstruction.models.ccnn", "qualname": "CascadeNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.cirim": {"fullname": "mridc.collections.reconstruction.models.cirim", "modulename": "mridc.collections.reconstruction.models.cirim", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"fullname": "mridc.collections.reconstruction.models.cirim.CIRIM", "modulename": "mridc.collections.reconstruction.models.cirim", "qualname": "CIRIM", "type": "class", "doc": "<p>Cascades of Independently Recurrent Inference Machines implementation as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Karkalousos, D. et al. (2021) \u2018Assessment of Data Consistency through Cascades of Independently Recurrent\nInference Machines for fast and robust accelerated MRI reconstruction\u2019.\nAvailable at: https://arxiv.org/abs/2111.15498v1</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"fullname": "mridc.collections.reconstruction.models.cirim.CIRIM.__init__", "modulename": "mridc.collections.reconstruction.models.cirim", "qualname": "CIRIM.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"fullname": "mridc.collections.reconstruction.models.cirim.CIRIM.forward", "modulename": "mridc.collections.reconstruction.models.cirim", "qualname": "CIRIM.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final estimation of the network.\n     If self.accumulate_loss is True, returns a list of all intermediate estimates.\n     If False, returns the final estimate.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> Union[Generator, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"fullname": "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred", "modulename": "mridc.collections.reconstruction.models.cirim", "qualname": "CIRIM.process_intermediate_pred", "type": "function", "doc": "<p>Process the intermediate eta to be used in the loss function.</p>\n", "signature": "(self, pred, sensitivity_maps, target, do_coil_combination=False)", "funcdef": "def"}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"fullname": "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss", "modulename": "mridc.collections.reconstruction.models.cirim", "qualname": "CIRIM.process_loss", "type": "function", "doc": "<p>Calculate the loss.</p>\n", "signature": "(self, target, eta, _loss_fn)", "funcdef": "def"}, "mridc.collections.reconstruction.models.conv": {"fullname": "mridc.collections.reconstruction.models.conv", "modulename": "mridc.collections.reconstruction.models.conv", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.conv.conv2d": {"fullname": "mridc.collections.reconstruction.models.conv.conv2d", "modulename": "mridc.collections.reconstruction.models.conv.conv2d", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"fullname": "mridc.collections.reconstruction.models.conv.conv2d.Conv2d", "modulename": "mridc.collections.reconstruction.models.conv.conv2d", "qualname": "Conv2d", "type": "class", "doc": "<p>Implementation of a simple cascade of 2D convolutions.\nIf batchnorm is set to True, batch normalization layer is applied after each convolution.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"fullname": "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__", "modulename": "mridc.collections.reconstruction.models.conv.conv2d", "qualname": "Conv2d.__init__", "type": "function", "doc": "<p>Inits Conv2d.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.\nhidden_channels: int\n    Number of hidden channels.\nn_convs: int\n    Number of convolutional layers.\nactivation: nn.Module\n    Activation function.\nbatchnorm: bool\n    If True a batch normalization layer is applied after every convolution.</p>\n", "signature": "(\n    self,\n    in_channels,\n    out_channels,\n    hidden_channels,\n    n_convs=3,\n    activation=PReLU(num_parameters=1),\n    batchnorm=False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"fullname": "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward", "modulename": "mridc.collections.reconstruction.models.conv.conv2d", "qualname": "Conv2d.forward", "type": "function", "doc": "<p>Performs the forward pass of Conv2d.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    Convoluted output.</p>\n", "signature": "(self, x)", "funcdef": "def"}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"fullname": "mridc.collections.reconstruction.models.conv.gruconv2d", "modulename": "mridc.collections.reconstruction.models.conv.gruconv2d", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"fullname": "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d", "modulename": "mridc.collections.reconstruction.models.conv.gruconv2d", "qualname": "GRUConv2d", "type": "class", "doc": "<p>Implementation of a GRU followed by a number of 2D convolutions inspired by [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] C. Qin, J. Schlemper, J. Caballero, A. N. Price, J. V. Hajnal and D. Rueckert,\n\"Convolutional Recurrent Neural Networks for Dynamic MR Image Reconstruction,\" in IEEE Transactions on Medical\nImaging, vol. 38, no. 1, pp. 280-290, Jan. 2019, doi: 10.1109/TMI.2018.2863670.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"fullname": "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__", "modulename": "mridc.collections.reconstruction.models.conv.gruconv2d", "qualname": "GRUConv2d.__init__", "type": "function", "doc": "<p>Inits Conv2d.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.\nhidden_channels: int\n    Number of hidden channels.\nn_convs: int\n    Number of convolutional layers.\nactivation: nn.Module\n    Activation function.\nbatchnorm: bool\n    If True a batch normalization layer is applied after every convolution.</p>\n", "signature": "(\n    self,\n    in_channels,\n    out_channels,\n    hidden_channels,\n    n_convs=3,\n    activation='ReLU',\n    batchnorm=False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"fullname": "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward", "modulename": "mridc.collections.reconstruction.models.conv.gruconv2d", "qualname": "GRUConv2d.forward", "type": "function", "doc": "<p>Performs the forward pass of Conv2d.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.\nprevious_xs: torch.Tensor\n    List of previous input tensors.\nhx: torch.Tensor\n    Initial hidden state.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    Convoluted output.</p>\n", "signature": "(self, x, hx: Optional[torch.Tensor] = None)", "funcdef": "def"}, "mridc.collections.reconstruction.models.convrecnet": {"fullname": "mridc.collections.reconstruction.models.convrecnet", "modulename": "mridc.collections.reconstruction.models.convrecnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "DataConsistencyLayer", "type": "class", "doc": "<p>Data consistency layer for the CRNN.</p>\n\n<p>This layer is used to ensure that the output of the CRNN is the same as the input.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "DataConsistencyLayer.__init__", "type": "function", "doc": "<p>Initializes the data consistency layer.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "DataConsistencyLayer.forward", "type": "function", "doc": "<p>Forward pass of the data consistency layer.</p>\n", "signature": "(self, pred_kspace, ref_kspace, mask)", "funcdef": "def"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "RecurrentConvolutionalNetBlock", "type": "class", "doc": "<p>Model block for Recurrent Convolution Neural Network inspired by [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] C. Qin, J. Schlemper, J. Caballero, A. N. Price, J. V. Hajnal and D. Rueckert,\n\"Convolutional Recurrent Neural Networks for Dynamic MR Image Reconstruction,\" in IEEE Transactions on Medical\nImaging, vol. 38, no. 1, pp. 280-290, Jan. 2019, doi: 10.1109/TMI.2018.2863670.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "RecurrentConvolutionalNetBlock.__init__", "type": "function", "doc": "<p>Initialize the model block.</p>\n\n<p>Args:\n    model: Model to apply soft data consistency.\n    num_iterations: Number of iterations.\n    fft_type: Type of FFT to use.\n    no_dc: Whether to remove the DC component.</p>\n", "signature": "(\n    self,\n    model: torch.nn.modules.module.Module,\n    num_iterations: int = 10,\n    fft_type: str = 'orthogonal',\n    no_dc: bool = False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "RecurrentConvolutionalNetBlock.sens_expand", "type": "function", "doc": "<p>Expand the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction expanded to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "RecurrentConvolutionalNetBlock.sens_reduce", "type": "function", "doc": "<p>Reduce the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction reduced to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"fullname": "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward", "modulename": "mridc.collections.reconstruction.models.convrecnet.crnn_block", "qualname": "RecurrentConvolutionalNetBlock.forward", "type": "function", "doc": "<p>Forward pass of the model.</p>\n\n<p>Args:\n    ref_kspace: Reference k-space data.\n    sens_maps: Sensitivity maps.\n    mask: Mask to apply to the data.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>Reconstructed image.\n</code></pre>\n", "signature": "(\n    self,\n    ref_kspace: torch.Tensor,\n    sens_maps: torch.Tensor,\n    mask: torch.Tensor\n) -> List[Union[torch.Tensor, Any]]", "funcdef": "def"}, "mridc.collections.reconstruction.models.crnn": {"fullname": "mridc.collections.reconstruction.models.crnn", "modulename": "mridc.collections.reconstruction.models.crnn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"fullname": "mridc.collections.reconstruction.models.crnn.CRNNet", "modulename": "mridc.collections.reconstruction.models.crnn", "qualname": "CRNNet", "type": "class", "doc": "<p>Convolutional Recurrent Neural Network implementation inspired by [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] C. Qin, J. Schlemper, J. Caballero, A. N. Price, J. V. Hajnal and D. Rueckert,\n\"Convolutional Recurrent Neural Networks for Dynamic MR Image Reconstruction,\" in IEEE Transactions on Medical\nImaging, vol. 38, no. 1, pp. 280-290, Jan. 2019, doi: 10.1109/TMI.2018.2863670.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"fullname": "mridc.collections.reconstruction.models.crnn.CRNNet.__init__", "modulename": "mridc.collections.reconstruction.models.crnn", "qualname": "CRNNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"fullname": "mridc.collections.reconstruction.models.crnn.CRNNet.forward", "modulename": "mridc.collections.reconstruction.models.crnn", "qualname": "CRNNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final estimation of the network.\n     If self.accumulate_loss is True, returns a list of all intermediate estimates.\n     If False, returns the final estimate.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> Union[Generator, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"fullname": "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta", "modulename": "mridc.collections.reconstruction.models.crnn", "qualname": "CRNNet.process_intermediate_eta", "type": "function", "doc": "<p>Process the intermediate eta to be used in the loss function.</p>\n", "signature": "(self, eta, sensitivity_maps, target)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"fullname": "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss", "modulename": "mridc.collections.reconstruction.models.crnn", "qualname": "CRNNet.process_loss", "type": "function", "doc": "<p>Calculate the loss.</p>\n", "signature": "(self, target, eta, _loss_fn)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crossdomain": {"fullname": "mridc.collections.reconstruction.models.crossdomain", "modulename": "mridc.collections.reconstruction.models.crossdomain", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"fullname": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "modulename": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"fullname": "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork", "modulename": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "qualname": "CrossDomainNetwork", "type": "class", "doc": "<p>This performs optimisation in both, k-space (\"K\") and image (\"I\") domains according to domain_sequence.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"fullname": "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__", "modulename": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "qualname": "CrossDomainNetwork.__init__", "type": "function", "doc": "<p>Inits CrossDomainNetwork.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>image_model_list: nn.Module\n    Image domain model list.\nkspace_model_list: Optional[nn.Module]\n    K-space domain model list. If set to None, a correction step is applied. Default: None.\ndomain_sequence: str\n    Domain sequence containing only \"K\" (k-space domain) and/or \"I\" (image domain). Default: \"KIKI\".\nimage_buffer_size: int\n    Image buffer size. Default: 1.\nkspace_buffer_size: int\n    K-space buffer size. Default: 1.\nnormalize_image: bool\n    If True, input is normalized. Default: False.\nfft_type: str\n    Type of FFT.\nkwargs: dict\n    Keyword Arguments.</p>\n", "signature": "(\n    self,\n    image_model_list: torch.nn.modules.module.Module,\n    kspace_model_list: Optional[torch.nn.modules.module.Module] = None,\n    domain_sequence: str = 'KIKI',\n    image_buffer_size: int = 1,\n    kspace_buffer_size: int = 1,\n    normalize_image: bool = False,\n    fft_type: str = 'orthogonal',\n    **kwargs\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"fullname": "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction", "modulename": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "qualname": "CrossDomainNetwork.kspace_correction", "type": "function", "doc": "<p>Performs k-space correction.</p>\n", "signature": "(\n    self,\n    block_idx,\n    image_buffer,\n    kspace_buffer,\n    sampling_mask,\n    sensitivity_map,\n    masked_kspace\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"fullname": "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction", "modulename": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "qualname": "CrossDomainNetwork.image_correction", "type": "function", "doc": "<p>Performs image correction.</p>\n", "signature": "(\n    self,\n    block_idx,\n    image_buffer,\n    kspace_buffer,\n    sampling_mask,\n    sensitivity_map\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"fullname": "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward", "modulename": "mridc.collections.reconstruction.models.crossdomain.crossdomain", "qualname": "CrossDomainNetwork.forward", "type": "function", "doc": "<p>Computes the forward pass of CrossDomainNetwork.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>masked_kspace: torch.Tensor\n    Masked k-space of shape (N, coil, height, width, complex=2).\nsensitivity_map: torch.Tensor\n    Sensitivity map of shape (N, coil, height, width, complex=2).\nsampling_mask: torch.Tensor\n    Sampling mask of shape (N, 1, height, width, 1).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_image: torch.Tensor\n    Output image of shape (N, height, width, complex=2).</p>\n", "signature": "(\n    self,\n    masked_kspace: torch.Tensor,\n    sensitivity_map: torch.Tensor,\n    sampling_mask: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"fullname": "mridc.collections.reconstruction.models.crossdomain.multicoil", "modulename": "mridc.collections.reconstruction.models.crossdomain.multicoil", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"fullname": "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil", "modulename": "mridc.collections.reconstruction.models.crossdomain.multicoil", "qualname": "MultiCoil", "type": "class", "doc": "<p>This makes the forward pass of multi-coil data of shape (N, N_coils, H, W, C) to a model.\nIf coil_to_batch is set to True, coil dimension is moved to the batch dimension. Otherwise, it passes to the model\neach coil-data individually.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"fullname": "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__", "modulename": "mridc.collections.reconstruction.models.crossdomain.multicoil", "qualname": "MultiCoil.__init__", "type": "function", "doc": "<p>Inits MultiCoil.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>model: nn.Module\n    Any nn.Module that takes as input with 4D data (N, H, W, C). Typically a convolutional-like model.\ncoil_dim: int\n    Coil dimension. Default: 1.\ncoil_to_batch: bool\n    If True batch and coil dimensions are merged when forwarded by the model and unmerged when outputted.\n    Otherwise, input is forwarded to the model per coil.</p>\n", "signature": "(\n    self,\n    model: torch.nn.modules.module.Module,\n    coil_dim: int = 1,\n    coil_to_batch: bool = False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"fullname": "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward", "modulename": "mridc.collections.reconstruction.models.crossdomain.multicoil", "qualname": "MultiCoil.forward", "type": "function", "doc": "<p>Performs the forward pass of MultiCoil.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Multi-coil input of shape (N, coil, height, width, in_channels).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    Multi-coil output of shape (N, coil, height, width, out_channels).</p>\n", "signature": "(self, x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn": {"fullname": "mridc.collections.reconstruction.models.didn", "modulename": "mridc.collections.reconstruction.models.didn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.didn.didn": {"fullname": "mridc.collections.reconstruction.models.didn.didn", "modulename": "mridc.collections.reconstruction.models.didn.didn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"fullname": "mridc.collections.reconstruction.models.didn.didn.Subpixel", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "Subpixel", "type": "class", "doc": "<p>Subpixel convolution layer for up-scaling of low resolution features at super-resolution as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yu, Songhyun, et al. \u201cDeep Iterative Down-Up CNN for Image Denoising.\u201d 2019 IEEE/CVF Conference on Computer\nVision and Pattern Recognition Workshops (CVPRW), 2019, pp. 2095\u2013103. IEEE Xplore,\nhttps://doi.org/10.1109/CVPRW.2019.00262.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"fullname": "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "Subpixel.__init__", "type": "function", "doc": "<p>Inits Subpixel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.\nupscale_factor: int\n    Subpixel upscale factor.\nkernel_size: int or (int, int)\n    Convolution kernel size.\npadding: int\n    Padding size. Default: 0.</p>\n", "signature": "(\n    self,\n    in_channels,\n    out_channels,\n    upscale_factor,\n    kernel_size,\n    padding=0\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"fullname": "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "Subpixel.forward", "type": "function", "doc": "<p>Computes Subpixel convolution on input torch.Tensor <code>x</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.</p>\n", "signature": "(self, x)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"fullname": "mridc.collections.reconstruction.models.didn.didn.ReconBlock", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "ReconBlock", "type": "class", "doc": "<p>Reconstruction Block of DIDN model as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yu, Songhyun, et al. \u201cDeep Iterative Down-Up CNN for Image Denoising.\u201d 2019 IEEE/CVF Conference on Computer\nVision and Pattern Recognition Workshops (CVPRW), 2019, pp. 2095\u2013103. IEEE Xplore,\nhttps://doi.org/10.1109/CVPRW.2019.00262.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "ReconBlock.__init__", "type": "function", "doc": "<p>Inits ReconBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nnum_convs: int\n    Number of convolution blocks.</p>\n", "signature": "(self, in_channels, num_convs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"fullname": "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "ReconBlock.forward", "type": "function", "doc": "<p>Computes num_convs convolutions followed by PReLU activation on <code>input_data</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_data: torch.Tensor\n    Input tensor.</p>\n", "signature": "(self, input_data)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DUB", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DUB", "type": "class", "doc": "<p>Down-up block (DUB) for DIDN model as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yu, Songhyun, et al. \u201cDeep Iterative Down-Up CNN for Image Denoising.\u201d 2019 IEEE/CVF Conference on Computer\nVision and Pattern Recognition Workshops (CVPRW), 2019, pp. 2095\u2013103. IEEE Xplore,\nhttps://doi.org/10.1109/CVPRW.2019.00262.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DUB.__init__", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DUB.__init__", "type": "function", "doc": "<p>Inits DUB.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.</p>\n", "signature": "(self, in_channels, out_channels)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DUB.pad", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DUB.pad", "type": "function", "doc": "<p>Pads input to height and width dimensions if odd.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input to pad.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>x: torch.Tensor\n    Padded tensor.</p>\n", "signature": "(x)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DUB.crop_to_shape", "type": "function", "doc": "<p>Crops <code>x</code> to specified shape.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor with shape (*, H, W).\nshape: Tuple(int, int)\n    Crop shape corresponding to H, W.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cropped_output: torch.Tensor\n    Cropped tensor.</p>\n", "signature": "(x, shape)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DUB.forward", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DUB.forward", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    DUB output.</p>\n", "signature": "(self, x)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DIDN", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DIDN", "type": "class", "doc": "<p>Deep Iterative Down-up convolutional Neural network (DIDN) implementation as in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yu, Songhyun, et al. \u201cDeep Iterative Down-Up CNN for Image Denoising.\u201d 2019 IEEE/CVF Conference on Computer\nVision and Pattern Recognition Workshops (CVPRW), 2019, pp. 2095\u2013103. IEEE Xplore,\nhttps://doi.org/10.1109/CVPRW.2019.00262.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DIDN.__init__", "type": "function", "doc": "<p>Inits DIDN.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.\nhidden_channels: int\n    Number of hidden channels. First convolution out_channels. Default: 128.\nnum_dubs: int\n    Number of DUB networks. Default: 6.\nnum_convs_recon: int\n    Number of ReconBlock convolutions. Default: 9.\nskip_connection: bool\n    Use skip connection. Default: False.</p>\n", "signature": "(\n    self,\n    in_channels: int,\n    out_channels: int,\n    hidden_channels: int = 128,\n    num_dubs: int = 6,\n    num_convs_recon: int = 9,\n    skip_connection: bool = False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DIDN.crop_to_shape", "type": "function", "doc": "<p>Crops <code>x</code> to specified shape.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor with shape (*, H, W).\nshape: Tuple(int, int)\n    Crop shape corresponding to H, W.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cropped_output: torch.Tensor\n    Cropped tensor.</p>\n", "signature": "(x, shape)", "funcdef": "def"}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"fullname": "mridc.collections.reconstruction.models.didn.didn.DIDN.forward", "modulename": "mridc.collections.reconstruction.models.didn.didn", "qualname": "DIDN.forward", "type": "function", "doc": "<p>Takes as input a torch.Tensor <code>x</code> and computes DIDN(x).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.\nchannel_dim: int\n    Channel dimension. Default: 1.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    DIDN output tensor.</p>\n", "signature": "(self, x, channel_dim=1)", "funcdef": "def"}, "mridc.collections.reconstruction.models.dunet": {"fullname": "mridc.collections.reconstruction.models.dunet", "modulename": "mridc.collections.reconstruction.models.dunet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.dunet.DUNet": {"fullname": "mridc.collections.reconstruction.models.dunet.DUNet", "modulename": "mridc.collections.reconstruction.models.dunet", "qualname": "DUNet", "type": "class", "doc": "<p>Based on the DUNET implementation [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1]  Hammernik, K, Schlemper, J, Qin, C, et al. Systematic evaluation of iterative deep neural networks for\nfast parallel MRI reconstruction with sensitivity-weighted coil combination. Magn Reson Med. 2021; 86: 1859\u2013 1872.\nhttps://doi.org/10.1002/mrm.28827</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"fullname": "mridc.collections.reconstruction.models.dunet.DUNet.__init__", "modulename": "mridc.collections.reconstruction.models.dunet", "qualname": "DUNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"fullname": "mridc.collections.reconstruction.models.dunet.DUNet.forward", "modulename": "mridc.collections.reconstruction.models.dunet", "qualname": "DUNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.jointicnet": {"fullname": "mridc.collections.reconstruction.models.jointicnet", "modulename": "mridc.collections.reconstruction.models.jointicnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"fullname": "mridc.collections.reconstruction.models.jointicnet.JointICNet", "modulename": "mridc.collections.reconstruction.models.jointicnet", "qualname": "JointICNet", "type": "class", "doc": "<p>Joint Deep Model-Based MR Image and Coil Sensitivity Reconstruction Network (Joint-ICNet) implementation as\npresented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Jun, Yohan, et al. \u201cJoint Deep Model-Based MR Image and Coil Sensitivity Reconstruction Network\n(Joint-ICNet) for Fast MRI.\u201d 2021 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR),\nIEEE, 2021, pp. 5266\u201375. DOI.org (Crossref), https://doi.org/10.1109/CVPR46437.2021.00523.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"fullname": "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__", "modulename": "mridc.collections.reconstruction.models.jointicnet", "qualname": "JointICNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"fullname": "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C", "modulename": "mridc.collections.reconstruction.models.jointicnet", "qualname": "JointICNet.update_C", "type": "function", "doc": "<p>Update the coil sensitivity maps.</p>\n", "signature": "(self, idx, DC_sens, sensitivity_maps, image, y, mask)", "funcdef": "def"}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"fullname": "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X", "modulename": "mridc.collections.reconstruction.models.jointicnet", "qualname": "JointICNet.update_X", "type": "function", "doc": "<p>Update the image.</p>\n", "signature": "(self, idx, image, sensitivity_maps, y, mask)", "funcdef": "def"}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"fullname": "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward", "modulename": "mridc.collections.reconstruction.models.jointicnet", "qualname": "JointICNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final estimation of the network.\n     If self.accumulate_loss is True, returns a list of all intermediate estimates.\n     If False, returns the final estimate.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.kikinet": {"fullname": "mridc.collections.reconstruction.models.kikinet", "modulename": "mridc.collections.reconstruction.models.kikinet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"fullname": "mridc.collections.reconstruction.models.kikinet.KIKINet", "modulename": "mridc.collections.reconstruction.models.kikinet", "qualname": "KIKINet", "type": "class", "doc": "<p>Based on KIKINet implementation [1]_. Modified to work with multi-coil k-space data.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Eo, Taejoon, et al. \u201cKIKI-Net: Cross-Domain Convolutional Neural Networks for Reconstructing Undersampled\nMagnetic Resonance Images.\u201d Magnetic Resonance in Medicine, vol. 80, no. 5, Nov. 2018, pp. 2188\u2013201. PubMed,\nhttps://doi.org/10.1002/mrm.27201.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"fullname": "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__", "modulename": "mridc.collections.reconstruction.models.kikinet", "qualname": "KIKINet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"fullname": "mridc.collections.reconstruction.models.kikinet.KIKINet.forward", "modulename": "mridc.collections.reconstruction.models.kikinet", "qualname": "KIKINet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.lpd": {"fullname": "mridc.collections.reconstruction.models.lpd", "modulename": "mridc.collections.reconstruction.models.lpd", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"fullname": "mridc.collections.reconstruction.models.lpd.LPDNet", "modulename": "mridc.collections.reconstruction.models.lpd", "qualname": "LPDNet", "type": "class", "doc": "<p>Learned Primal Dual network implementation inspired by [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Adler, Jonas, and Ozan \u00d6ktem. \u201cLearned Primal-Dual Reconstruction.\u201d IEEE Transactions on Medical Imaging,\nvol. 37, no. 6, June 2018, pp. 1322\u201332. arXiv.org, https://doi.org/10.1109/TMI.2018.2799231.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"fullname": "mridc.collections.reconstruction.models.lpd.LPDNet.__init__", "modulename": "mridc.collections.reconstruction.models.lpd", "qualname": "LPDNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"fullname": "mridc.collections.reconstruction.models.lpd.LPDNet.forward", "modulename": "mridc.collections.reconstruction.models.lpd", "qualname": "LPDNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain": {"fullname": "mridc.collections.reconstruction.models.multidomain", "modulename": "mridc.collections.reconstruction.models.multidomain", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConv2d", "type": "class", "doc": "<p>Multi-domain convolution layer.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConv2d.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(self, fft_type, in_channels, out_channels, **kwargs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConv2d.forward", "type": "function", "doc": "<p>Forward method for the MultiDomainConv2d class.</p>\n", "signature": "(self, image)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConvTranspose2d", "type": "class", "doc": "<p>Multi-Domain convolutional transpose layer.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConvTranspose2d.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(self, fft_type, in_channels, out_channels, **kwargs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConvTranspose2d.forward", "type": "function", "doc": "<p>Forward method for the MultiDomainConvTranspose2d class.</p>\n", "signature": "(self, image)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConvBlock", "type": "class", "doc": "<p>A multi-domain convolutional block that consists of two multi-domain convolution layers each followed by instance\nnormalization, LeakyReLU activation and dropout.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConvBlock.__init__", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.\ndropout_probability: float\n    Dropout probability.</p>\n", "signature": "(\n    self,\n    fft_type,\n    in_channels: int,\n    out_channels: int,\n    dropout_probability: float\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainConvBlock.forward", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>_input: torch.Tensor</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>torch.Tensor</p>\n", "signature": "(self, _input: torch.Tensor)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "TransposeMultiDomainConvBlock", "type": "class", "doc": "<p>A Transpose Convolutional Block that consists of one convolution transpose layers followed by instance\nnormalization and LeakyReLU activation.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "TransposeMultiDomainConvBlock.__init__", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.</p>\n", "signature": "(self, fft_type, in_channels: int, out_channels: int)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "TransposeMultiDomainConvBlock.forward", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_data: torch.Tensor</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>torch.Tensor</p>\n", "signature": "(self, input_data: torch.Tensor)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "StandardizationLayer", "type": "class", "doc": "<p>Multi-channel data standardization method. Inspired by AIRS model submission to the Fast MRI 2020 challenge.\nGiven individual coil images :math:<code>\\{x_i\\}_{i=1}^{N_c}</code> and sensitivity coil maps :math:<code>\\{S_i\\}_{i=1}^{N_c}</code></p>\n\n<p>it returns\n.. math::\n    [(x_{\\text{sense}}, {x_{\\text{res}}}_1), ..., (x_{\\text{sense}}, {x_{\\text{res}}}_{N_c})]\nwhere :math:<code>{x_{\\text{res}}}_i = xi - S_i \\times x_{\\text{sense}}</code> and\n:math:<code>x_{\\text{sense}} = \\sum_{i=1}^{N_c} {S_i}^{*} \\times x_i</code>.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "StandardizationLayer.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(self, coil_dim=1, channel_dim=-1)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "StandardizationLayer.forward", "type": "function", "doc": "<p>Forward pass.</p>\n", "signature": "(\n    self,\n    coil_images: torch.Tensor,\n    sensitivity_map: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainUnet2d", "type": "class", "doc": "<p>Unet modification to be used with Multi-domain network as in AIRS Medical submission to the Fast MRI 2020\nchallenge.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainUnet2d.__init__", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels to the u-net.\nout_channels: int\n    Number of output channels to the u-net.\nnum_filters: int\n    Number of output channels of the first convolutional layer.\nnum_pool_layers: int\n    Number of down-sampling and up-sampling layers (depth).\ndropout_probability: float\n    Dropout probability.\nfft_type: str\n    FFT type.</p>\n", "signature": "(\n    self,\n    in_channels: int,\n    out_channels: int,\n    num_filters: int,\n    num_pool_layers: int,\n    dropout_probability: float,\n    fft_type: str = 'orthogonal'\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"fullname": "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward", "modulename": "mridc.collections.reconstruction.models.multidomain.multidomain", "qualname": "MultiDomainUnet2d.forward", "type": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_data: torch.Tensor</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>torch.Tensor</p>\n", "signature": "(self, input_data: torch.Tensor)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomainnet": {"fullname": "mridc.collections.reconstruction.models.multidomainnet", "modulename": "mridc.collections.reconstruction.models.multidomainnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"fullname": "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet", "modulename": "mridc.collections.reconstruction.models.multidomainnet", "qualname": "MultiDomainNet", "type": "class", "doc": "<p>Feature-level multi-domain module. Inspired by AIRS Medical submission to the Fast MRI 2020 challenge.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"fullname": "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__", "modulename": "mridc.collections.reconstruction.models.multidomainnet", "qualname": "MultiDomainNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"fullname": "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward", "modulename": "mridc.collections.reconstruction.models.multidomainnet", "qualname": "MultiDomainNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn": {"fullname": "mridc.collections.reconstruction.models.mwcnn", "modulename": "mridc.collections.reconstruction.models.mwcnn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "DWT", "type": "class", "doc": "<p>2D Discrete Wavelet Transform as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Liu, Pengju, et al. \u201cMulti-Level Wavelet-CNN for Image Restoration.\u201d ArXiv:1805.07071 [Cs], May 2018.\narXiv.org, http://arxiv.org/abs/1805.07071.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "DWT.__init__", "type": "function", "doc": "<p>Inits DWT.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "DWT.forward", "type": "function", "doc": "<p>Computes DWT(<code>x</code>) given tensor <code>x</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    DWT of <code>x</code>.</p>\n", "signature": "(x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "IWT", "type": "class", "doc": "<p>2D Inverse Wavelet Transform as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Liu, Pengju, et al. \u201cMulti-Level Wavelet-CNN for Image Restoration.\u201d ArXiv:1805.07071 [Cs], May 2018.\narXiv.org, http://arxiv.org/abs/1805.07071.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "IWT.__init__", "type": "function", "doc": "<p>Inits IWT.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "IWT.forward", "type": "function", "doc": "<p>Computes IWT(<code>x</code>) given tensor <code>x</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input tensor.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>h: torch.Tensor\n    IWT of <code>x</code>.</p>\n", "signature": "(self, x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "ConvBlock", "type": "class", "doc": "<p>Convolution Block for MWCNN as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Liu, Pengju, et al. \u201cMulti-Level Wavelet-CNN for Image Restoration.\u201d ArXiv:1805.07071 [Cs], May 2018.\narXiv.org, http://arxiv.org/abs/1805.07071.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "ConvBlock.__init__", "type": "function", "doc": "<p>Inits ConvBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nout_channels: int\n    Number of output channels.\nkernel_size: int\n    Conv kernel size.\nbias: bool\n    Use convolution bias. Default: True.\nbatchnorm: bool\n    Use batch normalization. Default: False.\nactivation: nn.Module\n    Activation function. Default: nn.ReLU(True).\nscale: float, optional\n    Scale. Default: 1.0.</p>\n", "signature": "(\n    self,\n    in_channels: int,\n    out_channels: int,\n    kernel_size: int,\n    bias: bool = True,\n    batchnorm: bool = False,\n    activation: torch.nn.modules.module.Module = ReLU(inplace=True),\n    scale: Optional[float] = 1.0\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "ConvBlock.forward", "type": "function", "doc": "<p>Performs forward pass of ConvBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input with shape (N, C, H, W).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>output: torch.Tensor\n    Output with shape (N, C', H', W').</p>\n", "signature": "(self, x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "DilatedConvBlock", "type": "class", "doc": "<p>Double dilated Convolution Block fpr MWCNN as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Liu, Pengju, et al. \u201cMulti-Level Wavelet-CNN for Image Restoration.\u201d ArXiv:1805.07071 [Cs], May 2018.\narXiv.org, http://arxiv.org/abs/1805.07071.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "DilatedConvBlock.__init__", "type": "function", "doc": "<p>Inits DilatedConvBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\ndilations: (int, int)\n    Number of dilations.\nkernel_size: int\n    Conv kernel size.\nout_channels: int\n    Number of output channels.\nbias: bool\n    Use convolution bias. Default: True.\nbatchnorm: bool\n    Use batch normalization. Default: False.\nactivation: nn.Module\n    Activation function. Default: nn.ReLU(True).\nscale: float, optional\n    Scale. Default: 1.0.</p>\n", "signature": "(\n    self,\n    in_channels: int,\n    dilations: Tuple[int, int],\n    kernel_size: int,\n    out_channels: Optional[int] = None,\n    bias: bool = True,\n    batchnorm: bool = False,\n    activation: torch.nn.modules.module.Module = ReLU(inplace=True),\n    scale: Optional[float] = 1.0\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "DilatedConvBlock.forward", "type": "function", "doc": "<p>Performs forward pass of DilatedConvBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Input with shape (N, C, H, W).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>output: torch.Tensor\n    Output with shape (N, C', H', W').</p>\n", "signature": "(self, x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "MWCNN", "type": "class", "doc": "<p>Multi-level Wavelet CNN (MWCNN) implementation as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Liu, Pengju, et al. \u201cMulti-Level Wavelet-CNN for Image Restoration.\u201d ArXiv:1805.07071 [Cs], May 2018.\narXiv.org, http://arxiv.org/abs/1805.07071.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "MWCNN.__init__", "type": "function", "doc": "<p>Inits MWCNN.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_channels: int\n    Input channels dimension.\nfirst_conv_hidden_channels: int\n    First convolution output channels dimension.\nnum_scales: int\n    Number of scales. Default: 4.\nbias: bool\n    Convolution bias. If True, adds a learnable bias to the output. Default: True.\nbatchnorm: bool\n    If True, a batchnorm layer is added after each convolution. Default: False.\nactivation: nn.Module\n    Activation function applied after each convolution. Default: nn.ReLU().</p>\n", "signature": "(\n    self,\n    input_channels: int,\n    first_conv_hidden_channels: int,\n    num_scales: int = 4,\n    bias: bool = True,\n    batchnorm: bool = False,\n    activation: torch.nn.modules.module.Module = ReLU(inplace=True)\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "MWCNN.pad", "type": "function", "doc": "<p>Pad input.</p>\n", "signature": "(x)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "MWCNN.crop_to_shape", "type": "function", "doc": "<p>Crop input to given shape.</p>\n", "signature": "(x, shape)", "funcdef": "def"}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"fullname": "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward", "modulename": "mridc.collections.reconstruction.models.mwcnn.mwcnn", "qualname": "MWCNN.forward", "type": "function", "doc": "<p>Computes forward pass of MWCNN.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_tensor: torch.Tensor\n    Input tensor.\nres: bool\n    If True, residual connection is applied to the output. Default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>x: torch.Tensor\n    Output tensor.</p>\n", "signature": "(self, input_tensor: torch.Tensor, res: bool = False) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.primaldual": {"fullname": "mridc.collections.reconstruction.models.primaldual", "modulename": "mridc.collections.reconstruction.models.primaldual", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.primaldual.pd": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.DualNet", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "DualNet", "type": "class", "doc": "<p>Dual Network for Learned Primal Dual Network.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "DualNet.__init__", "type": "function", "doc": "<p>Inits DualNet.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_dual: int\n    Number of dual for LPD algorithm.\nkwargs: dict</p>\n", "signature": "(self, num_dual, **kwargs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "DualNet.compute_model_per_coil", "type": "function", "doc": "<p>Computes model per coil.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>model: nn.Module\n    Model to compute.\ndata: torch.Tensor\n    Multi-coil input.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>output: torch.Tensor\n    Multi-coil output.</p>\n", "signature": "(model, data)", "funcdef": "def"}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "DualNet.forward", "type": "function", "doc": "<p>Forward pass.</p>\n", "signature": "(self, h, forward_f, g)", "funcdef": "def"}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "PrimalNet", "type": "class", "doc": "<p>Primal Network for Learned Primal Dual Network.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "PrimalNet.__init__", "type": "function", "doc": "<p>Inits PrimalNet.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_primal: int\n    Number of primal for LPD algorithm.</p>\n", "signature": "(self, num_primal, **kwargs)", "funcdef": "def"}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"fullname": "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward", "modulename": "mridc.collections.reconstruction.models.primaldual.pd", "qualname": "PrimalNet.forward", "type": "function", "doc": "<p>Forward pass.</p>\n", "signature": "(self, f, backward_h)", "funcdef": "def"}, "mridc.collections.reconstruction.models.recurrentvarnet": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru", "qualname": "Conv2dGRU", "type": "class", "doc": "<p>2D Convolutional GRU Network.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru", "qualname": "Conv2dGRU.__init__", "type": "function", "doc": "<p>Inits Conv2dGRU.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Number of input channels.\nhidden_channels: int\n    Number of hidden channels.\nout_channels: Optional[int]\n    Number of output channels. If None, same as in_channels. Default: None.\nnum_layers: int\n    Number of layers. Default: 2.\ngru_kernel_size: int\n    Size of the GRU kernel. Default: 1.\northogonal_initialization: bool\n    Orthogonal initialization is used if set to True. Default: True.\ninstance_norm: bool\n    Instance norm is used if set to True. Default: False.\ndense_connect: int\n    Number of dense connections.\nreplication_padding: bool\n    If set to true replication padding is applied.</p>\n", "signature": "(\n    self,\n    in_channels: int,\n    hidden_channels: int,\n    out_channels: Optional[int] = None,\n    num_layers: int = 2,\n    gru_kernel_size=1,\n    orthogonal_initialization: bool = True,\n    instance_norm: bool = False,\n    dense_connect: int = 0,\n    replication_padding: bool = True\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru", "qualname": "Conv2dGRU.forward", "type": "function", "doc": "<p>Computes Conv2dGRU forward pass given tensors <code>cell_input</code> and <code>previous_state</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>cell_input: torch.Tensor\n    Reconstruction input\nprevious_state: torch.Tensor\n    Tensor of previous states.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out, new_states: (torch.Tensor, torch.Tensor)\n    Output and new states.</p>\n", "signature": "(\n    self,\n    cell_input: torch.Tensor,\n    previous_state: torch.Tensor\n) -> Tuple[torch.Tensor, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "qualname": "RecurrentInit", "type": "class", "doc": "<p>Recurrent State Initializer (RSI) module of Recurrent Variational Network as presented in [1]_.\nThe RSI module learns to initialize the recurrent hidden state :math:<code>h_0</code>, input of the first\nRecurrentVarNetBlock of the RecurrentVarNet.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yiasemis, George, et al. \u201cRecurrent Variational Network: A Deep Learning Inverse Problem Solver Applied to .\nthe Task of Accelerated MRI Reconstruction.\u201d ArXiv:2111.09639 [Physics], Nov. 2021. arXiv.org, h\nttp://arxiv.org/abs/2111.09639.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "qualname": "RecurrentInit.__init__", "type": "function", "doc": "<p>Inits RecurrentInit.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int\n    Input channels.\nout_channels: int\n    Number of hidden channels of the recurrent unit of RecurrentVarNet Block.\nchannels: tuple\n    Channels :math:<code>n_d</code> in the convolutional layers of initializer.\ndilations: tuple\n    Dilations :math:<code>p</code> of the convolutional layers of the initializer.\ndepth: int\n    RecurrentVarNet Block number of layers :math:<code>n_l</code>.\nmultiscale_depth: 1\n    Number of feature layers to aggregate for the output, if 1, multi-scale context aggregation is disabled.</p>\n", "signature": "(\n    self,\n    in_channels: int,\n    out_channels: int,\n    channels: Tuple[int, ...],\n    dilations: Tuple[int, ...],\n    depth: int = 2,\n    multiscale_depth: int = 1\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "qualname": "RecurrentInit.forward", "type": "function", "doc": "<p>Computes initialization for recurrent unit given input <code>x</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x: torch.Tensor\n    Initialization for RecurrentInit.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out: torch.Tensor\n    Initial recurrent hidden state from input <code>x</code>.</p>\n", "signature": "(self, x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "qualname": "RecurrentVarNetBlock", "type": "class", "doc": "<p>Recurrent Variational Network Block :math:<code>\\mathcal{H}_{\\theta_{t}}</code> as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yiasemis, George, et al. \u201cRecurrent Variational Network: A Deep Learning Inverse Problem Solver Applied to\nthe Task of Accelerated MRI Reconstruction.\u201d ArXiv:2111.09639 [Physics], Nov. 2021. arXiv.org,\nhttp://arxiv.org/abs/2111.09639.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "qualname": "RecurrentVarNetBlock.__init__", "type": "function", "doc": "<p>Inits RecurrentVarNetBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>in_channels: int,\n    Input channel number. Default is 2 for complex data.\nhidden_channels: int,\n    Hidden channels. Default: 64.\nnum_layers: int,\n    Number of layers of :math:<code>n_l</code> recurrent unit. Default: 4.\nfft_type: str,\n    FFT type. Default: \"orthogonal\".</p>\n", "signature": "(\n    self,\n    in_channels: int = 2,\n    hidden_channels: int = 64,\n    num_layers: int = 4,\n    fft_type: str = 'orthogonal'\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"fullname": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward", "modulename": "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet", "qualname": "RecurrentVarNetBlock.forward", "type": "function", "doc": "<p>Computes forward pass of RecurrentVarNetBlock.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>current_kspace: torch.Tensor\n    Current k-space prediction of shape (N, coil, height, width, complex=2).\nmasked_kspace: torch.Tensor\n    Masked k-space of shape (N, coil, height, width, complex=2).\nsampling_mask: torch.Tensor\n    Sampling mask of shape (N, 1, height, width, 1).\nsensitivity_map: torch.Tensor\n    Coil sensitivities of shape (N, coil, height, width, complex=2).\nhidden_state: torch.Tensor or None\n    ConvGRU hidden state of shape (N, hidden_channels, height, width, num_layers) if not None. Optional.\ncoil_dim: int,\n    Coil dimension. Default: 1.\ncomplex_dim: int,\n    Complex dimension. Default: -1.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>new_kspace: torch.Tensor\n    New k-space prediction of shape (N, coil, height, width, complex=2).\nhidden_state: torch.Tensor\n    Next hidden state of shape (N, hidden_channels, height, width, num_layers).</p>\n", "signature": "(\n    self,\n    current_kspace: torch.Tensor,\n    masked_kspace: torch.Tensor,\n    sampling_mask: torch.Tensor,\n    sensitivity_map: torch.Tensor,\n    hidden_state: Optional[torch.Tensor],\n    coil_dim: int = 1,\n    complex_dim: int = -1\n) -> Tuple[torch.Tensor, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim": {"fullname": "mridc.collections.reconstruction.models.rim", "modulename": "mridc.collections.reconstruction.models.rim", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.rim.conv_layers": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvRNNStack", "type": "class", "doc": "<p>A stack of convolutional RNNs.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvRNNStack.__init__", "type": "function", "doc": "<p>Args:\n    convs: list of convolutional layers\n    rnn: list of RNN layers</p>\n", "signature": "(self, convs, rnn)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvRNNStack.forward", "type": "function", "doc": "<p>Args:\n    x: (batch_size, seq_len, input_size)\n    hidden: (num_layers * num_directions, batch_size, hidden_size)</p>\n\n<p>Returns:\n    output: (batch_size, seq_len, hidden_size)</p>\n", "signature": "(self, x, hidden)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear", "type": "class", "doc": "<p>A convolutional layer with nonlinearity.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear.__init__", "type": "function", "doc": "<p>Initializes the convolutional layer.</p>\n\n<p>Args:\n    input_size: number of input channels.\n    features: number of output channels.\n    conv_dim: number of dimensions of the convolutional layer.\n    kernel_size: size of the convolutional kernel.\n    dilation: dilation of the convolutional kernel.\n    bias: whether to use bias.\n    nonlinear: nonlinearity of the convolutional layer.</p>\n", "signature": "(\n    self,\n    input_size,\n    features,\n    conv_dim,\n    kernel_size,\n    dilation,\n    bias,\n    nonlinear='relu'\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear.reset_parameters", "type": "function", "doc": "<p>Resets the parameters of the convolutional layer.</p>\n\n<p>Returns:\n    None.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear.determine_conv_class", "type": "function", "doc": "<p>Determines the convolutional layer class.</p>\n\n<p>Args:\n    n_dim: number of dimensions.</p>\n\n<p>Returns:\n    conv_class: convolutional layer class.</p>\n", "signature": "(n_dim)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear.extra_repr", "type": "function", "doc": "<p>Extra information about the layer.</p>\n\n<p>Returns:\n    str: extra information about the layer.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear.check_forward_input", "type": "function", "doc": "<p>Checks input for correct size and shape.</p>\n\n<p>Args:\n    _input: input to the convolutional layer.</p>\n\n<p>Returns:\n    _input: input to the convolutional layer.</p>\n", "signature": "(self, _input)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"fullname": "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward", "modulename": "mridc.collections.reconstruction.models.rim.conv_layers", "qualname": "ConvNonlinear.forward", "type": "function", "doc": "<p>Forward pass of the convolutional layer.</p>\n\n<p>Args:\n    _input: input to the convolutional layer.</p>\n\n<p>Returns:\n    _output: output of the convolutional layer.</p>\n", "signature": "(self, _input)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rim_block": {"fullname": "mridc.collections.reconstruction.models.rim.rim_block", "modulename": "mridc.collections.reconstruction.models.rim.rim_block", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"fullname": "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock", "modulename": "mridc.collections.reconstruction.models.rim.rim_block", "qualname": "RIMBlock", "type": "class", "doc": "<p>RIMBlock is a block of Recurrent Inference Machines (RIMs).</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rim_block", "qualname": "RIMBlock.__init__", "type": "function", "doc": "<p>Args:\n    recurrent_layer: Type of recurrent layer.\n    conv_filters: Number of filters in the convolutional layers.\n    conv_kernels: Kernel size of the convolutional layers.\n    conv_dilations: Dilation of the convolutional layers.\n    conv_bias: Bias of the convolutional layers.\n    recurrent_filters: Number of filters in the recurrent layers.\n    recurrent_kernels: Kernel size of the recurrent layers.\n    recurrent_dilations: Dilation of the recurrent layers.\n    recurrent_bias: Bias of the recurrent layers.\n    depth: Number of layers in the block.\n    time_steps: Number of time steps in the block.\n    conv_dim: Dimension of the convolutional layers.\n    no_dc: If True, the DC component is removed from the input.\n    fft_type: Type of FFT.</p>\n", "signature": "(\n    self,\n    recurrent_layer=None,\n    conv_filters=None,\n    conv_kernels=None,\n    conv_dilations=None,\n    conv_bias=None,\n    recurrent_filters=None,\n    recurrent_kernels=None,\n    recurrent_dilations=None,\n    recurrent_bias=None,\n    depth: int = 2,\n    time_steps: int = 8,\n    conv_dim: int = 2,\n    no_dc: bool = False,\n    fft_type: str = 'orthogonal'\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"fullname": "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward", "modulename": "mridc.collections.reconstruction.models.rim.rim_block", "qualname": "RIMBlock.forward", "type": "function", "doc": "<p>Forward pass of the RIMBlock.</p>\n\n<p>Args:\n    pred: torch.Tensor\n    masked_kspace: torch.Tensor\n    sense: torch.Tensor\n    mask: torch.Tensor\n    eta: torch.Tensor\n    hx: torch.Tensor\n    sigma: float\n    keep_eta: bool</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>Reconstructed image and hidden states.\n</code></pre>\n", "signature": "(\n    self,\n    pred: torch.Tensor,\n    masked_kspace: torch.Tensor,\n    sense: torch.Tensor,\n    mask: torch.Tensor,\n    eta: torch.Tensor = None,\n    hx: torch.Tensor = None,\n    sigma: float = 1.0,\n    keep_eta: bool = False\n) -> Tuple[Any, Union[list, torch.Tensor, NoneType]]", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase", "type": "class", "doc": "<p>Base class for Conv Gated Recurrent Unit (GRU) cells.</p>\n\n<h1 id=\"todo-add-paper-reference\">TODO: add paper reference</h1>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(self, input_size, hidden_size, conv_dim, kernel_size, dilation, bias)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.reset_parameters", "type": "function", "doc": "<p>Initialize parameters following the way proposed in the paper.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.orthotogonalize_weights", "type": "function", "doc": "<p>Orthogonalize the weights of a convolutional layer.</p>\n\n<p>Args:\n    weights: The weights of the convolutional layer.\n    chunks: The number of chunks to split the weights into.</p>\n\n<p>Returns:\n    The orthogonalized weights.</p>\n", "signature": "(weights, chunks=1)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.determine_conv_class", "type": "function", "doc": "<p>Determine the convolutional class to use.</p>\n\n<p>Args:\n    n_dim: The number of dimensions of the convolutional layer.</p>\n\n<p>Returns:\n    The convolutional class to use.</p>\n", "signature": "(n_dim)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.extra_repr", "type": "function", "doc": "<p>Extra information to be printed when printing the model.</p>\n\n<p>Returns:\n    The extra information.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.check_forward_input", "type": "function", "doc": "<p>Check forward input.</p>\n\n<p>Args:\n    _input: The input to check.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self, _input)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCellBase.check_forward_hidden", "type": "function", "doc": "<p>Check forward hidden.</p>\n\n<p>Args:\n    _input: The input to check.\n    hx: The hidden to check.\n    hidden_label: The label of the hidden.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self, _input, hx, hidden_label='')", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCell", "type": "class", "doc": "<p>A Convolutional GRU cell.</p>\n", "bases": "ConvGRUCellBase"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCell.__init__", "type": "function", "doc": "<p>Initialize the ConvGRUCell.</p>\n\n<p>Args:\n    input_size: The number of channels in the input.\n    hidden_size: The number of channels in the hidden state.\n    conv_dim: The number of dimensions of the convolutional layer.\n    kernel_size: The size of the convolutional kernel.\n    dilation: The dilation of the convolutional kernel.\n    bias: Whether or not to add a bias.</p>\n", "signature": "(\n    self,\n    input_size,\n    hidden_size,\n    conv_dim,\n    kernel_size,\n    dilation=1,\n    bias=True\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvGRUCell.forward", "type": "function", "doc": "<p>Forward the ConvGRUCell.</p>\n\n<p>Args:\n    _input: The input to the ConvGRUCell.\n    hx: The hidden state of the ConvGRUCell.</p>\n\n<p>Returns:\n    The new hidden state of the ConvGRUCell.</p>\n", "signature": "(self, _input, hx)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase", "type": "class", "doc": "<p>A base class for a Convolutional Minimal Gated Unit cell.</p>\n\n<h1 id=\"todo-add-paper-reference\">TODO: add paper reference</h1>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.__init__", "type": "function", "doc": "<p>Initialize the ConvMGUCellBase.</p>\n\n<p>Args:\n    input_size: The number of channels in the input.\n    hidden_size: The number of channels in the hidden state.\n    conv_dim: The number of dimensions of the convolutional layer.\n    kernel_size: The size of the convolutional kernel.\n    dilation: The dilation of the convolutional kernel.\n    bias: Whether or not to add a bias.</p>\n", "signature": "(self, input_size, hidden_size, conv_dim, kernel_size, dilation, bias)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.reset_parameters", "type": "function", "doc": "<p>Reset the parameters.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.orthotogonalize_weights", "type": "function", "doc": "<p>Orthogonalize the weights.</p>\n\n<p>Args:\n    weights: The weights to orthogonalize.\n    chunks: The number of chunks to orthogonalize.</p>\n\n<p>Returns:\n    The orthogonalized weights.</p>\n", "signature": "(weights, chunks=1)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.determine_conv_class", "type": "function", "doc": "<p>Determine the convolutional class.</p>\n\n<p>Args:\n    n_dim: The number of dimensions.</p>\n\n<p>Returns:\n    The convolutional class.</p>\n", "signature": "(n_dim)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.extra_repr", "type": "function", "doc": "<p>Extra information about the ConvMGUCellBase.</p>\n\n<p>Returns:\n    The extra information.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.check_forward_input", "type": "function", "doc": "<p>Check the forward input.</p>\n\n<p>Args:\n    _input: The input to check.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self, _input)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCellBase.check_forward_hidden", "type": "function", "doc": "<p>Check the forward hidden.</p>\n\n<p>Args:\n    _input: The input to check.\n    hx: The hidden to check.\n    hidden_label: The hidden label.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self, _input, hx, hidden_label='')", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCell", "type": "class", "doc": "<p>Convolutional Minimal Gated Unit cell.</p>\n", "bases": "ConvMGUCellBase"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCell.__init__", "type": "function", "doc": "<p>Initialize the ConvMGUCell.</p>\n\n<p>Args:\n    input_size: The input size.\n    hidden_size: The hidden size.\n    conv_dim: The convolutional dimension.\n    kernel_size: The kernel size.\n    dilation: The dilation.\n    bias: Whether to use a bias.</p>\n", "signature": "(\n    self,\n    input_size,\n    hidden_size,\n    conv_dim,\n    kernel_size,\n    dilation=1,\n    bias=True\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "ConvMGUCell.forward", "type": "function", "doc": "<p>Forward the ConvMGUCell.</p>\n\n<p>Args:\n    _input: The input.\n    hx: The hidden.</p>\n\n<p>Returns:\n    The output.</p>\n", "signature": "(self, _input, hx)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase", "type": "class", "doc": "<p>Base class for Independently RNN cells as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Li, S. et al. (2018) \u2018Independently Recurrent Neural Network (IndRNN): Building A Longer and Deeper RNN\u2019,\nProceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition, (1),\npp. 5457\u20135466. doi: 10.1109/CVPR.2018.00572.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.__init__", "type": "function", "doc": "<p>Initialize the IndRNNCellBase.</p>\n\n<p>Args:\n    input_size: The input size.\n    hidden_size: The hidden size.\n    conv_dim: The convolutional dimension.\n    kernel_size: The kernel size.\n    dilation: The dilation.\n    bias: Whether to use a bias.</p>\n", "signature": "(self, input_size, hidden_size, conv_dim, kernel_size, dilation, bias)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.reset_parameters", "type": "function", "doc": "<p>Reset the parameters.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.orthotogonalize_weights", "type": "function", "doc": "<p>Orthogonalize weights.</p>\n\n<p>Args:\n    weights: The weights to orthogonalize.\n    chunks: The chunks.</p>\n\n<p>Returns:\n    The orthogonalized weights.</p>\n", "signature": "(weights, chunks=1)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.determine_conv_class", "type": "function", "doc": "<p>Determine the convolutional class.</p>\n\n<p>Args:\n    n_dim: The number of dimensions.</p>\n\n<p>Returns:\n    The convolutional class.</p>\n", "signature": "(n_dim)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.extra_repr", "type": "function", "doc": "<p>Extra information about the module, used for printing.</p>\n\n<p>Returns:\n    The extra information.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.check_forward_input", "type": "function", "doc": "<p>Check forward input.</p>\n\n<p>Args:\n    _input: The input.</p>\n\n<p>Returns:\n    The input.</p>\n", "signature": "(self, _input)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCellBase.check_forward_hidden", "type": "function", "doc": "<p>Check forward hidden.</p>\n\n<p>Args:\n    _input: The input.\n    hx: The hidden.\n    hidden_label: The hidden label.</p>\n\n<p>Returns:\n    The hidden.</p>\n", "signature": "(self, _input, hx, hidden_label='')", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCell", "type": "class", "doc": "<p>Independently Recurrent Neural Network cell.</p>\n", "bases": "IndRNNCellBase"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCell.__init__", "type": "function", "doc": "<p>Args:\n    input_size: The number of expected features in the input.\n    hidden_size: The number of features in the hidden state.\n    conv_dim: The dimension of the convolutional layer.\n    kernel_size: The size of the convolving kernel.\n    dilation: The spacing between the kernel points.\n    bias: If <code>False</code>, then the layer does not use bias weights <code>b_ih</code> and <code>b_hh</code>.</p>\n", "signature": "(\n    self,\n    input_size,\n    hidden_size,\n    conv_dim,\n    kernel_size,\n    dilation=1,\n    bias=True\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"fullname": "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward", "modulename": "mridc.collections.reconstruction.models.rim.rnn_cells", "qualname": "IndRNNCell.forward", "type": "function", "doc": "<p>Args:\n    _input: A (batch, input_size) tensor containing input features.\n    hx: A (batch, hidden_size) tensor containing the initial hidden</p>\n\n<p>Returns:\n    h_next: A (batch, hidden_size) tensor containing the next hidden state</p>\n", "signature": "(self, _input, hx)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rim.utils": {"fullname": "mridc.collections.reconstruction.models.rim.utils", "modulename": "mridc.collections.reconstruction.models.rim.utils", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"fullname": "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient", "modulename": "mridc.collections.reconstruction.models.rim.utils", "qualname": "log_likelihood_gradient", "type": "function", "doc": "<p>Computes the gradient of the log-likelihood function.</p>\n\n<p>Args:\n    eta: Initial guess for the reconstruction.\n    masked_kspace: Masked k-space data.\n    sense: Sensing matrix.\n    mask: Mask.\n    sigma: Noise level.\n    fft_type: Type of FFT to use.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>torch.Tensor: Gradient of the log-likelihood function.</p>\n", "signature": "(\n    eta: torch.Tensor,\n    masked_kspace: torch.Tensor,\n    sense: torch.Tensor,\n    mask: torch.Tensor,\n    sigma: float,\n    fft_type: str = 'orthogonal'\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.rvn": {"fullname": "mridc.collections.reconstruction.models.rvn", "modulename": "mridc.collections.reconstruction.models.rvn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"fullname": "mridc.collections.reconstruction.models.rvn.RecurrentVarNet", "modulename": "mridc.collections.reconstruction.models.rvn", "qualname": "RecurrentVarNet", "type": "class", "doc": "<p>Recurrent Variational Network implementation as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Yiasemis, George, et al. \u201cRecurrent Variational Network: A Deep Learning Inverse Problem Solver Applied to t\nhe Task of Accelerated MRI Reconstruction.\u201d ArXiv:2111.09639 [Physics], Nov. 2021. arXiv.org,\nhttp://arxiv.org/abs/2111.09639.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"fullname": "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__", "modulename": "mridc.collections.reconstruction.models.rvn", "qualname": "RecurrentVarNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"fullname": "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward", "modulename": "mridc.collections.reconstruction.models.rvn", "qualname": "RecurrentVarNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor,\n    **kwargs\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet": {"fullname": "mridc.collections.reconstruction.models.unet", "modulename": "mridc.collections.reconstruction.models.unet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.unet.UNet": {"fullname": "mridc.collections.reconstruction.models.unet.UNet", "modulename": "mridc.collections.reconstruction.models.unet", "qualname": "UNet", "type": "class", "doc": "<p>UNet model implementation as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] O. Ronneberger, P. Fischer, and Thomas Brox. U-net: Convolutional networks for biomedical image\nsegmentation. In International Conference on Medical image computing and computer-assisted intervention,\npages 234\u2013241. Springer, 2015.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"fullname": "mridc.collections.reconstruction.models.unet.UNet.__init__", "modulename": "mridc.collections.reconstruction.models.unet", "qualname": "UNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"fullname": "mridc.collections.reconstruction.models.unet.UNet.forward", "modulename": "mridc.collections.reconstruction.models.unet", "qualname": "UNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base": {"fullname": "mridc.collections.reconstruction.models.unet_base", "modulename": "mridc.collections.reconstruction.models.unet_base", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet", "type": "class", "doc": "<p>Normalized U-Net model.</p>\n\n<p>This is the same as a regular U-Net, but with normalization applied to the input before the U-Net.\nThis keeps the values more numerically stable during training.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.__init__", "type": "function", "doc": "<p>Initialize the model.</p>\n\n<p>Args:\n    chans : Number of output channels of the first convolution layer.\n    num_pools : Number of down-sampling and up-sampling layers.\n    in_chans : Number of channels in the input to the U-Net model.\n    out_chans : Number of channels in the output to the U-Net model.\n    drop_prob : Dropout probability.\n    padding_size: Size of the padding.\n    normalize: Whether to normalize the input.\n    norm_groups: Number of groups to use for group normalization.</p>\n", "signature": "(\n    self,\n    chans: int,\n    num_pools: int,\n    in_chans: int = 2,\n    out_chans: int = 2,\n    drop_prob: float = 0.0,\n    padding_size: int = 15,\n    normalize: bool = True,\n    norm_groups: int = 2\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.complex_to_chan_dim", "type": "function", "doc": "<p>Convert the last dimension of the input to complex.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    Input tensor with the last dimension converted to complex.</p>\n", "signature": "(x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.chan_complex_to_last_dim", "type": "function", "doc": "<p>Convert the last dimension of the input to complex.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    Input tensor with the last dimension converted to complex.</p>\n", "signature": "(x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.norm", "type": "function", "doc": "<p>Normalize the input.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    Tuple of mean, standard deviation, and normalized input.</p>\n", "signature": "(\n    self,\n    x: torch.Tensor\n) -> Tuple[torch.Tensor, torch.Tensor, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.unnorm", "type": "function", "doc": "<p>Unnormalize the input.</p>\n\n<p>Args:\n    x: Input tensor.\n    mean: Mean of the input.\n    std: Standard deviation of the input.</p>\n\n<p>Returns:\n    Unnormalized input.</p>\n", "signature": "(\n    self,\n    x: torch.Tensor,\n    mean: torch.Tensor,\n    std: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.pad", "type": "function", "doc": "<p>Pad the input with zeros to make it square.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    Padded input tensor and the padding.</p>\n", "signature": "(\n    self,\n    x: torch.Tensor\n) -> Tuple[torch.Tensor, Tuple[List[int], List[int], int, int]]", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.unpad", "type": "function", "doc": "<p>Unpad the input.</p>\n\n<p>Args:\n    x: Input tensor.\n    h_pad: Horizontal padding.\n    w_pad: Vertical padding.\n    h_mult: Horizontal multiplier.\n    w_mult: Vertical multiplier.</p>\n\n<p>Returns:\n    Unpadded input tensor.</p>\n", "signature": "(\n    x: torch.Tensor,\n    h_pad: List[int],\n    w_pad: List[int],\n    h_mult: int,\n    w_mult: int\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "NormUnet.forward", "type": "function", "doc": "<p>Forward pass of the network.</p>\n\n<p>Args:\n    x: Input tensor.</p>\n\n<p>Returns:\n    Normalized UNet output tensor.</p>\n", "signature": "(self, x: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.Unet", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "Unet", "type": "class", "doc": "<p>PyTorch implementation of a U-Net model.</p>\n\n<p>O. Ronneberger, P. Fischer, and Thomas Brox. U-net: Convolutional networks\nfor biomedical image segmentation. In International Conference on Medical\nimage computing and computer-assisted intervention, pages 234\u2013241.\nSpringer, 2015.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "Unet.__init__", "type": "function", "doc": "<p>Args:\n    in_chans: Number of channels in the input to the U-Net model.\n    out_chans: Number of channels in the output to the U-Net model.\n    chans: Number of output channels of the first convolution layer.\n    num_pool_layers: Number of down-sampling and up-sampling layers.\n    drop_prob: Dropout probability.</p>\n", "signature": "(\n    self,\n    in_chans: int,\n    out_chans: int,\n    chans: int = 32,\n    num_pool_layers: int = 4,\n    drop_prob: float = 0.0\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "Unet.forward", "type": "function", "doc": "<p>Args:\n    image: Input 4D tensor of shape <code>(N, in_chans, H, W)</code>.</p>\n\n<p>Returns:\n    Output tensor of shape <code>(N, out_chans, H, W)</code>.</p>\n", "signature": "(self, image: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "ConvBlock", "type": "class", "doc": "<p>A Convolutional Block that consists of two convolution layers each followed by\ninstance normalization, LeakyReLU activation and dropout.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "ConvBlock.__init__", "type": "function", "doc": "<p>Args:\n    in_chans: Number of channels in the input.\n    out_chans: Number of channels in the output.\n    drop_prob: Dropout probability.</p>\n", "signature": "(self, in_chans: int, out_chans: int, drop_prob: float)", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "ConvBlock.forward", "type": "function", "doc": "<p>Args:\n    image: Input 4D tensor of shape <code>(N, in_chans, H, W)</code>.</p>\n\n<p>Returns:\n    Output tensor of shape <code>(N, out_chans, H, W)</code>.</p>\n", "signature": "(self, image: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "TransposeConvBlock", "type": "class", "doc": "<p>A Transpose Convolutional Block that consists of one convolution transpose\nlayers followed by instance normalization and LeakyReLU activation.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "TransposeConvBlock.__init__", "type": "function", "doc": "<p>Args:\n    in_chans: Number of channels in the input.\n    out_chans: Number of channels in the output.</p>\n", "signature": "(self, in_chans: int, out_chans: int)", "funcdef": "def"}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"fullname": "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward", "modulename": "mridc.collections.reconstruction.models.unet_base.unet_block", "qualname": "TransposeConvBlock.forward", "type": "function", "doc": "<p>Args:\n    image: Input 4D tensor of shape <code>(N, in_chans, H, W)</code>.</p>\n\n<p>Returns:\n    Output tensor of shape <code>(N, out_chans, H*2, W*2)</code>.</p>\n", "signature": "(self, image: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "DataConsistencyLayer", "type": "class", "doc": "<p>Data consistency layer for the VSNet.</p>\n\n<p>This layer is used to ensure that the output of the VSNet is the same as the input.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "DataConsistencyLayer.__init__", "type": "function", "doc": "<p>Initializes the data consistency layer.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "DataConsistencyLayer.forward", "type": "function", "doc": "<p>Forward pass of the data consistency layer.</p>\n", "signature": "(self, pred_kspace, ref_kspace, mask)", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "WeightedAverageTerm", "type": "class", "doc": "<p>Weighted average term for the VSNet.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "WeightedAverageTerm.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "WeightedAverageTerm.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<p>.. note::\n    Although the recipe for forward pass needs to be defined within\n    this function, one should call the :class:<code>Module</code> instance afterwards\n    instead of this since the former takes care of running the\n    registered hooks while the latter silently ignores them.</p>\n", "signature": "(self, x, Sx)", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "VSNetBlock", "type": "class", "doc": "<p>Model block for the Variable-Splitting Network inspired by [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Duan, J. et al. (2019) \u2018Vs-net: Variable splitting network for accelerated parallel MRI reconstruction\u2019,\nLecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes\nin Bioinformatics), 11767 LNCS, pp. 713\u2013722. doi: 10.1007/978-3-030-32251-9_78.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "VSNetBlock.__init__", "type": "function", "doc": "<p>Initialize the model block.</p>\n\n<p>Args:\n    denoiser_block: Model to apply denoising.\n    data_consistency_block: Model to apply data consistency.\n    weighted_average_block: Model to apply weighted average.\n    num_cascades: Number of cascades.\n    fft_type: Type of FFT to use.</p>\n", "signature": "(\n    self,\n    denoiser_block: torch.nn.modules.container.ModuleList,\n    data_consistency_block: torch.nn.modules.container.ModuleList,\n    weighted_average_block: torch.nn.modules.container.ModuleList,\n    num_cascades: int = 8,\n    fft_type: str = 'orthogonal'\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "VSNetBlock.sens_expand", "type": "function", "doc": "<p>Expand the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction expanded to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "VSNetBlock.sens_reduce", "type": "function", "doc": "<p>Reduce the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction reduced to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"fullname": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward", "modulename": "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block", "qualname": "VSNetBlock.forward", "type": "function", "doc": "<p>Forward pass of the model.</p>\n\n<p>Args:\n    kspace: Reference k-space data.\n    sens_maps: Sensitivity maps.\n    mask: Mask to apply to the data.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>Reconstructed image.\n</code></pre>\n", "signature": "(\n    self,\n    kspace: torch.Tensor,\n    sens_maps: torch.Tensor,\n    mask: torch.Tensor\n) -> List[Union[torch.Tensor, Any]]", "funcdef": "def"}, "mridc.collections.reconstruction.models.varnet": {"fullname": "mridc.collections.reconstruction.models.varnet", "modulename": "mridc.collections.reconstruction.models.varnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.varnet.vn_block": {"fullname": "mridc.collections.reconstruction.models.varnet.vn_block", "modulename": "mridc.collections.reconstruction.models.varnet.vn_block", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"fullname": "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock", "modulename": "mridc.collections.reconstruction.models.varnet.vn_block", "qualname": "VarNetBlock", "type": "class", "doc": "<p>Model block for end-to-end variational network.</p>\n\n<p>This model applies a combination of soft data consistency with the input model as a regularizer.\nA series of these blocks can be stacked to form the full variational network.</p>\n", "bases": "torch.nn.modules.module.Module"}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"fullname": "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__", "modulename": "mridc.collections.reconstruction.models.varnet.vn_block", "qualname": "VarNetBlock.__init__", "type": "function", "doc": "<p>Initialize the model block.</p>\n\n<p>Args:\n    model: Model to apply soft data consistency.\n    fft_type: Type of FFT to use.\n    no_dc: Whether to remove the DC component.</p>\n", "signature": "(\n    self,\n    model: torch.nn.modules.module.Module,\n    fft_type: str = 'orthogonal',\n    no_dc: bool = False\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"fullname": "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand", "modulename": "mridc.collections.reconstruction.models.varnet.vn_block", "qualname": "VarNetBlock.sens_expand", "type": "function", "doc": "<p>Expand the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction expanded to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"fullname": "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce", "modulename": "mridc.collections.reconstruction.models.varnet.vn_block", "qualname": "VarNetBlock.sens_reduce", "type": "function", "doc": "<p>Reduce the sensitivity maps to the same size as the input.</p>\n\n<p>Args:\n    x: Input data.\n    sens_maps: Sensitivity maps.</p>\n\n<p>Returns:\n    SENSE reconstruction reduced to the same size as the input.</p>\n", "signature": "(self, x: torch.Tensor, sens_maps: torch.Tensor) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"fullname": "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward", "modulename": "mridc.collections.reconstruction.models.varnet.vn_block", "qualname": "VarNetBlock.forward", "type": "function", "doc": "<p>Forward pass of the model.</p>\n\n<p>Args:\n    pred: Predicted k-space data.\n    ref_kspace: Reference k-space data.\n    sens_maps: Sensitivity maps.\n    mask: Mask to apply to the data.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>Reconstructed image.\n</code></pre>\n", "signature": "(\n    self,\n    pred: torch.Tensor,\n    ref_kspace: torch.Tensor,\n    sens_maps: torch.Tensor,\n    mask: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.vn": {"fullname": "mridc.collections.reconstruction.models.vn", "modulename": "mridc.collections.reconstruction.models.vn", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.vn.VarNet": {"fullname": "mridc.collections.reconstruction.models.vn.VarNet", "modulename": "mridc.collections.reconstruction.models.vn", "qualname": "VarNet", "type": "class", "doc": "<p>End-to-end Variational Network (VN) model implementation as presented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Sriram, A. et al. (2020) \u2018End-to-End Variational Networks for Accelerated MRI Reconstruction\u2019.\nAvailable at: https://github.com/facebookresearch/fastMRI.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"fullname": "mridc.collections.reconstruction.models.vn.VarNet.__init__", "modulename": "mridc.collections.reconstruction.models.vn", "qualname": "VarNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"fullname": "mridc.collections.reconstruction.models.vn.VarNet.forward", "modulename": "mridc.collections.reconstruction.models.vn", "qualname": "VarNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.vsnet": {"fullname": "mridc.collections.reconstruction.models.vsnet", "modulename": "mridc.collections.reconstruction.models.vsnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"fullname": "mridc.collections.reconstruction.models.vsnet.VSNet", "modulename": "mridc.collections.reconstruction.models.vsnet", "qualname": "VSNet", "type": "class", "doc": "<p>Based on Vs-net implementation [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Duan, J. et al. (2019) \u2018Vs-net: Variable splitting network for accelerated parallel MRI reconstruction\u2019,\nLecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes\nin Bioinformatics), 11767 LNCS, pp. 713\u2013722. doi: 10.1007/978-3-030-32251-9_78.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"fullname": "mridc.collections.reconstruction.models.vsnet.VSNet.__init__", "modulename": "mridc.collections.reconstruction.models.vsnet", "qualname": "VSNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"fullname": "mridc.collections.reconstruction.models.vsnet.VSNet.forward", "modulename": "mridc.collections.reconstruction.models.vsnet", "qualname": "VSNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.xpdnet": {"fullname": "mridc.collections.reconstruction.models.xpdnet", "modulename": "mridc.collections.reconstruction.models.xpdnet", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"fullname": "mridc.collections.reconstruction.models.xpdnet.XPDNet", "modulename": "mridc.collections.reconstruction.models.xpdnet", "qualname": "XPDNet", "type": "class", "doc": "<p>XPDNet as implemented in [1]_.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Ramzi, Zaccharie, et al. \u201cXPDNet for MRI Reconstruction: An Application to the 2020 FastMRI Challenge.\u201d\nArXiv:2010.07290 [Physics, Stat], July 2021. arXiv.org, http://arxiv.org/abs/2010.07290.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"fullname": "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__", "modulename": "mridc.collections.reconstruction.models.xpdnet", "qualname": "XPDNet.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"fullname": "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward", "modulename": "mridc.collections.reconstruction.models.xpdnet", "qualname": "XPDNet.forward", "type": "function", "doc": "<p>Forward pass of the network.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    init_pred: torch.Tensor, shape [batch_size, n_x, n_y, 2], initial guess for pred\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final prediction of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    init_pred: torch.Tensor,\n    target: torch.Tensor\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.models.zf": {"fullname": "mridc.collections.reconstruction.models.zf", "modulename": "mridc.collections.reconstruction.models.zf", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.models.zf.ZF": {"fullname": "mridc.collections.reconstruction.models.zf.ZF", "modulename": "mridc.collections.reconstruction.models.zf", "qualname": "ZF", "type": "class", "doc": "<p>Zero-Filled reconstruction using either root-sum-of-squares (RSS) or SENSE (SENSitivity Encoding) [1].</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] Pruessmann KP, Weiger M, Scheidegger MB, Boesiger P. SENSE: Sensitivity encoding for fast MRI.\nMagn Reson Med 1999; 42:952-962.</p>\n", "bases": "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel, abc.ABC"}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"fullname": "mridc.collections.reconstruction.models.zf.ZF.__init__", "modulename": "mridc.collections.reconstruction.models.zf", "qualname": "ZF.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"fullname": "mridc.collections.reconstruction.models.zf.ZF.process_inputs", "modulename": "mridc.collections.reconstruction.models.zf", "qualname": "ZF.process_inputs", "type": "function", "doc": "<p>Process the inputs to the network.</p>\n", "signature": "(y, mask)", "funcdef": "def"}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"fullname": "mridc.collections.reconstruction.models.zf.ZF.forward", "modulename": "mridc.collections.reconstruction.models.zf", "qualname": "ZF.forward", "type": "function", "doc": "<p>Forward pass of ZF.\nArgs:\n    y: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], masked kspace data\n    sensitivity_maps: torch.Tensor, shape [batch_size, n_coils, n_x, n_y, 2], coil sensitivity maps\n    mask: torch.Tensor, shape [1, 1, n_x, n_y, 1], sampling mask\n    target: torch.Tensor, shape [batch_size, n_x, n_y, 2], target data\nReturns:\n     Final estimation of the network.</p>\n", "signature": "(\n    self,\n    y: torch.Tensor,\n    sensitivity_maps: torch.Tensor,\n    mask: torch.Tensor,\n    target: torch.Tensor = None\n) -> Union[list, Any]", "funcdef": "def"}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"fullname": "mridc.collections.reconstruction.models.zf.ZF.test_step", "modulename": "mridc.collections.reconstruction.models.zf", "qualname": "ZF.test_step", "type": "function", "doc": "<p>Test step for ZF.</p>\n", "signature": "(\n    self,\n    batch: Dict[float, torch.Tensor],\n    batch_idx: int\n) -> Tuple[str, int, torch.Tensor]", "funcdef": "def"}, "mridc.collections.reconstruction.parts": {"fullname": "mridc.collections.reconstruction.parts", "modulename": "mridc.collections.reconstruction.parts", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.parts.transforms": {"fullname": "mridc.collections.reconstruction.parts.transforms", "modulename": "mridc.collections.reconstruction.parts.transforms", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"fullname": "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms", "modulename": "mridc.collections.reconstruction.parts.transforms", "qualname": "MRIDataTransforms", "type": "class", "doc": "<p>MRI preprocessing data transforms.</p>\n"}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"fullname": "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__", "modulename": "mridc.collections.reconstruction.parts.transforms", "qualname": "MRIDataTransforms.__init__", "type": "function", "doc": "<p>Initialize the data transform.</p>\n\n<p>Args:\n    mask_func: The function that masks the kspace.\n    shift_mask: Whether to shift the mask.\n    mask_center_scale: The scale of the center of the mask.\n    half_scan_percentage: The percentage of the scan to be used.\n    crop_size: The size of the crop.\n    kspace_crop: Whether to crop the kspace.\n    crop_before_masking: Whether to crop before masking.\n    kspace_zero_filling_size: The size of padding in kspace -> zero filling.\n    normalize_inputs: Whether to normalize the inputs.\n    fft_type: The type of the FFT.\n    use_seed: Whether to use the seed.</p>\n", "signature": "(\n    self,\n    mask_func: Optional[List[mridc.collections.reconstruction.data.subsample.MaskFunc]] = None,\n    shift_mask: bool = False,\n    mask_center_scale: Optional[float] = 0.02,\n    half_scan_percentage: float = 0.0,\n    crop_size: Optional[Tuple[int, int]] = None,\n    kspace_crop: bool = False,\n    crop_before_masking: bool = True,\n    kspace_zero_filling_size: Optional[Tuple] = None,\n    normalize_inputs: bool = False,\n    fft_type: str = 'orthogonal',\n    use_seed: bool = True\n)", "funcdef": "def"}, "mridc.collections.reconstruction.parts.utils": {"fullname": "mridc.collections.reconstruction.parts.utils", "modulename": "mridc.collections.reconstruction.parts.utils", "type": "module", "doc": "<p></p>\n"}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"fullname": "mridc.collections.reconstruction.parts.utils.apply_mask", "modulename": "mridc.collections.reconstruction.parts.utils", "qualname": "apply_mask", "type": "function", "doc": "<p>Subsample given k-space by multiplying with a mask.</p>\n\n<p>Args:\n    data: The input k-space data. This should have at least 3 dimensions, where dimensions -3 and -2 are the\n        spatial dimensions, and the final dimension has size 2 (for complex values).\n    mask_func: A function that takes a shape (tuple of ints) and a random number seed and returns a mask.\n    seed: Seed for the random number generator.\n    padding: Padding value to apply for mask.\n    shift: Toggle to shift mask when subsampling. Applicable on 2D data.\n    half_scan_percentage: Percentage of kspace to be dropped.\n    center_scale: Scale of the center of the mask. Applicable on Gaussian masks.</p>\n\n<p>Returns:\n    Tuple of subsampled k-space, mask, and mask indices.</p>\n", "signature": "(\n    data: torch.Tensor,\n    mask_func: mridc.collections.reconstruction.data.subsample.MaskFunc,\n    seed: Union[int, Tuple[int, ...], NoneType] = None,\n    padding: Optional[Sequence[int]] = None,\n    shift: bool = False,\n    half_scan_percentage: Optional[float] = 0.0,\n    center_scale: Optional[float] = 0.02\n) -> Tuple[Any, Any, Any]", "funcdef": "def"}, "mridc.collections.reconstruction.parts.utils.mask_center": {"fullname": "mridc.collections.reconstruction.parts.utils.mask_center", "modulename": "mridc.collections.reconstruction.parts.utils", "qualname": "mask_center", "type": "function", "doc": "<p>Apply a center crop to the input real image or batch of real images.</p>\n\n<p>Args:\n    x: The input real image or batch of real images.\n    mask_from: Part of center to start filling.\n    mask_to: Part of center to end filling.\n    mask_type: Type of mask to apply. Can be either \"1D\" or \"2D\".</p>\n\n<p>Returns:\n     A mask with the center filled.</p>\n", "signature": "(\n    x: torch.Tensor,\n    mask_from: Optional[int],\n    mask_to: Optional[int],\n    mask_type: str = '2D'\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"fullname": "mridc.collections.reconstruction.parts.utils.batched_mask_center", "modulename": "mridc.collections.reconstruction.parts.utils", "qualname": "batched_mask_center", "type": "function", "doc": "<p>Initializes a mask with the center filled in.</p>\n\n<p>Can operate with different masks for each batch element.</p>\n\n<p>Args:\n    x: The input real image or batch of real images.\n    mask_from: Part of center to start filling.\n    mask_to: Part of center to end filling.\n    mask_type: Type of mask to apply. Can be either \"1D\" or \"2D\".</p>\n\n<p>Returns:\n     A mask with the center filled.</p>\n", "signature": "(\n    x: torch.Tensor,\n    mask_from: torch.Tensor,\n    mask_to: torch.Tensor,\n    mask_type: str = '2D'\n) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.parts.utils.center_crop": {"fullname": "mridc.collections.reconstruction.parts.utils.center_crop", "modulename": "mridc.collections.reconstruction.parts.utils", "qualname": "center_crop", "type": "function", "doc": "<p>Apply a center crop to the input real image or batch of real images.</p>\n\n<p>Args:\n    data: The input tensor to be center cropped. It should have at least 2 dimensions and the cropping is applied\n        along the last two dimensions.\n    shape: The output shape. The shape should be smaller than the corresponding dimensions of data.</p>\n\n<p>Returns:\n    The center cropped image.</p>\n", "signature": "(data: torch.Tensor, shape: Tuple[int, int]) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"fullname": "mridc.collections.reconstruction.parts.utils.complex_center_crop", "modulename": "mridc.collections.reconstruction.parts.utils", "qualname": "complex_center_crop", "type": "function", "doc": "<p>Apply a center crop to the input image or batch of complex images.</p>\n\n<p>Args:\n    data: The complex input tensor to be center cropped. It should have at least 3 dimensions and the cropping is\n        applied along dimensions -3 and -2 and the last dimensions should have a size of 2.\n    shape: The output shape. The shape should be smaller than the corresponding dimensions of data.</p>\n\n<p>Returns:\n    The center cropped image</p>\n", "signature": "(data: torch.Tensor, shape: Tuple[int, int]) -> torch.Tensor", "funcdef": "def"}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"fullname": "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest", "modulename": "mridc.collections.reconstruction.parts.utils", "qualname": "center_crop_to_smallest", "type": "function", "doc": "<p>Apply a center crop on the larger image to the size of the smaller.</p>\n\n<p>The minimum is taken over dim=-1 and dim=-2. If x is smaller than y at dim=-1 and y is smaller than x at dim=-2,\n    then the returned dimension will be a mixture of the two.</p>\n\n<p>Args:\n    x: The first image.\n    y: The second image.</p>\n\n<p>Returns:\n    tuple of tensors x and y, each cropped to the minimum size.</p>\n", "signature": "(\n    x: Union[torch.Tensor, numpy.ndarray],\n    y: Union[torch.Tensor, numpy.ndarray]\n) -> Tuple[Union[torch.Tensor, numpy.ndarray], Union[torch.Tensor, numpy.ndarray]]", "funcdef": "def"}, "mridc.constants": {"fullname": "mridc.constants", "modulename": "mridc.constants", "type": "module", "doc": "<p></p>\n"}, "mridc.core": {"fullname": "mridc.core", "modulename": "mridc.core", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes": {"fullname": "mridc.core.classes", "modulename": "mridc.core.classes", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.common": {"fullname": "mridc.core.classes.common", "modulename": "mridc.core.classes.common", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.common.Typing": {"fullname": "mridc.core.classes.common.Typing", "modulename": "mridc.core.classes.common", "qualname": "Typing", "type": "class", "doc": "<p>An interface which endows module with neural types</p>\n", "bases": "abc.ABC"}, "mridc.core.classes.common.Typing.__init__": {"fullname": "mridc.core.classes.common.Typing.__init__", "modulename": "mridc.core.classes.common", "qualname": "Typing.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.common.Typing.input_types": {"fullname": "mridc.core.classes.common.Typing.input_types", "modulename": "mridc.core.classes.common", "qualname": "Typing.input_types", "type": "variable", "doc": "<p>Define these to enable input neural type checks</p>\n", "annotation": ": Optional[Dict[str, mridc.core.neural_types.neural_type.NeuralType]]"}, "mridc.core.classes.common.Typing.output_types": {"fullname": "mridc.core.classes.common.Typing.output_types", "modulename": "mridc.core.classes.common", "qualname": "Typing.output_types", "type": "variable", "doc": "<p>Define these to enable output neural type checks</p>\n", "annotation": ": Optional[Dict[str, mridc.core.neural_types.neural_type.NeuralType]]"}, "mridc.core.classes.common.FileIO": {"fullname": "mridc.core.classes.common.FileIO", "modulename": "mridc.core.classes.common", "qualname": "FileIO", "type": "class", "doc": "<p>Base class for file IO.</p>\n", "bases": "abc.ABC"}, "mridc.core.classes.common.FileIO.__init__": {"fullname": "mridc.core.classes.common.FileIO.__init__", "modulename": "mridc.core.classes.common", "qualname": "FileIO.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.common.FileIO.save_to": {"fullname": "mridc.core.classes.common.FileIO.save_to", "modulename": "mridc.core.classes.common", "qualname": "FileIO.save_to", "type": "function", "doc": "<p>Saves module/model with weights</p>\n", "signature": "(self, save_path: str)", "funcdef": "def"}, "mridc.core.classes.common.FileIO.restore_from": {"fullname": "mridc.core.classes.common.FileIO.restore_from", "modulename": "mridc.core.classes.common", "qualname": "FileIO.restore_from", "type": "function", "doc": "<p>Restores module/model with weights</p>\n", "signature": "(\n    cls,\n    restore_path: str,\n    override_config_path: Optional[str] = None,\n    map_location: Optional[torch.device] = None,\n    strict: bool = True,\n    return_config: bool = False,\n    trainer: Optional[pytorch_lightning.trainer.trainer.Trainer] = None,\n    save_restore_connector: mridc.core.connectors.save_restore_connector.SaveRestoreConnector = None\n)", "funcdef": "def"}, "mridc.core.classes.common.FileIO.from_config_file": {"fullname": "mridc.core.classes.common.FileIO.from_config_file", "modulename": "mridc.core.classes.common", "qualname": "FileIO.from_config_file", "type": "function", "doc": "<p>Instantiates an instance of mridc Model from YAML config file.\nWeights will be initialized randomly.\nArgs:\n    path2yaml_file: path to yaml file with model configuration\nReturns:</p>\n", "signature": "(cls, path2yaml_file: str)", "funcdef": "def"}, "mridc.core.classes.common.FileIO.to_config_file": {"fullname": "mridc.core.classes.common.FileIO.to_config_file", "modulename": "mridc.core.classes.common", "qualname": "FileIO.to_config_file", "type": "function", "doc": "<p>Saves current instance's configuration to YAML config file. Weights will not be saved.\nArgs:\n    path2yaml_file: path2yaml_file: path to yaml file where model model configuration will be saved\nReturns:</p>\n", "signature": "(self, path2yaml_file: str)", "funcdef": "def"}, "mridc.core.classes.common.Model": {"fullname": "mridc.core.classes.common.Model", "modulename": "mridc.core.classes.common", "qualname": "Model", "type": "class", "doc": "<p>Abstract class offering interface which should be implemented by all mridc models.</p>\n", "bases": "Typing, Serialization, FileIO, abc.ABC"}, "mridc.core.classes.common.Model.__init__": {"fullname": "mridc.core.classes.common.Model.__init__", "modulename": "mridc.core.classes.common", "qualname": "Model.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.common.Model.list_available_models": {"fullname": "mridc.core.classes.common.Model.list_available_models", "modulename": "mridc.core.classes.common", "qualname": "Model.list_available_models", "type": "function", "doc": "<p>Should list all pre-trained models available.\nNote: There is no check that requires model names and aliases to be unique. In the case of a collision,\nwhatever model (or alias) is listed first in the this returned list will be instantiated.\nReturns:\n    A list of PretrainedModelInfo entries</p>\n", "signature": "(cls) -> Optional[mridc.core.classes.common.PretrainedModelInfo]", "funcdef": "def"}, "mridc.core.classes.common.Model.get_available_model_names": {"fullname": "mridc.core.classes.common.Model.get_available_model_names", "modulename": "mridc.core.classes.common", "qualname": "Model.get_available_model_names", "type": "function", "doc": "<p>Returns the list of model names available.\nto get the complete model description use list_available_models()\nReturns:\n    A list of model names</p>\n", "signature": "(cls) -> List[str]", "funcdef": "def"}, "mridc.core.classes.common.Model.from_pretrained": {"fullname": "mridc.core.classes.common.Model.from_pretrained", "modulename": "mridc.core.classes.common", "qualname": "Model.from_pretrained", "type": "function", "doc": "<p>Instantiates an instance of mridc\nUse restore_from() to instantiate from a local .mridc file.\nArgs:\n    model_name: string key which will be used to find the module.\n    refresh_cache: If set to True, then when fetching from cloud, this will re-fetch the file\n        from cloud even if it is already found in a cache locally.\n    override_config_path: path to a yaml config that will override the internal\n        config file\n    map_location: Optional torch.device() to map the instantiated model to a device.\n        By default (None), it will select a GPU if available, falling back to CPU otherwise.\n    strict: Passed to torch.load_state_dict. By default true.\n    return_config: If set to true, will return just the underlying config of the restored\n        model as an OmegaConf DictConfig object without instantiating the model.\n    trainer: Optional Trainer object to use for restoring the model.\n    save_restore_connector: Optional SaveRestoreConnector object to use for restoring the model.\nReturns:\n    A model instance of a particular model class or its underlying config (if return_config is set).</p>\n", "signature": "(\n    cls,\n    model_name: str,\n    refresh_cache: bool = False,\n    override_config_path: Optional[str] = None,\n    map_location: Optional[torch.device] = None,\n    strict: bool = True,\n    return_config: bool = False,\n    trainer: Optional[pytorch_lightning.trainer.trainer.Trainer] = None,\n    save_restore_connector: mridc.core.connectors.save_restore_connector.SaveRestoreConnector = None\n)", "funcdef": "def"}, "mridc.core.classes.common.PretrainedModelInfo": {"fullname": "mridc.core.classes.common.PretrainedModelInfo", "modulename": "mridc.core.classes.common", "qualname": "PretrainedModelInfo", "type": "class", "doc": "<p>Class to store information about a pretrained model.</p>\n"}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"fullname": "mridc.core.classes.common.PretrainedModelInfo.__init__", "modulename": "mridc.core.classes.common", "qualname": "PretrainedModelInfo.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    pretrained_model_name: str,\n    description: str,\n    location: str,\n    class_: Optional[mridc.core.classes.common.Model] = None,\n    aliases: Optional[List[str]] = None\n)", "funcdef": "def"}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"fullname": "mridc.core.classes.common.PretrainedModelInfo.class_", "modulename": "mridc.core.classes.common", "qualname": "PretrainedModelInfo.class_", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.core.classes.common.Model]", "default_value": " = None"}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"fullname": "mridc.core.classes.common.PretrainedModelInfo.aliases", "modulename": "mridc.core.classes.common", "qualname": "PretrainedModelInfo.aliases", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[str]]", "default_value": " = None"}, "mridc.core.classes.common.Serialization": {"fullname": "mridc.core.classes.common.Serialization", "modulename": "mridc.core.classes.common", "qualname": "Serialization", "type": "class", "doc": "<p>Base class for serialization.</p>\n", "bases": "abc.ABC"}, "mridc.core.classes.common.Serialization.__init__": {"fullname": "mridc.core.classes.common.Serialization.__init__", "modulename": "mridc.core.classes.common", "qualname": "Serialization.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.common.Serialization.from_config_dict": {"fullname": "mridc.core.classes.common.Serialization.from_config_dict", "modulename": "mridc.core.classes.common", "qualname": "Serialization.from_config_dict", "type": "function", "doc": "<p>Instantiates object using DictConfig-based configuration</p>\n", "signature": "(\n    cls,\n    config: omegaconf.dictconfig.DictConfig,\n    trainer: Optional[pytorch_lightning.trainer.trainer.Trainer] = None\n)", "funcdef": "def"}, "mridc.core.classes.common.Serialization.to_config_dict": {"fullname": "mridc.core.classes.common.Serialization.to_config_dict", "modulename": "mridc.core.classes.common", "qualname": "Serialization.to_config_dict", "type": "function", "doc": "<p>Returns object's configuration to config dictionary</p>\n", "signature": "(self) -> omegaconf.dictconfig.DictConfig", "funcdef": "def"}, "mridc.core.classes.common.is_typecheck_enabled": {"fullname": "mridc.core.classes.common.is_typecheck_enabled", "modulename": "mridc.core.classes.common", "qualname": "is_typecheck_enabled", "type": "function", "doc": "<p>Getter method for typechecking state.</p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.common.typecheck": {"fullname": "mridc.core.classes.common.typecheck", "modulename": "mridc.core.classes.common", "qualname": "typecheck", "type": "class", "doc": "<p>Decorator to check the type of the input arguments.</p>\n"}, "mridc.core.classes.common.typecheck.__init__": {"fullname": "mridc.core.classes.common.typecheck.__init__", "modulename": "mridc.core.classes.common", "qualname": "typecheck.__init__", "type": "function", "doc": "<p>A decorator which performs input-output neural type checks, and attaches\nneural types to the output of the function that it wraps.\nRequires that the class inherit from <code>mridc.core.Typing</code> in order to perform\ntype checking, and will raise an error if that is not the case.</p>\n\n<h1 id=\"usage-class-level-type-support\">Usage (Class level type support)</h1>\n\n<p>@typecheck()\ndef fn(self, arg1, arg2, ...):\n    ...</p>\n\n<h1 id=\"usage-function-level-type-support\">Usage (Function level type support)</h1>\n\n<p>@typecheck(input_types=..., output_types=...)\ndef fn(self, arg1, arg2, ...):\n    ...\nPoints to be noted:\n1) The brackets () in <code>@typecheck()</code> are necessary.\n    You will encounter a TypeError: __init__() takes 1 positional argument but X\n    were given without those brackets.\n2) The function can take any number of positional arguments during definition.\n    When you call this function, all arguments must be passed using kwargs only.</p>\n", "signature": "(\n    self,\n    input_types: Union[mridc.core.classes.common.typecheck.TypeState, Dict[str, mridc.core.neural_types.neural_type.NeuralType], NoneType] = <TypeState.UNINITIALIZED: 0>,\n    output_types: Union[mridc.core.classes.common.typecheck.TypeState, Dict[str, mridc.core.neural_types.neural_type.NeuralType], NoneType] = <TypeState.UNINITIALIZED: 0>,\n    ignore_collections: bool = False\n)", "funcdef": "def"}, "mridc.core.classes.common.typecheck.TypeState": {"fullname": "mridc.core.classes.common.typecheck.TypeState", "modulename": "mridc.core.classes.common", "qualname": "typecheck.TypeState", "type": "class", "doc": "<p>Placeholder to denote the default value of type information provided.\nIf the constructor of this decorator is used to override the class level type definition,\nthis enum value indicate that types will be overridden.</p>\n", "bases": "enum.Enum"}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"fullname": "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED", "modulename": "mridc.core.classes.common", "qualname": "typecheck.TypeState.UNINITIALIZED", "type": "variable", "doc": "<p></p>\n", "default_value": " = <TypeState.UNINITIALIZED: 0>"}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"fullname": "mridc.core.classes.common.typecheck.set_typecheck_enabled", "modulename": "mridc.core.classes.common", "qualname": "typecheck.set_typecheck_enabled", "type": "function", "doc": "<p>Set the global typecheck flag.</p>\n", "signature": "(enabled: bool = True)", "funcdef": "def"}, "mridc.core.classes.common.typecheck.disable_checks": {"fullname": "mridc.core.classes.common.typecheck.disable_checks", "modulename": "mridc.core.classes.common", "qualname": "typecheck.disable_checks", "type": "function", "doc": "<p>Temporarily disable type checks.</p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.dataset": {"fullname": "mridc.core.classes.dataset", "modulename": "mridc.core.classes.dataset", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.dataset.Dataset": {"fullname": "mridc.core.classes.dataset.Dataset", "modulename": "mridc.core.classes.dataset", "qualname": "Dataset", "type": "class", "doc": "<p>Dataset with output ports. Please Note: Subclasses of IterableDataset should <em>not</em> implement input_types.</p>\n", "bases": "typing.Generic[+T_co]"}, "mridc.core.classes.dataset.Dataset.__init__": {"fullname": "mridc.core.classes.dataset.Dataset.__init__", "modulename": "mridc.core.classes.dataset", "qualname": "Dataset.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.dataset.Dataset.collate_fn": {"fullname": "mridc.core.classes.dataset.Dataset.collate_fn", "modulename": "mridc.core.classes.dataset", "qualname": "Dataset.collate_fn", "type": "function", "doc": "<p>This is the method that user pass as functor to DataLoader.\nThe method optionally performs neural type checking and add types to the outputs.\nPlease note, subclasses of Dataset should not implement <code>input_types</code>.</p>\n\n<h1 id=\"usage\">Usage:</h1>\n\n<p>dataloader = torch.utils.data.DataLoader(\n        ....,\n        collate_fn=dataset.collate_fn,\n        ....\n)\nReturns:\n    Collated batch, with or without types.</p>\n", "signature": "(self, batch)", "funcdef": "def"}, "mridc.core.classes.dataset.DatasetConfig": {"fullname": "mridc.core.classes.dataset.DatasetConfig", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig", "type": "class", "doc": "<p>Dataset configuration.</p>\n"}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"fullname": "mridc.core.classes.dataset.DatasetConfig.__init__", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    batch_size: int = 32,\n    drop_last: bool = False,\n    shuffle: bool = False,\n    num_workers: Optional[int] = 0,\n    pin_memory: bool = True\n)", "funcdef": "def"}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"fullname": "mridc.core.classes.dataset.DatasetConfig.batch_size", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig.batch_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 32"}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"fullname": "mridc.core.classes.dataset.DatasetConfig.drop_last", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig.drop_last", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"fullname": "mridc.core.classes.dataset.DatasetConfig.shuffle", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig.shuffle", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"fullname": "mridc.core.classes.dataset.DatasetConfig.num_workers", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig.num_workers", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = 0"}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"fullname": "mridc.core.classes.dataset.DatasetConfig.pin_memory", "modulename": "mridc.core.classes.dataset", "qualname": "DatasetConfig.pin_memory", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = True"}, "mridc.core.classes.dataset.IterableDataset": {"fullname": "mridc.core.classes.dataset.IterableDataset", "modulename": "mridc.core.classes.dataset", "qualname": "IterableDataset", "type": "class", "doc": "<p>Iterable Dataset with output ports.\nPlease Note: Subclasses of IterableDataset should <em>not</em> implement input_types.</p>\n", "bases": "torch.utils.data.dataset.Dataset[+T_co]"}, "mridc.core.classes.dataset.IterableDataset.__init__": {"fullname": "mridc.core.classes.dataset.IterableDataset.__init__", "modulename": "mridc.core.classes.dataset", "qualname": "IterableDataset.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"fullname": "mridc.core.classes.dataset.IterableDataset.collate_fn", "modulename": "mridc.core.classes.dataset", "qualname": "IterableDataset.collate_fn", "type": "function", "doc": "<p>This is the method that user pass as functor to DataLoader.\nThe method optionally performs neural type checking and add types to the outputs.</p>\n\n<h1 id=\"usage\">Usage:</h1>\n\n<p>dataloader = torch.utils.data.DataLoader(\n        ....,\n        collate_fn=dataset.collate_fn,\n        ....\n)</p>\n\n<p>Returns:\n    Collated batch, with or without types.</p>\n", "signature": "(self, batch)", "funcdef": "def"}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"fullname": "mridc.core.classes.dataset.IterableDataset.reinforce_type", "modulename": "mridc.core.classes.dataset", "qualname": "IterableDataset.reinforce_type", "type": "function", "doc": "<p>Reinforce the type for DataPipe instance. And the 'expected_type' is required\nto be a subtype of the original type hint to restrict the type requirement\nof DataPipe instance.</p>\n", "signature": "(self, expected_type)", "funcdef": "def"}, "mridc.core.classes.export": {"fullname": "mridc.core.classes.export", "modulename": "mridc.core.classes.export", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.export.ExportFormat": {"fullname": "mridc.core.classes.export.ExportFormat", "modulename": "mridc.core.classes.export", "qualname": "ExportFormat", "type": "class", "doc": "<p>Which format to use when exporting a Neural Module for deployment</p>\n", "bases": "enum.Enum"}, "mridc.core.classes.export.ExportFormat.ONNX": {"fullname": "mridc.core.classes.export.ExportFormat.ONNX", "modulename": "mridc.core.classes.export", "qualname": "ExportFormat.ONNX", "type": "variable", "doc": "<p></p>\n", "default_value": " = <ExportFormat.ONNX: (1,)>"}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"fullname": "mridc.core.classes.export.ExportFormat.TORCHSCRIPT", "modulename": "mridc.core.classes.export", "qualname": "ExportFormat.TORCHSCRIPT", "type": "variable", "doc": "<p></p>\n", "default_value": " = <ExportFormat.TORCHSCRIPT: (2,)>"}, "mridc.core.classes.export.Exportable": {"fullname": "mridc.core.classes.export.Exportable", "modulename": "mridc.core.classes.export", "qualname": "Exportable", "type": "class", "doc": "<p>It gives these entities ability to be exported for deployment to formats such as ONNX.</p>\n", "bases": "abc.ABC"}, "mridc.core.classes.export.Exportable.__init__": {"fullname": "mridc.core.classes.export.Exportable.__init__", "modulename": "mridc.core.classes.export", "qualname": "Exportable.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.classes.export.Exportable.get_format": {"fullname": "mridc.core.classes.export.Exportable.get_format", "modulename": "mridc.core.classes.export", "qualname": "Exportable.get_format", "type": "function", "doc": "<p>Returns the format of the file</p>\n", "signature": "(filename: str)", "funcdef": "def"}, "mridc.core.classes.export.Exportable.input_module": {"fullname": "mridc.core.classes.export.Exportable.input_module", "modulename": "mridc.core.classes.export", "qualname": "Exportable.input_module", "type": "variable", "doc": "<p>Returns the input module</p>\n"}, "mridc.core.classes.export.Exportable.output_module": {"fullname": "mridc.core.classes.export.Exportable.output_module", "modulename": "mridc.core.classes.export", "qualname": "Exportable.output_module", "type": "variable", "doc": "<p>Returns the output module</p>\n"}, "mridc.core.classes.export.Exportable.export": {"fullname": "mridc.core.classes.export.Exportable.export", "modulename": "mridc.core.classes.export", "qualname": "Exportable.export", "type": "function", "doc": "<p>Exports the Neural Module to a file.</p>\n", "signature": "(\n    self,\n    output: str,\n    input_example=None,\n    output_example=None,\n    verbose=False,\n    export_params=True,\n    do_constant_folding=True,\n    keep_initializers_as_inputs=False,\n    onnx_opset_version: int = 13,\n    try_script: bool = False,\n    set_eval: bool = True,\n    check_trace: bool = False,\n    use_dynamic_axes: bool = True,\n    dynamic_axes=None,\n    check_tolerance=0.01\n)", "funcdef": "def"}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"fullname": "mridc.core.classes.export.Exportable.disabled_deployment_input_names", "modulename": "mridc.core.classes.export", "qualname": "Exportable.disabled_deployment_input_names", "type": "variable", "doc": "<p>Implement this method to return a set of input names disabled for export</p>\n"}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"fullname": "mridc.core.classes.export.Exportable.disabled_deployment_output_names", "modulename": "mridc.core.classes.export", "qualname": "Exportable.disabled_deployment_output_names", "type": "variable", "doc": "<p>Implement this method to return a set of output names disabled for export</p>\n"}, "mridc.core.classes.export.Exportable.supported_export_formats": {"fullname": "mridc.core.classes.export.Exportable.supported_export_formats", "modulename": "mridc.core.classes.export", "qualname": "Exportable.supported_export_formats", "type": "variable", "doc": "<p>Implement this method to return a set of export formats supported. Default is all types.</p>\n"}, "mridc.core.classes.export.Exportable.forward": {"fullname": "mridc.core.classes.export.Exportable.forward", "modulename": "mridc.core.classes.export", "qualname": "Exportable.forward", "type": "function", "doc": "<p>Override this method to implement forward pass.</p>\n", "signature": "(self, *inputs, **kwargs)", "funcdef": "def"}, "mridc.core.classes.loss": {"fullname": "mridc.core.classes.loss", "modulename": "mridc.core.classes.loss", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.loss.Loss": {"fullname": "mridc.core.classes.loss.Loss", "modulename": "mridc.core.classes.loss", "qualname": "Loss", "type": "class", "doc": "<p>Inherit this class to implement custom loss.</p>\n", "bases": "torch.nn.modules.loss._Loss, mridc.core.classes.common.Typing, mridc.core.classes.common.Serialization"}, "mridc.core.classes.modelPT": {"fullname": "mridc.core.classes.modelPT", "modulename": "mridc.core.classes.modelPT", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.modelPT.ModelPT": {"fullname": "mridc.core.classes.modelPT.ModelPT", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT", "type": "class", "doc": "<p>Interface for Pytorch-lightning based mridc models</p>\n", "bases": "pytorch_lightning.core.lightning.LightningModule, mridc.core.classes.common.Model"}, "mridc.core.classes.modelPT.ModelPT.__init__": {"fullname": "mridc.core.classes.modelPT.ModelPT.__init__", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.__init__", "type": "function", "doc": "<p>Base class from which all mridc models should inherit</p>\n\n<p>Internal global flags that determine core functionality of ModelPT.\n_MODEL_IS_RESTORED:\n    This flag determines the context of the model - whether the model is currently being\n    restored or not.\n    -   When set, it can be assumed that the model's will disable all automatic methods -\n        setup_training_data(), setup_validation/test_data() and their multi equivalents.\n    -   If a model is being restored from a archive file (tarfile), it can be assumed that\n        under this context, the cwd is <em>inside</em> the tarfile itself.\n_MODEL_RESTORE_PATH:\n    A string path to a a file from which the model is being restored.\n    This file can either be a PyTorch Lightning Checkpoint, or a archive (tarfile) that contains\n    artifact objects.\n    If it is an archive file, during restoration, the cwd will be temporarily moved to inside the\n    archive itself.</p>\n\n<p>Args:\n    cfg (DictConfig):  configuration object.\n        The cfg object should have (optionally) the following sub-configs:\n        * train_ds - to instantiate training dataset\n        * validation_ds - to instantiate validation dataset\n        * test_ds - to instantiate testing dataset\n        * optim - to instantiate optimizer with learning rate scheduler\n    trainer (Optional): Pytorch Lightning Trainer instance</p>\n", "signature": "(\n    self,\n    cfg: omegaconf.dictconfig.DictConfig,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"fullname": "mridc.core.classes.modelPT.ModelPT.register_artifact", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.register_artifact", "type": "function", "doc": "<p>Register model artifacts with this function. These artifacts (files) will be included inside .mridc file\nwhen model.save_to(\"model.mridc\") is called.\nHow it works:</p>\n\n<ol>\n<li>It always returns existing absolute path which can be used during Model constructor call\nEXCEPTION: src is None or \"\" in which case nothing will be done and src will be returned</li>\n<li>It will add (config_path, model_utils.ArtifactItem()) pair to self.artifacts\nIf \"src\" is local existing path, then it will be returned in absolute path form.\nelif \"src\" starts with \"mridc_file:unique_artifact_name\":\n.mridc will be untarred to a temporary folder location and an actual existing path will be returned\nelse an error will be raised.\nWARNING: use .register_artifact calls in your models' constructors.\nThe returned path is not guaranteed to exist after you have exited your model's constructor.\nArgs:\nconfig_path (str): Artifact key. Usually corresponds to the model config.\nsrc (str): Path to artifact.\nverify_src_exists (bool): If set to False, then the artifact is optional and register_artifact will\n                            return None even if src is not found. Defaults to True.\nReturns:\nstr: If src is not None or empty it always returns absolute path which is guaranteed to exists during\n    model instance life</li>\n</ol>\n", "signature": "(self, config_path: str, src: str, verify_src_exists: bool = True)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.save_to": {"fullname": "mridc.core.classes.modelPT.ModelPT.save_to", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.save_to", "type": "function", "doc": "<p>Saves model instance (weights and configuration) into .mridc file\n You can use \"restore_from\" method to fully restore instance from .mridc file.\n.mridc file is an archive (tar.gz) with the following:\n    model_config.yaml - model configuration in .yaml format. You can deserialize this into cfg argument for\n    model's constructor\n    model_wights.ckpt - model checkpoint\nArgs:\n    save_path: Path to .mridc file where model instance should be saved</p>\n", "signature": "(self, save_path: str)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"fullname": "mridc.core.classes.modelPT.ModelPT.restore_from", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.restore_from", "type": "function", "doc": "<p>Restores model instance (weights and configuration) from .mridc file.\nArgs:\n    restore_path: path to .mridc file from which model should be instantiated\n    override_config_path: path to a yaml config that will override the internal\n        config file or an OmegaConf / DictConfig object representing the model config.\n    map_location: Optional torch.device() to map the instantiated model to a device.\n        By default (None), it will select a GPU if available, falling back to CPU otherwise.\n    strict: Passed to load_state_dict. By default True.\n    return_config: If set to true, will return just the underlying config of the restored\n        model as an OmegaConf DictConfig object without instantiating the model.\n    trainer: Optional, a pytorch lightning Trainer object that will be forwarded to the\n        instantiated model's constructor.\n    save_restore_connector (SaveRestoreConnector): Can be overridden to add custom save and restore logic.\n    Example:\n        <code>\n        model = mridc.collections.asr.models.EncDecCTCModel.restore_from('asr.mridc')\n        assert isinstance(model, mridc.collections.asr.models.EncDecCTCModel)\n</code>\nReturns:\n    An instance of type cls or its underlying config (if return_config is set).</p>\n", "signature": "(\n    cls,\n    restore_path: str,\n    override_config_path: Union[omegaconf.omegaconf.OmegaConf, str, NoneType] = None,\n    map_location: Optional[torch.device] = None,\n    strict: bool = True,\n    return_config: bool = False,\n    save_restore_connector: mridc.core.connectors.save_restore_connector.SaveRestoreConnector = None,\n    trainer: Optional[pytorch_lightning.trainer.trainer.Trainer] = None\n)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"fullname": "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.load_from_checkpoint", "type": "function", "doc": "<p>Loads ModelPT from checkpoint, with some maintenance of restoration.\nFor documentation, please refer to LightningModule.load_from_checkpoint() documentation.</p>\n", "signature": "(\n    cls,\n    checkpoint_path: str,\n    *args,\n    map_location: Union[Dict[str, str], str, torch.device, int, Callable, NoneType] = None,\n    hparams_file: Optional[str] = None,\n    strict: bool = True,\n    **kwargs\n)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"fullname": "mridc.core.classes.modelPT.ModelPT.setup_training_data", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.setup_training_data", "type": "function", "doc": "<p>Setups data loader to be used in training\nArgs:\n    train_data_config: training data layer parameters.\nReturns:</p>\n", "signature": "(\n    self,\n    train_data_config: Union[omegaconf.dictconfig.DictConfig, Dict]\n)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"fullname": "mridc.core.classes.modelPT.ModelPT.setup_validation_data", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.setup_validation_data", "type": "function", "doc": "<p>Setups data loader to be used in validation\nArgs:\n    val_data_config: validation data layer parameters.\nReturns:</p>\n", "signature": "(self, val_data_config: Union[omegaconf.dictconfig.DictConfig, Dict])", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"fullname": "mridc.core.classes.modelPT.ModelPT.setup_test_data", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.setup_test_data", "type": "function", "doc": "<p>(Optionally) Setups data loader to be used in test\nArgs:\n    test_data_config: test data layer parameters.\nReturns:</p>\n", "signature": "(self, test_data_config: Union[omegaconf.dictconfig.DictConfig, Dict])", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"fullname": "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.setup_multiple_validation_data", "type": "function", "doc": "<p>(Optionally) Setups data loader to be used in validation</p>\n\n<p>Args:\n    val_data_config: validation data layer parameters.</p>\n", "signature": "(self, val_data_config: Union[omegaconf.dictconfig.DictConfig, Dict])", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"fullname": "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.setup_multiple_test_data", "type": "function", "doc": "<p>(Optionally) Setups data loader to be used in test, with support for multiple data loaders.\nArgs:\n    test_data_config ():  test data layer parameters.</p>\n", "signature": "(self, test_data_config: Union[omegaconf.dictconfig.DictConfig, Dict])", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"fullname": "mridc.core.classes.modelPT.ModelPT.setup_optimization", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.setup_optimization", "type": "function", "doc": "<p>Prepares an optimizer from a string name and its optional config parameters.\nArgs:\n    optim_config: A dictionary containing the following keys:\n        * \"lr\": mandatory key for learning rate. Will raise ValueError if not provided.\n        * \"optimizer\": string name pointing to one of the available optimizers in the registry.                 If not provided, defaults to \"adam\".\n        * \"opt_args\": Optional list of strings, in the format \"arg_name=arg_value\".                 The list of \"arg_value\" will be parsed and a dictionary of optimizer kwargs                 will be built and supplied to instantiate the optimizer.</p>\n", "signature": "(\n    self,\n    optim_config: Union[omegaconf.dictconfig.DictConfig, Dict, NoneType] = None\n)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"fullname": "mridc.core.classes.modelPT.ModelPT.configure_optimizers", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.configure_optimizers", "type": "function", "doc": "<p>Configure optimizers and schedulers for training.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"fullname": "mridc.core.classes.modelPT.ModelPT.train_dataloader", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.train_dataloader", "type": "function", "doc": "<p>Return the training dataloader.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"fullname": "mridc.core.classes.modelPT.ModelPT.val_dataloader", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.val_dataloader", "type": "function", "doc": "<p>Return the validation dataloader.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"fullname": "mridc.core.classes.modelPT.ModelPT.test_dataloader", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.test_dataloader", "type": "function", "doc": "<p>Return the test dataloader.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"fullname": "mridc.core.classes.modelPT.ModelPT.validation_epoch_end", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.validation_epoch_end", "type": "function", "doc": "<p>Default DataLoader for Validation set which automatically supports multiple data loaders\nvia <code>multi_validation_epoch_end</code>.\nIf multi dataset support is not required, override this method entirely in base class.\nIn such a case, there is no need to implement <code>multi_validation_epoch_end</code> either.\n.. note::\n    If more than one data loader exists, and they all provide <code>val_loss</code>,\n    only the <code>val_loss</code> of the first data loader will be used by default.\n    This default can be changed by passing the special key <code>val_dl_idx: int</code>\n    inside the <code>validation_ds</code> config.\nArgs:\n    outputs: Single or nested list of tensor outputs from one or more data loaders.\nReturns:\n    A dictionary containing the union of all items from individual data_loaders,\n    along with merged logs from all data loaders.</p>\n", "signature": "(\n    self,\n    outputs: Union[List[Dict[str, torch.Tensor]], List[List[Dict[str, torch.Tensor]]]]\n) -> Optional[Dict[str, Dict[str, torch.Tensor]]]", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"fullname": "mridc.core.classes.modelPT.ModelPT.test_epoch_end", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.test_epoch_end", "type": "function", "doc": "<p>Default DataLoader for Test set which automatically supports multiple data loaders\nvia <code>multi_test_epoch_end</code>.\nIf multi dataset support is not required, override this method entirely in base class.\nIn such a case, there is no need to implement <code>multi_test_epoch_end</code> either.\n.. note::\n    If more than one data loader exists, and they all provide <code>test_loss</code>,\n    only the <code>test_loss</code> of the first data loader will be used by default.\n    This default can be changed by passing the special key <code>_test_dl_idx: int</code>\n    inside the <code>test_ds</code> config.\nArgs:\n    outputs: Single or nested list of tensor outputs from one or more data loaders.\nReturns:\n    A dictionary containing the union of all items from individual data_loaders,\n    along with merged logs from all data loaders.</p>\n", "signature": "(\n    self,\n    outputs: Union[List[Dict[str, torch.Tensor]], List[List[Dict[str, torch.Tensor]]]]\n) -> Optional[Dict[str, Dict[str, torch.Tensor]]]", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"fullname": "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.multi_validation_epoch_end", "type": "function", "doc": "<p>Adds support for multiple validation datasets. Should be overridden by subclass,\nso as to obtain appropriate logs for each of the dataloaders.\nArgs:\n    outputs: Same as that provided by LightningModule.validation_epoch_end()\n        for a single dataloader.\n    dataloader_idx: int representing the index of the dataloader.\nReturns:\n    A dictionary of values, optionally containing a sub-dict <code>log</code>,\n    such that the values in the log will be pre-pended by the dataloader prefix.</p>\n", "signature": "(\n    outputs: Union[object, List[Dict[str, torch.Tensor]], NoneType],\n    dataloader_idx: int = 0\n) -> None", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"fullname": "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.multi_test_epoch_end", "type": "function", "doc": "<p>Adds support for multiple test datasets. Should be overridden by subclass,\nso as to obtain appropriate logs for each of the dataloaders.\nArgs:\n    outputs: Same as that provided by LightningModule.validation_epoch_end()\n        for a single dataloader.\n    dataloader_idx: int representing the index of the dataloader.\nReturns:\n    A dictionary of values, optionally containing a sub-dict <code>log</code>,\n    such that the values in the log will be pre-pended by the dataloader prefix.</p>\n", "signature": "(\n    outputs: Union[object, List[Dict[str, torch.Tensor]]],\n    dataloader_idx: int = 0\n) -> None", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"fullname": "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.get_validation_dataloader_prefix", "type": "function", "doc": "<p>Get the name of one or more data loaders, which will be prepended to all logs.\nArgs:\n    dataloader_idx: Index of the data loader.\nReturns:\n    str name of the data loader at index provided.</p>\n", "signature": "(self, dataloader_idx: int = 0) -> str", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"fullname": "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.get_test_dataloader_prefix", "type": "function", "doc": "<p>Get the name of one or more data loaders, which will be prepended to all logs.\nArgs:\n    dataloader_idx: Index of the data loader.\nReturns:\n    str name of the data loader at index provided.</p>\n", "signature": "(self, dataloader_idx: int = 0) -> str", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"fullname": "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.load_part_of_state_dict", "type": "function", "doc": "<p>Load part of the state dict.</p>\n", "signature": "(self, state_dict, include, exclude, load_from_string)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"fullname": "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.maybe_init_from_pretrained_checkpoint", "type": "function", "doc": "<p>Initializes a given model with the parameters obtained via specific config arguments.\nThe state dict of the provided model will be updated with <code>strict=False</code> setting so as to prevent\nrequirement of exact model parameters matching.\nInitializations:\n    init_from_mridc_model: Str path to a .mridc model, which will be instantiated in order\n        to extract the state dict.\n    init_from_pretrained_model: Str name of a pretrained model checkpoint (obtained via cloud).\n        The model will be downloaded (or a cached copy will be used), instantiated and then\n        its state dict will be extracted.\n    init_from_ptl_ckpt: Str name of a Pytorch Lightning checkpoint file. It will be loaded and\n        the state dict will extracted.\nArgs:\n    cfg: The config used to instantiate the model. It need only contain one of the above keys.\n    map_location: str or torch.device() which represents where the intermediate state dict\n        (from the pretrained model or checkpoint) will be loaded.</p>\n", "signature": "(self, cfg: omegaconf.omegaconf.OmegaConf, map_location: str = 'cpu')", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.teardown": {"fullname": "mridc.core.classes.modelPT.ModelPT.teardown", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.teardown", "type": "function", "doc": "<p>Called at the end of fit and test.\nArgs:\n    stage: either 'fit' or 'test'</p>\n", "signature": "(self, stage: str)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"fullname": "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.extract_state_dict_from", "type": "function", "doc": "<p>Extract the state dict(s) from a provided .mridc tarfile and save it to a directory.\nArgs:\n    restore_path: path to .mridc file from which state dict(s) should be extracted\n    save_dir: directory in which the saved state dict(s) should be stored\n    split_by_module: bool flag, which determines whether the output checkpoint should\n        be for the entire Model, or the individual module's that comprise the Model\n    save_restore_connector (SaveRestoreConnector): Can be overridden to add custom save and restore logic.\nExample:\n    To convert the .mridc tarfile into a single Model level PyTorch checkpoint\n    ::\n    state_dict = mridc.collections.asr.models.EncDecCTCModel.extract_state_dict_from('asr.mridc',\n                './asr_ckpts')\n    To restore a model from a Model level checkpoint\n    ::\n    model = mridc.collections.asr.models.EncDecCTCModel(cfg)  # or any other method of restoration\n    model.load_state_dict(torch.load(\"./asr_ckpts/model_weights.ckpt\"))\n    To convert the .mridc tarfile into multiple Module level PyTorch checkpoints\n    ::\n    state_dict = mridc.collections.asr.models.EncDecCTCModel.extract_state_dict_from('asr.mridc',\n                './asr_ckpts', split_by_module=True)\n    To restore a module from a Module level checkpoint\n    ::\n    model = mridc.collections.asr.models.EncDecCTCModel(cfg)  # or any other method of restoration\n    # load the individual components\n    model.preprocessor.load_state_dict(torch.load(\"./asr_ckpts/preprocessor.ckpt\"))\n    model.encoder.load_state_dict(torch.load(\"./asr_ckpts/encoder.ckpt\"))\n    model.decoder.load_state_dict(torch.load(\"./asr_ckpts/decoder.ckpt\"))\nReturns:\n    The state dict that was loaded from the original .mridc checkpoint</p>\n", "signature": "(\n    cls,\n    restore_path: str,\n    save_dir: str,\n    split_by_module: bool = False,\n    save_restore_connector: mridc.core.connectors.save_restore_connector.SaveRestoreConnector = None\n)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"fullname": "mridc.core.classes.modelPT.ModelPT.prepare_test", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.prepare_test", "type": "function", "doc": "<p>Helper method to check whether the model can safely be tested\non a dataset after training (or loading a checkpoint).\n::\n    trainer = Trainer()\n    if model.prepare_test(trainer):\n        trainer.test(model)\nReturns:\n    bool which declares the model safe to test. Provides warnings if it has to\n    return False to guide the user.</p>\n", "signature": "(self, trainer: pytorch_lightning.trainer.trainer.Trainer) -> bool", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"fullname": "mridc.core.classes.modelPT.ModelPT.set_trainer", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.set_trainer", "type": "function", "doc": "<p>Set an instance of Trainer object.\nArgs:\n    trainer: PyTorch Lightning Trainer object.</p>\n", "signature": "(self, trainer: pytorch_lightning.trainer.trainer.Trainer)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"fullname": "mridc.core.classes.modelPT.ModelPT.set_world_size", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.set_world_size", "type": "function", "doc": "<p>Determines the world size from the PyTorch Lightning Trainer.\nAnd then updates AppState.\nArgs:\n    trainer (Trainer): PyTorch Lightning Trainer object</p>\n", "signature": "(self, trainer: pytorch_lightning.trainer.trainer.Trainer)", "funcdef": "def"}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"fullname": "mridc.core.classes.modelPT.ModelPT.num_weights", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.num_weights", "type": "variable", "doc": "<p>Utility property that returns the total number of parameters of the Model.</p>\n"}, "mridc.core.classes.modelPT.ModelPT.cfg": {"fullname": "mridc.core.classes.modelPT.ModelPT.cfg", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.cfg", "type": "variable", "doc": "<p>Property that holds the finalized internal config of the model.\nNote:\n    Changes to this config are not reflected in the state of the model.\n    Please create a new model using an updated config to properly update the model.</p>\n"}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"fullname": "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector", "modulename": "mridc.core.classes.modelPT", "qualname": "ModelPT.update_save_restore_connector", "type": "function", "doc": "<p>Update the save_restore_connector of the model.</p>\n", "signature": "(cls, save_restore_connector)", "funcdef": "def"}, "mridc.core.classes.module": {"fullname": "mridc.core.classes.module", "modulename": "mridc.core.classes.module", "type": "module", "doc": "<p></p>\n"}, "mridc.core.classes.module.NeuralModule": {"fullname": "mridc.core.classes.module.NeuralModule", "modulename": "mridc.core.classes.module", "qualname": "NeuralModule", "type": "class", "doc": "<p>Abstract class offering interface shared between all PyTorch Neural Modules.</p>\n", "bases": "torch.nn.modules.module.Module, mridc.core.classes.common.Typing, mridc.core.classes.common.Serialization, mridc.core.classes.common.FileIO, abc.ABC"}, "mridc.core.classes.module.NeuralModule.num_weights": {"fullname": "mridc.core.classes.module.NeuralModule.num_weights", "modulename": "mridc.core.classes.module", "qualname": "NeuralModule.num_weights", "type": "variable", "doc": "<p>Utility property that returns the total number of parameters of NeuralModule.</p>\n"}, "mridc.core.classes.module.NeuralModule.input_example": {"fullname": "mridc.core.classes.module.NeuralModule.input_example", "modulename": "mridc.core.classes.module", "qualname": "NeuralModule.input_example", "type": "function", "doc": "<p>Override this method if random inputs won't work</p>\n\n<p>Args:\n    max_batch: Maximum batch size to generate\n    max_dim: Maximum dimension to generate</p>\n\n<p>Returns:\n    A tuple sample of valid input data.</p>\n", "signature": "(max_batch=None, max_dim=None)", "funcdef": "def"}, "mridc.core.classes.module.NeuralModule.freeze": {"fullname": "mridc.core.classes.module.NeuralModule.freeze", "modulename": "mridc.core.classes.module", "qualname": "NeuralModule.freeze", "type": "function", "doc": "<p>Freeze all params for inference.</p>\n", "signature": "(self) -> None", "funcdef": "def"}, "mridc.core.classes.module.NeuralModule.unfreeze": {"fullname": "mridc.core.classes.module.NeuralModule.unfreeze", "modulename": "mridc.core.classes.module", "qualname": "NeuralModule.unfreeze", "type": "function", "doc": "<p>Unfreeze all parameters for training.</p>\n", "signature": "(self) -> None", "funcdef": "def"}, "mridc.core.classes.module.NeuralModule.as_frozen": {"fullname": "mridc.core.classes.module.NeuralModule.as_frozen", "modulename": "mridc.core.classes.module", "qualname": "NeuralModule.as_frozen", "type": "function", "doc": "<p>Context manager which temporarily freezes a module, yields control and finally unfreezes the module.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.conf": {"fullname": "mridc.core.conf", "modulename": "mridc.core.conf", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.base_config": {"fullname": "mridc.core.conf.base_config", "modulename": "mridc.core.conf.base_config", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.base_config.Config": {"fullname": "mridc.core.conf.base_config.Config", "modulename": "mridc.core.conf.base_config", "qualname": "Config", "type": "class", "doc": "<p>Abstract mridc Configuration class.</p>\n"}, "mridc.core.conf.base_config.Config.__init__": {"fullname": "mridc.core.conf.base_config.Config.__init__", "modulename": "mridc.core.conf.base_config", "qualname": "Config.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, name: Optional[str] = None)", "funcdef": "def"}, "mridc.core.conf.base_config.Config.name": {"fullname": "mridc.core.conf.base_config.Config.name", "modulename": "mridc.core.conf.base_config", "qualname": "Config.name", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.core.conf.dataloader": {"fullname": "mridc.core.conf.dataloader", "modulename": "mridc.core.conf.dataloader", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.dataloader.DataLoaderConfig": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig", "type": "class", "doc": "<p>Configuration of PyTorch DataLoader.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/data.docs#torch.utils.data.DataLoader</p>\n"}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.__init__", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    batch_size: int = '???',\n    shuffle: bool = False,\n    sampler: Optional[Any] = None,\n    batch_sampler: Optional[Any] = None,\n    num_workers: int = 0,\n    collate_fn: Optional[Any] = None,\n    pin_memory: bool = False,\n    drop_last: bool = False,\n    timeout: int = 0,\n    worker_init_fn: Optional[Any] = None,\n    multiprocessing_context: Optional[Any] = None\n)", "funcdef": "def"}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.batch_size", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.batch_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = '???'"}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.shuffle", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.shuffle", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.sampler", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.sampler", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.batch_sampler", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.num_workers", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.num_workers", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 0"}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.collate_fn", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.pin_memory", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.drop_last", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.drop_last", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.timeout", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.timeout", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 0"}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.worker_init_fn", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"fullname": "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context", "modulename": "mridc.core.conf.dataloader", "qualname": "DataLoaderConfig.multiprocessing_context", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.hydra_runner": {"fullname": "mridc.core.conf.hydra_runner", "modulename": "mridc.core.conf.hydra_runner", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.hydra_runner.hydra_runner": {"fullname": "mridc.core.conf.hydra_runner.hydra_runner", "modulename": "mridc.core.conf.hydra_runner", "qualname": "hydra_runner", "type": "function", "doc": "<p>Decorator used for passing the Config paths to main function.\nOptionally registers a schema used for validation/providing default values.</p>\n\n<p>Args:\n    config_path: Path to the config file.\n    config_name: Name of the config file.\n    schema: Schema used for validation/providing default values.</p>\n\n<p>Returns:\n    A decorator that passes the config paths to the main function.</p>\n", "signature": "(\n    config_path: Optional[str] = '.',\n    config_name: Optional[str] = None,\n    schema: Optional[Any] = None\n) -> Callable[[Callable[[Any], Any]], Any]", "funcdef": "def"}, "mridc.core.conf.modelPT": {"fullname": "mridc.core.conf.modelPT", "modulename": "mridc.core.conf.modelPT", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.modelPT.SchedConfig": {"fullname": "mridc.core.conf.modelPT.SchedConfig", "modulename": "mridc.core.conf.modelPT", "qualname": "SchedConfig", "type": "class", "doc": "<p>Configuration for the scheduler.</p>\n"}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"fullname": "mridc.core.conf.modelPT.SchedConfig.__init__", "modulename": "mridc.core.conf.modelPT", "qualname": "SchedConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, name: str = '???', min_lr: float = 0.0, last_epoch: int = -1)", "funcdef": "def"}, "mridc.core.conf.modelPT.SchedConfig.name": {"fullname": "mridc.core.conf.modelPT.SchedConfig.name", "modulename": "mridc.core.conf.modelPT", "qualname": "SchedConfig.name", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = '???'"}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"fullname": "mridc.core.conf.modelPT.SchedConfig.min_lr", "modulename": "mridc.core.conf.modelPT", "qualname": "SchedConfig.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0"}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"fullname": "mridc.core.conf.modelPT.SchedConfig.last_epoch", "modulename": "mridc.core.conf.modelPT", "qualname": "SchedConfig.last_epoch", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = -1"}, "mridc.core.conf.modelPT.OptimConfig": {"fullname": "mridc.core.conf.modelPT.OptimConfig", "modulename": "mridc.core.conf.modelPT", "qualname": "OptimConfig", "type": "class", "doc": "<p>Configuration for the optimizer.</p>\n"}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"fullname": "mridc.core.conf.modelPT.OptimConfig.__init__", "modulename": "mridc.core.conf.modelPT", "qualname": "OptimConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    name: str = '???',\n    sched: Optional[mridc.core.conf.modelPT.SchedConfig] = None\n)", "funcdef": "def"}, "mridc.core.conf.modelPT.OptimConfig.name": {"fullname": "mridc.core.conf.modelPT.OptimConfig.name", "modulename": "mridc.core.conf.modelPT", "qualname": "OptimConfig.name", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = '???'"}, "mridc.core.conf.modelPT.OptimConfig.sched": {"fullname": "mridc.core.conf.modelPT.OptimConfig.sched", "modulename": "mridc.core.conf.modelPT", "qualname": "OptimConfig.sched", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.core.conf.modelPT.SchedConfig]", "default_value": " = None"}, "mridc.core.conf.modelPT.ModelConfig": {"fullname": "mridc.core.conf.modelPT.ModelConfig", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfig", "type": "class", "doc": "<p>Configuration for the model.</p>\n"}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"fullname": "mridc.core.conf.modelPT.ModelConfig.__init__", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    train_ds: Optional[mridc.core.classes.dataset.DatasetConfig] = None,\n    validation_ds: Optional[mridc.core.classes.dataset.DatasetConfig] = None,\n    test_ds: Optional[mridc.core.classes.dataset.DatasetConfig] = None,\n    optim: Optional[mridc.core.conf.modelPT.OptimConfig] = None\n)", "funcdef": "def"}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"fullname": "mridc.core.conf.modelPT.ModelConfig.train_ds", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfig.train_ds", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.core.classes.dataset.DatasetConfig]", "default_value": " = None"}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"fullname": "mridc.core.conf.modelPT.ModelConfig.validation_ds", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfig.validation_ds", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.core.classes.dataset.DatasetConfig]", "default_value": " = None"}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"fullname": "mridc.core.conf.modelPT.ModelConfig.test_ds", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfig.test_ds", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.core.classes.dataset.DatasetConfig]", "default_value": " = None"}, "mridc.core.conf.modelPT.ModelConfig.optim": {"fullname": "mridc.core.conf.modelPT.ModelConfig.optim", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfig.optim", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.core.conf.modelPT.OptimConfig]", "default_value": " = None"}, "mridc.core.conf.modelPT.HydraConfig": {"fullname": "mridc.core.conf.modelPT.HydraConfig", "modulename": "mridc.core.conf.modelPT", "qualname": "HydraConfig", "type": "class", "doc": "<p>Configuration for the hydra framework.</p>\n"}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"fullname": "mridc.core.conf.modelPT.HydraConfig.__init__", "modulename": "mridc.core.conf.modelPT", "qualname": "HydraConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    run: Dict[str, Any] = <factory>,\n    job_logging: Dict[str, Any] = <factory>\n)", "funcdef": "def"}, "mridc.core.conf.modelPT.MRIDCConfig": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig", "type": "class", "doc": "<p>Configuration for the mridc framework.</p>\n"}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig.__init__", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    name: str = '???',\n    model: mridc.core.conf.modelPT.ModelConfig = '???',\n    trainer: mridc.core.conf.trainer.TrainerConfig = TrainerConfig(logger=False, enable_checkpointing=False, callbacks=None, default_root_dir=None, gradient_clip_val=0, process_position=0, num_nodes=1, num_processes=1, gpus=None, auto_select_gpus=False, tpu_cores=None, log_gpu_memory=None, progress_bar_refresh_rate=1, enable_progress_bar=True, overfit_batches=0.0, track_grad_norm=-1, check_val_every_n_epoch=1, fast_dev_run=False, accumulate_grad_batches=1, max_epochs=1000, min_epochs=1, max_steps=None, min_steps=None, limit_train_batches=1.0, limit_val_batches=1.0, limit_test_batches=1.0, val_check_interval=1.0, flush_logs_every_n_steps=100, log_every_n_steps=1, accelerator='ddp', sync_batchnorm=False, precision=32, weights_summary='full', weights_save_path=None, num_sanity_val_steps=2, resume_from_checkpoint=None, profiler=None, benchmark=False, deterministic=False, reload_dataloaders_every_epoch=False, auto_lr_find=False, replace_sampler_ddp=True, detect_anomaly=False, terminate_on_nan=False, auto_scale_batch_size=False, prepare_data_per_node=True, amp_backend='native', amp_level=None, plugins=None, move_metrics_to_cpu=False, multiple_trainloader_mode='max_size_cycle', limit_predict_batches=1.0, stochastic_weight_avg=False, gradient_clip_algorithm='norm', max_time=None, reload_dataloaders_every_n_epochs=0, ipus=None, devices=None, strategy='ddp', enable_model_summary=True),\n    exp_manager: Optional[Any] = ExpManagerConfig(explicit_log_dir=None, exp_dir=None, name=None, version=None, use_datetime_version=True, resume_if_exists=False, resume_past_end=False, resume_ignore_no_checkpoint=False, create_tensorboard_logger=True, summary_writer_kwargs=None, create_wandb_logger=False, wandb_logger_kwargs=None, create_checkpoint_callback=True, checkpoint_callback_params=CallbackParams(filepath=None, dirpath=None, filename=None, monitor='val_loss', verbose=True, save_last=True, save_top_k=3, save_weights_only=False, mode='min', every_n_epochs=1, prefix=None, postfix='.mridc', save_best_model=False, always_save_mridc=False, save_mridc_on_train_end=True, model_parallel_size=None), files_to_copy=None, log_step_timing=True, step_timing_kwargs=StepTimingParams(reduction='mean', sync_cuda=False, buffer_size=1), model_parallel_size=None),\n    hydra: mridc.core.conf.modelPT.HydraConfig = HydraConfig(run={'dir': '.'}, job_logging={'root': {'handlers': None}})\n)", "funcdef": "def"}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig.name", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig.name", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = '???'"}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig.model", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig.model", "type": "variable", "doc": "<p></p>\n", "annotation": ": mridc.core.conf.modelPT.ModelConfig", "default_value": " = '???'"}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig.trainer", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig.trainer", "type": "variable", "doc": "<p></p>\n", "annotation": ": mridc.core.conf.trainer.TrainerConfig", "default_value": " = TrainerConfig(logger=False, enable_checkpointing=False, callbacks=None, default_root_dir=None, gradient_clip_val=0, process_position=0, num_nodes=1, num_processes=1, gpus=None, auto_select_gpus=False, tpu_cores=None, log_gpu_memory=None, progress_bar_refresh_rate=1, enable_progress_bar=True, overfit_batches=0.0, track_grad_norm=-1, check_val_every_n_epoch=1, fast_dev_run=False, accumulate_grad_batches=1, max_epochs=1000, min_epochs=1, max_steps=None, min_steps=None, limit_train_batches=1.0, limit_val_batches=1.0, limit_test_batches=1.0, val_check_interval=1.0, flush_logs_every_n_steps=100, log_every_n_steps=1, accelerator='ddp', sync_batchnorm=False, precision=32, weights_summary='full', weights_save_path=None, num_sanity_val_steps=2, resume_from_checkpoint=None, profiler=None, benchmark=False, deterministic=False, reload_dataloaders_every_epoch=False, auto_lr_find=False, replace_sampler_ddp=True, detect_anomaly=False, terminate_on_nan=False, auto_scale_batch_size=False, prepare_data_per_node=True, amp_backend='native', amp_level=None, plugins=None, move_metrics_to_cpu=False, multiple_trainloader_mode='max_size_cycle', limit_predict_batches=1.0, stochastic_weight_avg=False, gradient_clip_algorithm='norm', max_time=None, reload_dataloaders_every_n_epochs=0, ipus=None, devices=None, strategy='ddp', enable_model_summary=True)"}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig.exp_manager", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig.exp_manager", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = ExpManagerConfig(explicit_log_dir=None, exp_dir=None, name=None, version=None, use_datetime_version=True, resume_if_exists=False, resume_past_end=False, resume_ignore_no_checkpoint=False, create_tensorboard_logger=True, summary_writer_kwargs=None, create_wandb_logger=False, wandb_logger_kwargs=None, create_checkpoint_callback=True, checkpoint_callback_params=CallbackParams(filepath=None, dirpath=None, filename=None, monitor='val_loss', verbose=True, save_last=True, save_top_k=3, save_weights_only=False, mode='min', every_n_epochs=1, prefix=None, postfix='.mridc', save_best_model=False, always_save_mridc=False, save_mridc_on_train_end=True, model_parallel_size=None), files_to_copy=None, log_step_timing=True, step_timing_kwargs=StepTimingParams(reduction='mean', sync_cuda=False, buffer_size=1), model_parallel_size=None)"}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"fullname": "mridc.core.conf.modelPT.MRIDCConfig.hydra", "modulename": "mridc.core.conf.modelPT", "qualname": "MRIDCConfig.hydra", "type": "variable", "doc": "<p></p>\n", "annotation": ": mridc.core.conf.modelPT.HydraConfig", "default_value": " = HydraConfig(run={'dir': '.'}, job_logging={'root': {'handlers': None}})"}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder", "type": "class", "doc": "<p>Builder for the ModelConfig class.</p>\n"}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder.__init__", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder.__init__", "type": "function", "doc": "<p>Base class for any Model Config Builder.\nA Model Config Builder is a utility class that accepts a ModelConfig dataclass,\nand via a set of utility methods (that are implemented by the subclassed ModelConfigBuilder),\nbuilds a finalized ModelConfig that can be supplied to a MRIDCModel dataclass as\nthe <code>model</code> component.\nSubclasses <em>must</em> implement the private method <code>_finalize_cfg</code>.\n    Inside this method, they must update <code>self.model_cfg</code> with all interdependent config\n    options that need to be set (either updated by user explicitly or with their default value).\n    The updated model config must then be preserved in <code>self.model_cfg</code>.\nExample:\n    # Create the config builder\n    config_builder = <subclass>ModelConfigBuilder()\n    # Update the components of the config that are modifiable\n    config_builder.set_X(X)\n    config_builder.set_Y(Y)\n    # Create a \"finalized\" config dataclass that will contain all the updates\n    # that were specified by the builder\n    model_config = config_builder.build()\n    # Use model config as is (or further update values), then create a new Model\n    model = mridc.<domain>.models.<ModelName>Model(cfg=model_config, trainer=Trainer())\nSupported build methods:</p>\n\n<ul>\n<li>set_train_ds: All model configs can accept a subclass of <code>DatasetConfig</code> as their\n    training conf. Subclasses can override this method to enable auto-complete\n    by replacing <code>Optional[DatasetConfig]</code> with <code>Optional[&lt;subclass of DatasetConfig&gt;]</code>.</li>\n<li>set_validation_ds: All model configs can accept a subclass of <code>DatasetConfig</code> as their\n    validation conf. Subclasses can override this method to enable auto-complete\n    by replacing <code>Optional[DatasetConfig]</code> with <code>Optional[&lt;subclass of DatasetConfig&gt;]</code>.</li>\n<li>set_test_ds: All model configs can accept a subclass of <code>DatasetConfig</code> as their\n    test conf. Subclasses can override this method to enable auto-complete\n    by replacing <code>Optional[DatasetConfig]</code> with <code>Optional[&lt;subclass of DatasetConfig&gt;]</code>.</li>\n<li>set_optim: A build method that supports changes to the Optimizer (and optionally,\n    the Scheduler) used for training the model. The function accepts two inputs -\n    <code>cfg</code>: A subclass of <code>OptimizerParams</code> - any OptimizerParams subclass can be used,\n        in order to select an appropriate Optimizer. Examples: AdamParams.\n    <code>sched_cfg</code>: A subclass of <code>SchedulerParams</code> - any SchedulerParams subclass can be used,\n        in order to select an appropriate Scheduler. Examples: CosineAnnealingParams.\n        Note that this argument is optional.</li>\n<li>build(): The method which should return a \"finalized\" ModelConfig dataclass.\n    Subclasses <em>should</em> always override this method, and update the signature\n    of this method with the return type of the Dataclass, so that it enables\n    autocomplete for the user.\n    Example:\n        def build(self) -> EncDecCTCConfig:\n            return super().build()\nAny additional build methods must be added by subclasses of ModelConfigBuilder.\nArgs:\nmodel_cfg:</li>\n</ul>\n", "signature": "(self, model_cfg: mridc.core.conf.modelPT.ModelConfig)", "funcdef": "def"}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder.set_train_ds", "type": "function", "doc": "<p>Set the training dataset configuration.</p>\n", "signature": "(self, cfg: Optional[mridc.core.classes.dataset.DatasetConfig] = None)", "funcdef": "def"}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder.set_validation_ds", "type": "function", "doc": "<p>Set the validation dataset configuration.</p>\n", "signature": "(self, cfg: Optional[mridc.core.classes.dataset.DatasetConfig] = None)", "funcdef": "def"}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder.set_test_ds", "type": "function", "doc": "<p>Set the test dataset configuration.</p>\n", "signature": "(self, cfg: Optional[mridc.core.classes.dataset.DatasetConfig] = None)", "funcdef": "def"}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder.set_optim", "type": "function", "doc": "<p>Set the optimizer configuration.</p>\n", "signature": "(\n    self,\n    cfg: mridc.core.conf.optimizers.OptimizerParams,\n    sched_cfg: Optional[mridc.core.conf.schedulers.SchedulerParams] = None\n)", "funcdef": "def"}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"fullname": "mridc.core.conf.modelPT.ModelConfigBuilder.build", "modulename": "mridc.core.conf.modelPT", "qualname": "ModelConfigBuilder.build", "type": "function", "doc": "<p>Validate config</p>\n", "signature": "(self) -> mridc.core.conf.modelPT.ModelConfig", "funcdef": "def"}, "mridc.core.conf.optimizers": {"fullname": "mridc.core.conf.optimizers", "modulename": "mridc.core.conf.optimizers", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.optimizers.OptimizerParams": {"fullname": "mridc.core.conf.optimizers.OptimizerParams", "modulename": "mridc.core.conf.optimizers", "qualname": "OptimizerParams", "type": "class", "doc": "<p>Base Optimizer params with no values. User can chose it to explicitly override via\ncommand line arguments</p>\n"}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"fullname": "mridc.core.conf.optimizers.OptimizerParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "OptimizerParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, lr: Optional[float] = '???')", "funcdef": "def"}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"fullname": "mridc.core.conf.optimizers.OptimizerParams.lr", "modulename": "mridc.core.conf.optimizers", "qualname": "OptimizerParams.lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = '???'"}, "mridc.core.conf.optimizers.AdamParams": {"fullname": "mridc.core.conf.optimizers.AdamParams", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamParams", "type": "class", "doc": "<p>Default configuration for Adam optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs?highlight=adam#torch.optim.Adam</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.AdamParams.__init__": {"fullname": "mridc.core.conf.optimizers.AdamParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    eps: float = 1e-08,\n    weight_decay: float = 0,\n    amsgrad: bool = False\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.AdamParams.eps": {"fullname": "mridc.core.conf.optimizers.AdamParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.AdamParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"fullname": "mridc.core.conf.optimizers.AdamParams.amsgrad", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamParams.amsgrad", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.NovogradParams": {"fullname": "mridc.core.conf.optimizers.NovogradParams", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams", "type": "class", "doc": "<p>Configuration of the Novograd optimizer. It has been proposed  in \"Stochastic Gradient Methods with Layer-wise\nAdaptive Moments for Training of Deep Networks\" (https://arxiv.org/abs/1905.11286).\nThe OptimizerParams is a Base Optimizer params with no values.\nUser can chose it to explicitly override via command line arguments.\n    lr (float, optional): learning rate (default: 1e-3)\n    betas (Tuple[float, float], optional): coefficients used for computing\n        running averages of gradient and its square (default: (0.9, 0.999))\n    eps (float, optional): term added to the denominator to improve\n        numerical stability (default: 1e-8)\n    weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n    amsgrad (boolean, optional): whether to use the AMSGrad variant of this\n        algorithm from the paper \"On the Convergence of Adam and Beyond\"</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"fullname": "mridc.core.conf.optimizers.NovogradParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    betas: Tuple[float, float] = (0.95, 0.98),\n    eps: float = 1e-08,\n    weight_decay: float = 0,\n    grad_averaging: bool = False,\n    amsgrad: bool = False,\n    luc: bool = False,\n    luc_trust: float = 0.001,\n    luc_eps: float = 1e-08\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.NovogradParams.betas": {"fullname": "mridc.core.conf.optimizers.NovogradParams.betas", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.betas", "type": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[float, float]", "default_value": " = (0.95, 0.98)"}, "mridc.core.conf.optimizers.NovogradParams.eps": {"fullname": "mridc.core.conf.optimizers.NovogradParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.NovogradParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"fullname": "mridc.core.conf.optimizers.NovogradParams.grad_averaging", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.grad_averaging", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"fullname": "mridc.core.conf.optimizers.NovogradParams.amsgrad", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.amsgrad", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.NovogradParams.luc": {"fullname": "mridc.core.conf.optimizers.NovogradParams.luc", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.luc", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"fullname": "mridc.core.conf.optimizers.NovogradParams.luc_trust", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.luc_trust", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.001"}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"fullname": "mridc.core.conf.optimizers.NovogradParams.luc_eps", "modulename": "mridc.core.conf.optimizers", "qualname": "NovogradParams.luc_eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.optimizers.SGDParams": {"fullname": "mridc.core.conf.optimizers.SGDParams", "modulename": "mridc.core.conf.optimizers", "qualname": "SGDParams", "type": "class", "doc": "<p>Default configuration for Adam optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs?highlight=sgd#torch.optim.SGD</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.SGDParams.__init__": {"fullname": "mridc.core.conf.optimizers.SGDParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "SGDParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    momentum: float = 0,\n    dampening: float = 0,\n    weight_decay: float = 0,\n    nesterov: bool = False\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.SGDParams.momentum": {"fullname": "mridc.core.conf.optimizers.SGDParams.momentum", "modulename": "mridc.core.conf.optimizers", "qualname": "SGDParams.momentum", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.SGDParams.dampening": {"fullname": "mridc.core.conf.optimizers.SGDParams.dampening", "modulename": "mridc.core.conf.optimizers", "qualname": "SGDParams.dampening", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.SGDParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "SGDParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"fullname": "mridc.core.conf.optimizers.SGDParams.nesterov", "modulename": "mridc.core.conf.optimizers", "qualname": "SGDParams.nesterov", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.AdadeltaParams": {"fullname": "mridc.core.conf.optimizers.AdadeltaParams", "modulename": "mridc.core.conf.optimizers", "qualname": "AdadeltaParams", "type": "class", "doc": "<p>Default configuration for Adadelta optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs#torch.optim.Adadelta</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"fullname": "mridc.core.conf.optimizers.AdadeltaParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "AdadeltaParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    rho: float = 0.9,\n    eps: float = 1e-06,\n    weight_decay: float = 0\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"fullname": "mridc.core.conf.optimizers.AdadeltaParams.rho", "modulename": "mridc.core.conf.optimizers", "qualname": "AdadeltaParams.rho", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.9"}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"fullname": "mridc.core.conf.optimizers.AdadeltaParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "AdadeltaParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-06"}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.AdadeltaParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "AdadeltaParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdamaxParams": {"fullname": "mridc.core.conf.optimizers.AdamaxParams", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamaxParams", "type": "class", "doc": "<p>Default configuration for Adamax optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs#torch.optim.Adamax</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"fullname": "mridc.core.conf.optimizers.AdamaxParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamaxParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    betas: Tuple[float, float] = (0.9, 0.999),\n    eps: float = 1e-08,\n    weight_decay: float = 0\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"fullname": "mridc.core.conf.optimizers.AdamaxParams.betas", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamaxParams.betas", "type": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[float, float]", "default_value": " = (0.9, 0.999)"}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"fullname": "mridc.core.conf.optimizers.AdamaxParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamaxParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.AdamaxParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamaxParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdagradParams": {"fullname": "mridc.core.conf.optimizers.AdagradParams", "modulename": "mridc.core.conf.optimizers", "qualname": "AdagradParams", "type": "class", "doc": "<p>Default configuration for Adagrad optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs#torch.optim.Adagrad</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"fullname": "mridc.core.conf.optimizers.AdagradParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "AdagradParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    lr_decay: float = 0,\n    weight_decay: float = 0,\n    initial_accumulator_value: float = 0,\n    eps: float = 1e-10\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"fullname": "mridc.core.conf.optimizers.AdagradParams.lr_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "AdagradParams.lr_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.AdagradParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "AdagradParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"fullname": "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value", "modulename": "mridc.core.conf.optimizers", "qualname": "AdagradParams.initial_accumulator_value", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdagradParams.eps": {"fullname": "mridc.core.conf.optimizers.AdagradParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "AdagradParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-10"}, "mridc.core.conf.optimizers.AdamWParams": {"fullname": "mridc.core.conf.optimizers.AdamWParams", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamWParams", "type": "class", "doc": "<p>Default configuration for AdamW optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs#torch.optim.AdamW</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"fullname": "mridc.core.conf.optimizers.AdamWParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamWParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    betas: Tuple[float, float] = (0.9, 0.999),\n    eps: float = 1e-08,\n    weight_decay: float = 0,\n    amsgrad: bool = False\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.AdamWParams.betas": {"fullname": "mridc.core.conf.optimizers.AdamWParams.betas", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamWParams.betas", "type": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[float, float]", "default_value": " = (0.9, 0.999)"}, "mridc.core.conf.optimizers.AdamWParams.eps": {"fullname": "mridc.core.conf.optimizers.AdamWParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamWParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.AdamWParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamWParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"fullname": "mridc.core.conf.optimizers.AdamWParams.amsgrad", "modulename": "mridc.core.conf.optimizers", "qualname": "AdamWParams.amsgrad", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.RMSpropParams": {"fullname": "mridc.core.conf.optimizers.RMSpropParams", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams", "type": "class", "doc": "<p>Default configuration for RMSprop optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs#torch.optim.RMSprop</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"fullname": "mridc.core.conf.optimizers.RMSpropParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    alpha: float = 0.99,\n    eps: float = 1e-08,\n    weight_decay: float = 0,\n    momentum: float = 0,\n    centered: bool = False\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"fullname": "mridc.core.conf.optimizers.RMSpropParams.alpha", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams.alpha", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.99"}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"fullname": "mridc.core.conf.optimizers.RMSpropParams.eps", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"fullname": "mridc.core.conf.optimizers.RMSpropParams.weight_decay", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams.weight_decay", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"fullname": "mridc.core.conf.optimizers.RMSpropParams.momentum", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams.momentum", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"fullname": "mridc.core.conf.optimizers.RMSpropParams.centered", "modulename": "mridc.core.conf.optimizers", "qualname": "RMSpropParams.centered", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.optimizers.RpropParams": {"fullname": "mridc.core.conf.optimizers.RpropParams", "modulename": "mridc.core.conf.optimizers", "qualname": "RpropParams", "type": "class", "doc": "<p>Default configuration for RpropParams optimizer.\n..note:\n    For the details on the function/meanings of the arguments, please refer to:\n    https://pytorch.org/docs/stable/optim.docs#torch.optim.Rprop</p>\n", "bases": "OptimizerParams"}, "mridc.core.conf.optimizers.RpropParams.__init__": {"fullname": "mridc.core.conf.optimizers.RpropParams.__init__", "modulename": "mridc.core.conf.optimizers", "qualname": "RpropParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    lr: Optional[float] = '???',\n    etas: Tuple[float, float] = (0.5, 1.2),\n    step_sizes: Tuple[float, float] = (1e-06, 50)\n)", "funcdef": "def"}, "mridc.core.conf.optimizers.RpropParams.etas": {"fullname": "mridc.core.conf.optimizers.RpropParams.etas", "modulename": "mridc.core.conf.optimizers", "qualname": "RpropParams.etas", "type": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[float, float]", "default_value": " = (0.5, 1.2)"}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"fullname": "mridc.core.conf.optimizers.RpropParams.step_sizes", "modulename": "mridc.core.conf.optimizers", "qualname": "RpropParams.step_sizes", "type": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[float, float]", "default_value": " = (1e-06, 50)"}, "mridc.core.conf.optimizers.get_optimizer_config": {"fullname": "mridc.core.conf.optimizers.get_optimizer_config", "modulename": "mridc.core.conf.optimizers", "qualname": "get_optimizer_config", "type": "function", "doc": "<p>Convenience method to obtain a OptimizerParams class and partially instantiate it with optimizer kwargs.\nArgs:\n    name: Name of the OptimizerParams in the registry.\n    kwargs: Optional kwargs of the optimizer used during instantiation.\nReturns:\n    a partially instantiated OptimizerParams</p>\n", "signature": "(\n    name: str,\n    **kwargs: Optional[Dict[str, Any]]\n) -> Union[Dict[str, Optional[Dict[str, Any]]], functools.partial]", "funcdef": "def"}, "mridc.core.conf.optimizers.register_optimizer_params": {"fullname": "mridc.core.conf.optimizers.register_optimizer_params", "modulename": "mridc.core.conf.optimizers", "qualname": "register_optimizer_params", "type": "function", "doc": "<p>Checks if the optimizer param name exists in the registry, and if it doesnt, adds it.\nThis allows custom optimizer params to be added and called by name during instantiation.\nArgs:\n    name: Name of the optimizer. Will be used as key to retrieve the optimizer.\n    optimizer_params: Optimizer class</p>\n", "signature": "(\n    name: str,\n    optimizer_params: mridc.core.conf.optimizers.OptimizerParams\n)", "funcdef": "def"}, "mridc.core.conf.schedulers": {"fullname": "mridc.core.conf.schedulers", "modulename": "mridc.core.conf.schedulers", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.schedulers.SchedulerParams": {"fullname": "mridc.core.conf.schedulers.SchedulerParams", "modulename": "mridc.core.conf.schedulers", "qualname": "SchedulerParams", "type": "class", "doc": "<p>Base configuration for all schedulers.</p>\n"}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"fullname": "mridc.core.conf.schedulers.SchedulerParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "SchedulerParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, last_epoch: int = -1)", "funcdef": "def"}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"fullname": "mridc.core.conf.schedulers.SchedulerParams.last_epoch", "modulename": "mridc.core.conf.schedulers", "qualname": "SchedulerParams.last_epoch", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = -1"}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"fullname": "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootConstantSchedulerParams", "type": "class", "doc": "<p>Base configuration for all schedulers.\nIt is not derived from Config as it is not a NeMo object (and in particular it doesn't need a name).</p>\n", "bases": "SchedulerParams"}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"fullname": "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootConstantSchedulerParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    constant_steps: Optional[float] = None,\n    constant_ratio: Optional[float] = None\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"fullname": "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootConstantSchedulerParams.constant_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"fullname": "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootConstantSchedulerParams.constant_ratio", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"fullname": "mridc.core.conf.schedulers.WarmupSchedulerParams", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupSchedulerParams", "type": "class", "doc": "<p>Base configuration for all schedulers.</p>\n", "bases": "SchedulerParams"}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"fullname": "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupSchedulerParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"fullname": "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupSchedulerParams.max_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 0"}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"fullname": "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupSchedulerParams.warmup_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"fullname": "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupSchedulerParams.warmup_ratio", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"fullname": "mridc.core.conf.schedulers.WarmupHoldSchedulerParams", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupHoldSchedulerParams", "type": "class", "doc": "<p>Base configuration for all schedulers.</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"fullname": "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupHoldSchedulerParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    hold_steps: Optional[float] = None,\n    hold_ratio: Optional[float] = None,\n    min_lr: float = 0.0\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"fullname": "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupHoldSchedulerParams.hold_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"fullname": "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupHoldSchedulerParams.hold_ratio", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"fullname": "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupHoldSchedulerParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0"}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingHoldSchedulerParams", "type": "class", "doc": "<p>Base configuration for all schedulers.</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingHoldSchedulerParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    constant_steps: Optional[float] = None,\n    constant_ratio: Optional[float] = None,\n    min_lr: float = 0.0\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingHoldSchedulerParams.constant_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingHoldSchedulerParams.constant_ratio", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingHoldSchedulerParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0"}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"fullname": "mridc.core.conf.schedulers.SquareAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareAnnealingParams", "type": "class", "doc": "<p>Square Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.SquareAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    min_lr: float = 1e-05\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"fullname": "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareAnnealingParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-05"}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"fullname": "mridc.core.conf.schedulers.SquareRootAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootAnnealingParams", "type": "class", "doc": "<p>Square Root Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    min_lr: float = 0.0\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"fullname": "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "SquareRootAnnealingParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0"}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"fullname": "mridc.core.conf.schedulers.CosineAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "CosineAnnealingParams", "type": "class", "doc": "<p>Cosine Annealing parameter config</p>\n", "bases": "WarmupAnnealingHoldSchedulerParams"}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.CosineAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "CosineAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    constant_steps: Optional[float] = None,\n    constant_ratio: Optional[float] = None,\n    min_lr: float = 0.0\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"fullname": "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "CosineAnnealingParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0"}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"fullname": "mridc.core.conf.schedulers.NoamAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "NoamAnnealingParams", "type": "class", "doc": "<p>Cosine Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.NoamAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "NoamAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    min_lr: float = 0.0\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"fullname": "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "NoamAnnealingParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0"}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingParams", "type": "class", "doc": "<p>Warmup Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"fullname": "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio", "modulename": "mridc.core.conf.schedulers", "qualname": "WarmupAnnealingParams.warmup_ratio", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": " = None"}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"fullname": "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "InverseSquareRootAnnealingParams", "type": "class", "doc": "<p>Inverse Square Root Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "InverseSquareRootAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"fullname": "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialDecayAnnealingParams", "type": "class", "doc": "<p>Polynomial Decay Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialDecayAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    power: float = 1.0,\n    cycle: bool = False\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"fullname": "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialDecayAnnealingParams.power", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1.0"}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"fullname": "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialDecayAnnealingParams.cycle", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"fullname": "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialHoldDecayAnnealingParams", "type": "class", "doc": "<p>Polynomial Hold Decay Annealing parameter config</p>\n", "bases": "WarmupSchedulerParams"}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"fullname": "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialHoldDecayAnnealingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    max_steps: int = 0,\n    warmup_steps: Optional[float] = None,\n    warmup_ratio: Optional[float] = None,\n    power: float = 1.0,\n    cycle: bool = False\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"fullname": "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialHoldDecayAnnealingParams.power", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1.0"}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"fullname": "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle", "modulename": "mridc.core.conf.schedulers", "qualname": "PolynomialHoldDecayAnnealingParams.cycle", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.schedulers.StepLRParams": {"fullname": "mridc.core.conf.schedulers.StepLRParams", "modulename": "mridc.core.conf.schedulers", "qualname": "StepLRParams", "type": "class", "doc": "<p>Config for StepLR.</p>\n", "bases": "SchedulerParams"}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"fullname": "mridc.core.conf.schedulers.StepLRParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "StepLRParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    step_size: float = 0.1,\n    gamma: float = 0.1\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"fullname": "mridc.core.conf.schedulers.StepLRParams.step_size", "modulename": "mridc.core.conf.schedulers", "qualname": "StepLRParams.step_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.1"}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"fullname": "mridc.core.conf.schedulers.StepLRParams.gamma", "modulename": "mridc.core.conf.schedulers", "qualname": "StepLRParams.gamma", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.1"}, "mridc.core.conf.schedulers.ExponentialLRParams": {"fullname": "mridc.core.conf.schedulers.ExponentialLRParams", "modulename": "mridc.core.conf.schedulers", "qualname": "ExponentialLRParams", "type": "class", "doc": "<p>Config for ExponentialLR.</p>\n", "bases": "SchedulerParams"}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"fullname": "mridc.core.conf.schedulers.ExponentialLRParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "ExponentialLRParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, last_epoch: int = -1, gamma: float = 0.9)", "funcdef": "def"}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"fullname": "mridc.core.conf.schedulers.ExponentialLRParams.gamma", "modulename": "mridc.core.conf.schedulers", "qualname": "ExponentialLRParams.gamma", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.9"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams", "type": "class", "doc": "<p>Config for ReduceLROnPlateau.</p>\n"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    mode: str = 'min',\n    factor: float = 0.1,\n    patience: int = 10,\n    verbose: bool = False,\n    threshold: float = 0.0001,\n    threshold_mode: str = 'rel',\n    cooldown: int = 0,\n    min_lr: float = 0,\n    eps: float = 1e-08\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.mode", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'min'"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.factor", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.1"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.patience", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 10"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.verbose", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.threshold", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.0001"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.threshold_mode", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'rel'"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.cooldown", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 0"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.min_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"fullname": "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps", "modulename": "mridc.core.conf.schedulers", "qualname": "ReduceLROnPlateauParams.eps", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1e-08"}, "mridc.core.conf.schedulers.CyclicLRParams": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams", "type": "class", "doc": "<p>Config for CyclicLR.</p>\n", "bases": "SchedulerParams"}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.__init__", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    last_epoch: int = -1,\n    base_lr: float = 0.001,\n    max_lr: float = 0.1,\n    step_size_up: int = 2000,\n    step_size_down: Optional[int] = None,\n    mode: str = 'triangular',\n    gamma: float = 1.0,\n    scale_mode: str = 'cycle',\n    cycle_momentum: bool = True,\n    base_momentum: float = 0.8,\n    max_momentum: float = 0.9\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.base_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.base_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.001"}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.max_lr", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.max_lr", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.1"}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.step_size_up", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.step_size_up", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 2000"}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.step_size_down", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.step_size_down", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = None"}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.mode", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.mode", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'triangular'"}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.gamma", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.gamma", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1.0"}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.scale_mode", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.scale_mode", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'cycle'"}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.cycle_momentum", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = True"}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.base_momentum", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.base_momentum", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.8"}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"fullname": "mridc.core.conf.schedulers.CyclicLRParams.max_momentum", "modulename": "mridc.core.conf.schedulers", "qualname": "CyclicLRParams.max_momentum", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0.9"}, "mridc.core.conf.schedulers.register_scheduler_params": {"fullname": "mridc.core.conf.schedulers.register_scheduler_params", "modulename": "mridc.core.conf.schedulers", "qualname": "register_scheduler_params", "type": "function", "doc": "<p>Checks if the schduler config name exists in the registry, and if it doesnt, adds it.\nThis allows custom schedulers to be added and called by name during instantiation.\nArgs:\n    name: Name of the optimizer. Will be used as key to retrieve the optimizer.\n    scheduler_params: SchedulerParams class</p>\n", "signature": "(\n    name: str,\n    scheduler_params: mridc.core.conf.schedulers.SchedulerParams\n)", "funcdef": "def"}, "mridc.core.conf.schedulers.get_scheduler_config": {"fullname": "mridc.core.conf.schedulers.get_scheduler_config", "modulename": "mridc.core.conf.schedulers", "qualname": "get_scheduler_config", "type": "function", "doc": "<p>Convenience method to obtain a SchedulerParams class and partially instantiate it with optimizer kwargs.\nArgs:\n    name: Name of the SchedulerParams in the registry.\n    kwargs: Optional kwargs of the optimizer used during instantiation.\nReturns:\n    object:\n    a partially instantiated SchedulerParams</p>\n", "signature": "(name: str, **kwargs: Optional[Dict[str, Any]]) -> functools.partial", "funcdef": "def"}, "mridc.core.conf.trainer": {"fullname": "mridc.core.conf.trainer", "modulename": "mridc.core.conf.trainer", "type": "module", "doc": "<p></p>\n"}, "mridc.core.conf.trainer.TrainerConfig": {"fullname": "mridc.core.conf.trainer.TrainerConfig", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig", "type": "class", "doc": "<p>TrainerConfig is a dataclass that holds all the hyperparameters for the training process.</p>\n"}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"fullname": "mridc.core.conf.trainer.TrainerConfig.__init__", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    logger: Any = True,\n    enable_checkpointing: Any = True,\n    callbacks: Optional[Any] = None,\n    default_root_dir: Optional[str] = None,\n    gradient_clip_val: float = 0,\n    process_position: int = 0,\n    num_nodes: int = 1,\n    num_processes: int = 1,\n    gpus: Optional[Any] = None,\n    auto_select_gpus: bool = False,\n    tpu_cores: Optional[Any] = None,\n    log_gpu_memory: Optional[str] = None,\n    progress_bar_refresh_rate: int = 1,\n    enable_progress_bar: bool = True,\n    overfit_batches: Any = 0.0,\n    track_grad_norm: Any = -1,\n    check_val_every_n_epoch: int = 1,\n    fast_dev_run: bool = False,\n    accumulate_grad_batches: Any = 1,\n    max_epochs: int = 1000,\n    min_epochs: int = 1,\n    max_steps: Optional[int] = None,\n    min_steps: Optional[int] = None,\n    limit_train_batches: Any = 1.0,\n    limit_val_batches: Any = 1.0,\n    limit_test_batches: Any = 1.0,\n    val_check_interval: Any = 1.0,\n    flush_logs_every_n_steps: int = 100,\n    log_every_n_steps: int = 50,\n    accelerator: Optional[str] = 'ddp',\n    sync_batchnorm: bool = False,\n    precision: Any = 32,\n    weights_summary: Optional[str] = 'full',\n    weights_save_path: Optional[str] = None,\n    num_sanity_val_steps: int = 2,\n    resume_from_checkpoint: Optional[str] = None,\n    profiler: Optional[Any] = None,\n    benchmark: bool = False,\n    deterministic: bool = False,\n    reload_dataloaders_every_epoch: bool = False,\n    auto_lr_find: Any = False,\n    replace_sampler_ddp: bool = True,\n    detect_anomaly: bool = False,\n    terminate_on_nan: bool = False,\n    auto_scale_batch_size: Any = False,\n    prepare_data_per_node: bool = True,\n    amp_backend: str = 'native',\n    amp_level: Optional[str] = None,\n    plugins: Optional[Any] = None,\n    move_metrics_to_cpu: bool = False,\n    multiple_trainloader_mode: str = 'max_size_cycle',\n    limit_predict_batches: float = 1.0,\n    stochastic_weight_avg: bool = False,\n    gradient_clip_algorithm: str = 'norm',\n    max_time: Optional[Any] = None,\n    reload_dataloaders_every_n_epochs: int = 0,\n    ipus: Optional[int] = None,\n    devices: Any = None,\n    strategy: Any = 'ddp',\n    enable_model_summary: bool = True\n)", "funcdef": "def"}, "mridc.core.conf.trainer.TrainerConfig.logger": {"fullname": "mridc.core.conf.trainer.TrainerConfig.logger", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.logger", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = True"}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"fullname": "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.enable_checkpointing", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = True"}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"fullname": "mridc.core.conf.trainer.TrainerConfig.callbacks", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.callbacks", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"fullname": "mridc.core.conf.trainer.TrainerConfig.default_root_dir", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.default_root_dir", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"fullname": "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.gradient_clip_val", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 0"}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"fullname": "mridc.core.conf.trainer.TrainerConfig.process_position", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.process_position", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 0"}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"fullname": "mridc.core.conf.trainer.TrainerConfig.num_nodes", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.num_nodes", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 1"}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"fullname": "mridc.core.conf.trainer.TrainerConfig.num_processes", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.num_processes", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 1"}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"fullname": "mridc.core.conf.trainer.TrainerConfig.gpus", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.gpus", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"fullname": "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.auto_select_gpus", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"fullname": "mridc.core.conf.trainer.TrainerConfig.tpu_cores", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.tpu_cores", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"fullname": "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.log_gpu_memory", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"fullname": "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.progress_bar_refresh_rate", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 1"}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"fullname": "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.enable_progress_bar", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = True"}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"fullname": "mridc.core.conf.trainer.TrainerConfig.overfit_batches", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.overfit_batches", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 0.0"}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"fullname": "mridc.core.conf.trainer.TrainerConfig.track_grad_norm", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.track_grad_norm", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = -1"}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"fullname": "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.check_val_every_n_epoch", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 1"}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"fullname": "mridc.core.conf.trainer.TrainerConfig.fast_dev_run", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.fast_dev_run", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"fullname": "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.accumulate_grad_batches", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 1"}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"fullname": "mridc.core.conf.trainer.TrainerConfig.max_epochs", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.max_epochs", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 1000"}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"fullname": "mridc.core.conf.trainer.TrainerConfig.min_epochs", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.min_epochs", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 1"}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"fullname": "mridc.core.conf.trainer.TrainerConfig.max_steps", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.max_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"fullname": "mridc.core.conf.trainer.TrainerConfig.min_steps", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.min_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"fullname": "mridc.core.conf.trainer.TrainerConfig.limit_train_batches", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.limit_train_batches", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 1.0"}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"fullname": "mridc.core.conf.trainer.TrainerConfig.limit_val_batches", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.limit_val_batches", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 1.0"}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"fullname": "mridc.core.conf.trainer.TrainerConfig.limit_test_batches", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.limit_test_batches", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 1.0"}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"fullname": "mridc.core.conf.trainer.TrainerConfig.val_check_interval", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.val_check_interval", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 1.0"}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"fullname": "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.flush_logs_every_n_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 100"}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"fullname": "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.log_every_n_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 50"}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"fullname": "mridc.core.conf.trainer.TrainerConfig.accelerator", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.accelerator", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = 'ddp'"}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"fullname": "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.sync_batchnorm", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.precision": {"fullname": "mridc.core.conf.trainer.TrainerConfig.precision", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.precision", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 32"}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"fullname": "mridc.core.conf.trainer.TrainerConfig.weights_summary", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.weights_summary", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = 'full'"}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"fullname": "mridc.core.conf.trainer.TrainerConfig.weights_save_path", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.weights_save_path", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"fullname": "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.num_sanity_val_steps", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 2"}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"fullname": "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.resume_from_checkpoint", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"fullname": "mridc.core.conf.trainer.TrainerConfig.profiler", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.profiler", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"fullname": "mridc.core.conf.trainer.TrainerConfig.benchmark", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.benchmark", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"fullname": "mridc.core.conf.trainer.TrainerConfig.deterministic", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.deterministic", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"fullname": "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.reload_dataloaders_every_epoch", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"fullname": "mridc.core.conf.trainer.TrainerConfig.auto_lr_find", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.auto_lr_find", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"fullname": "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.replace_sampler_ddp", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = True"}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"fullname": "mridc.core.conf.trainer.TrainerConfig.detect_anomaly", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.detect_anomaly", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"fullname": "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.terminate_on_nan", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"fullname": "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.auto_scale_batch_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"fullname": "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.prepare_data_per_node", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = True"}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"fullname": "mridc.core.conf.trainer.TrainerConfig.amp_backend", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.amp_backend", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'native'"}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"fullname": "mridc.core.conf.trainer.TrainerConfig.amp_level", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.amp_level", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"fullname": "mridc.core.conf.trainer.TrainerConfig.plugins", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.plugins", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"fullname": "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.move_metrics_to_cpu", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"fullname": "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.multiple_trainloader_mode", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'max_size_cycle'"}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"fullname": "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.limit_predict_batches", "type": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": " = 1.0"}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"fullname": "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.stochastic_weight_avg", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"fullname": "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.gradient_clip_algorithm", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = 'norm'"}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"fullname": "mridc.core.conf.trainer.TrainerConfig.max_time", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.max_time", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Any]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"fullname": "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.reload_dataloaders_every_n_epochs", "type": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": " = 0"}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"fullname": "mridc.core.conf.trainer.TrainerConfig.ipus", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.ipus", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.devices": {"fullname": "mridc.core.conf.trainer.TrainerConfig.devices", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.devices", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = None"}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"fullname": "mridc.core.conf.trainer.TrainerConfig.strategy", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.strategy", "type": "variable", "doc": "<p></p>\n", "annotation": ": Any", "default_value": " = 'ddp'"}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"fullname": "mridc.core.conf.trainer.TrainerConfig.enable_model_summary", "modulename": "mridc.core.conf.trainer", "qualname": "TrainerConfig.enable_model_summary", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = True"}, "mridc.core.connectors": {"fullname": "mridc.core.connectors", "modulename": "mridc.core.connectors", "type": "module", "doc": "<p></p>\n"}, "mridc.core.connectors.save_restore_connector": {"fullname": "mridc.core.connectors.save_restore_connector", "modulename": "mridc.core.connectors.save_restore_connector", "type": "module", "doc": "<p></p>\n"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector", "type": "class", "doc": "<p>This class is used to save and restore the model state.</p>\n"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.save_to", "type": "function", "doc": "<p>Saves model instance (weights and configuration) into .mridc file.\nYou can use \"restore_from\" method to fully restore instance from .mridc file.\n.mridc file is an archive (tar.gz) with the following:\n    model_config.yaml - model configuration in .yaml format. You can deserialize this into cfg argument for\n    model's constructor\n    model_wights.chpt - model checkpoint\nArgs:\n    model: ModelPT object to be saved.\n    save_path: Path to .mridc file where model instance should be saved</p>\n", "signature": "(self, model, save_path: str)", "funcdef": "def"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.restore_from", "type": "function", "doc": "<p>Restores model instance (weights and configuration) into .mridc file\nArgs:\n    calling_cls: Class of the model to be restored.\n    restore_path: path to .mridc file from which model should be instantiated\n    override_config_path: path to a yaml config that will override the internal\n        config file or an OmegaConf / DictConfig object representing the model config.\n    map_location: Optional torch.device() to map the instantiated model to a device.\n        By default (None), it will select a GPU if available, falling back to CPU otherwise.\n    strict: Passed to load_state_dict. By default True\n    return_config: If set to true, will return just the underlying config of the restored\n        model as an OmegaConf DictConfig object without instantiating the model.\n    trainer: Optional trainer object to be used for model parallelism.\nExample:\n    <code>\n    model = mridc.collections.asr.models.EncDecCTCModel.restore_from('asr.mridc')\n    assert isinstance(model, mridc.collections.asr.models.EncDecCTCModel)\n</code>\nReturns:\n    An instance of type cls or its underlying config (if return_config is set).</p>\n", "signature": "(\n    self,\n    calling_cls,\n    restore_path: str,\n    override_config_path: Union[omegaconf.omegaconf.OmegaConf, str, NoneType] = None,\n    map_location: Optional[torch.device] = None,\n    strict: bool = True,\n    return_config: bool = False,\n    trainer: pytorch_lightning.trainer.trainer.Trainer = None\n)", "funcdef": "def"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.extract_state_dict_from", "type": "function", "doc": "<p>Extract the state dict(s) from a provided .mridc tarfile and save it to a directory.\nArgs:\n    restore_path: path to .mridc file from which state dict(s) should be extracted\n    save_dir: directory in which the saved state dict(s) should be stored\n    split_by_module: bool flag, which determines whether the output checkpoint should\n        be for the entire Model, or the individual module's that comprise the Model\nExample:\n    To convert the .mridc tarfile into a single Model level PyTorch checkpoint\n    ::\n    state_dict = mridc.collections.asr.models.EncDecCTCModel.extract_state_dict_from('asr.mridc',\n    './asr_ckpts')\n    To restore a model from a Model level checkpoint\n    ::\n    model = mridc.collections.asr.models.EncDecCTCModel(cfg)  # or any other method of restoration\n    model.load_state_dict(torch.load(\"./asr_ckpts/model_weights.ckpt\"))\n    To convert the .mridc tarfile into multiple Module level PyTorch checkpoints\n    ::\n    state_dict = mridc.collections.asr.models.EncDecCTCModel.extract_state_dict_from('asr.mridc',\n    './asr_ckpts', split_by_module=True). To restore a module from a Module level checkpoint\n    ::\n    model = mridc.collections.asr.models.EncDecCTCModel(cfg)  # or any other method of restoration\n    # load the individual components\n    model.preprocessor.load_state_dict(torch.load(\"./asr_ckpts/preprocessor.ckpt\"))\n    model.encoder.load_state_dict(torch.load(\"./asr_ckpts/encoder.ckpt\"))\n    model.decoder.load_state_dict(torch.load(\"./asr_ckpts/decoder.ckpt\"))\nReturns:\n    The state dict that was loaded from the original .mridc checkpoint</p>\n", "signature": "(\n    self,\n    restore_path: str,\n    save_dir: str,\n    split_by_module: bool = False\n)", "funcdef": "def"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.register_artifact", "type": "function", "doc": "<p>Register model artifacts with this function. These artifacts (files) will be included inside .mridc file\nwhen model.save_to(\"mymodel.mridc\") is called.\nHow it works:</p>\n\n<ol>\n<li>It always returns existing absolute path which can be used during Model constructor call\nEXCEPTION: src is None or \"\" in which case nothing will be done and src will be returned</li>\n<li>It will add (config_path, model_utils.ArtifactItem()) pair to self.artifacts\nIf \"src\" is local existing path, then it will be returned in absolute path form.\nelif \"src\" starts with \"mridc_file:unique_artifact_name\":\n.mridc will be untarred to a temporary folder location and an actual existing path will be returned\nelse an error will be raised.\nWARNING: use .register_artifact calls in your models' constructors.\nThe returned path is not guaranteed to exist after you have exited your model's constructor.\nArgs:\nmodel: ModelPT object to register artifact for.\nconfig_path (str): Artifact key. Usually corresponds to the model config.\nsrc (str): Path to artifact.\nverify_src_exists (bool): If set to False, then the artifact is optional and register_artifact will return\n    None even if src is not found. Defaults to True.\nReturns:\nstr: If src is not None or empty it always returns absolute path which is guaranteed to exists during model\n    instance life</li>\n</ol>\n", "signature": "(model, config_path: str, src: str, verify_src_exists: bool = True)", "funcdef": "def"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.model_config_yaml", "type": "variable", "doc": "<p>This property is used to get the path to the model config yaml file.</p>\n", "annotation": ": str"}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"fullname": "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt", "modulename": "mridc.core.connectors.save_restore_connector", "qualname": "SaveRestoreConnector.model_weights_ckpt", "type": "variable", "doc": "<p>This property is used to get the path to the model weights ckpt file.</p>\n", "annotation": ": str"}, "mridc.core.neural_types": {"fullname": "mridc.core.neural_types", "modulename": "mridc.core.neural_types", "type": "module", "doc": "<p></p>\n"}, "mridc.core.neural_types.axes": {"fullname": "mridc.core.neural_types.axes", "modulename": "mridc.core.neural_types.axes", "type": "module", "doc": "<p></p>\n"}, "mridc.core.neural_types.axes.AxisKindAbstract": {"fullname": "mridc.core.neural_types.axes.AxisKindAbstract", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKindAbstract", "type": "class", "doc": "<p>This is an abstract Enum to represents what does varying axis dimension mean. In practice, you will almost always\nuse AxisKind Enum. This Enum should be inherited by your OWN Enum if you aren't satisfied with AxisKind. Then your\nown Enum can be used instead of AxisKind.</p>\n", "bases": "enum.Enum"}, "mridc.core.neural_types.axes.AxisKind": {"fullname": "mridc.core.neural_types.axes.AxisKind", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind", "type": "class", "doc": "<p>This Enum represents what does varying axis dimension mean. For example, does this dimension correspond to width,\nbatch, time, etc. The \"Dimension\" and \"Channel\" kinds are the same and used to represent a general axis. \"Any\" axis\n will accept any axis kind fed to it.</p>\n", "bases": "AxisKindAbstract"}, "mridc.core.neural_types.axes.AxisKind.Batch": {"fullname": "mridc.core.neural_types.axes.AxisKind.Batch", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Batch", "type": "variable", "doc": "<p></p>\n", "default_value": " = batch"}, "mridc.core.neural_types.axes.AxisKind.Time": {"fullname": "mridc.core.neural_types.axes.AxisKind.Time", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Time", "type": "variable", "doc": "<p></p>\n", "default_value": " = time"}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"fullname": "mridc.core.neural_types.axes.AxisKind.Dimension", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Dimension", "type": "variable", "doc": "<p></p>\n", "default_value": " = dimension"}, "mridc.core.neural_types.axes.AxisKind.Channel": {"fullname": "mridc.core.neural_types.axes.AxisKind.Channel", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Channel", "type": "variable", "doc": "<p></p>\n", "default_value": " = dimension"}, "mridc.core.neural_types.axes.AxisKind.Width": {"fullname": "mridc.core.neural_types.axes.AxisKind.Width", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Width", "type": "variable", "doc": "<p></p>\n", "default_value": " = width"}, "mridc.core.neural_types.axes.AxisKind.Height": {"fullname": "mridc.core.neural_types.axes.AxisKind.Height", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Height", "type": "variable", "doc": "<p></p>\n", "default_value": " = height"}, "mridc.core.neural_types.axes.AxisKind.Any": {"fullname": "mridc.core.neural_types.axes.AxisKind.Any", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Any", "type": "variable", "doc": "<p></p>\n", "default_value": " = any"}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"fullname": "mridc.core.neural_types.axes.AxisKind.Sequence", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Sequence", "type": "variable", "doc": "<p></p>\n", "default_value": " = sequence"}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"fullname": "mridc.core.neural_types.axes.AxisKind.FlowGroup", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.FlowGroup", "type": "variable", "doc": "<p></p>\n", "default_value": " = flowgroup"}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"fullname": "mridc.core.neural_types.axes.AxisKind.Singleton", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.Singleton", "type": "variable", "doc": "<p></p>\n", "default_value": " = singleton"}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"fullname": "mridc.core.neural_types.axes.AxisKind.t_with_string", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.t_with_string", "type": "function", "doc": "<p>It checks if text is 't_<any string>'</p>\n", "signature": "(self, text)", "funcdef": "def"}, "mridc.core.neural_types.axes.AxisKind.from_str": {"fullname": "mridc.core.neural_types.axes.AxisKind.from_str", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisKind.from_str", "type": "function", "doc": "<p>Returns AxisKind instance based on short string representation</p>\n", "signature": "(label)", "funcdef": "def"}, "mridc.core.neural_types.axes.AxisType": {"fullname": "mridc.core.neural_types.axes.AxisType", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisType", "type": "class", "doc": "<p>This class represents axis semantics and (optionally) it's dimensionality\nArgs:\n    kind (AxisKindAbstract): what kind of axis it is? For example Batch, Height, etc.\n    size (int, optional): specify if the axis should have a fixed size. By default it is set to None and you\n    typically do not want to set it for Batch and Time\n    is_list (bool, default=False): whether this is a list or a tensor axis</p>\n"}, "mridc.core.neural_types.axes.AxisType.__init__": {"fullname": "mridc.core.neural_types.axes.AxisType.__init__", "modulename": "mridc.core.neural_types.axes", "qualname": "AxisType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    kind: mridc.core.neural_types.axes.AxisKindAbstract,\n    size: Optional[int] = None,\n    is_list=False\n)", "funcdef": "def"}, "mridc.core.neural_types.comparison": {"fullname": "mridc.core.neural_types.comparison", "modulename": "mridc.core.neural_types.comparison", "type": "module", "doc": "<p></p>\n"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult", "type": "class", "doc": "<p>The result of comparing two neural type objects for compatibility. When comparing A.compare_to(B).</p>\n", "bases": "enum.Enum"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.SAME", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.SAME: 0>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.LESS", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.LESS: 1>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.GREATER", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.GREATER: 2>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.DIM_INCOMPATIBLE", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.DIM_INCOMPATIBLE: 3>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.TRANSPOSE_SAME", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.TRANSPOSE_SAME: 4>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH: 5>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.INCOMPATIBLE", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.INCOMPATIBLE: 6>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS: 7>"}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"fullname": "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED", "modulename": "mridc.core.neural_types.comparison", "qualname": "NeuralTypeComparisonResult.UNCHECKED", "type": "variable", "doc": "<p></p>\n", "default_value": " = <NeuralTypeComparisonResult.UNCHECKED: 8>"}, "mridc.core.neural_types.elements": {"fullname": "mridc.core.neural_types.elements", "modulename": "mridc.core.neural_types.elements", "type": "module", "doc": "<p></p>\n"}, "mridc.core.neural_types.elements.ElementType": {"fullname": "mridc.core.neural_types.elements.ElementType", "modulename": "mridc.core.neural_types.elements", "qualname": "ElementType", "type": "class", "doc": "<p>Abstract class defining semantics of the tensor elements. We are relying on Python for inheritance checking</p>\n", "bases": "abc.ABC"}, "mridc.core.neural_types.elements.ElementType.__init__": {"fullname": "mridc.core.neural_types.elements.ElementType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "ElementType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"fullname": "mridc.core.neural_types.elements.ElementType.type_parameters", "modulename": "mridc.core.neural_types.elements", "qualname": "ElementType.type_parameters", "type": "variable", "doc": "<p>Override this property to parametrize your type. For example, you can specify 'storage' type such as float,\nint, bool with 'dtype' keyword. Another example, is if you want to represent a signal with a particular\nproperty (say, sample frequency), then you can put sample_freq->value in there. When two types are compared\ntheir type_parameters must match.\"</p>\n", "annotation": ": Dict"}, "mridc.core.neural_types.elements.ElementType.fields": {"fullname": "mridc.core.neural_types.elements.ElementType.fields", "modulename": "mridc.core.neural_types.elements", "qualname": "ElementType.fields", "type": "variable", "doc": "<p>This should be used to logically represent tuples/structures. For example, if you want to represent a bounding\nbox (x, y, width, height) you can put a tuple with names ('x', y', 'w', 'h') in here. Under the hood this\nshould be converted to the last tensor dimension of fixed size = len(fields). When two types are compared their\n fields must match.</p>\n", "annotation": ": Optional[Tuple]"}, "mridc.core.neural_types.elements.ElementType.compare": {"fullname": "mridc.core.neural_types.elements.ElementType.compare", "modulename": "mridc.core.neural_types.elements", "qualname": "ElementType.compare", "type": "function", "doc": "<p>Override this method to provide a comparison between two types.</p>\n", "signature": "(\n    self,\n    second\n) -> mridc.core.neural_types.comparison.NeuralTypeComparisonResult", "funcdef": "def"}, "mridc.core.neural_types.elements.VoidType": {"fullname": "mridc.core.neural_types.elements.VoidType", "modulename": "mridc.core.neural_types.elements", "qualname": "VoidType", "type": "class", "doc": "<p>Void-like type which is compatible with everything. It is a good practice to use this type only as necessary.\nFor example, when you need template-like functionality.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.VoidType.__init__": {"fullname": "mridc.core.neural_types.elements.VoidType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "VoidType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.VoidType.compare": {"fullname": "mridc.core.neural_types.elements.VoidType.compare", "modulename": "mridc.core.neural_types.elements", "qualname": "VoidType.compare", "type": "function", "doc": "<p>Void type is compatible with everything.</p>\n", "signature": "(\n    cls,\n    second: abc.ABCMeta\n) -> mridc.core.neural_types.comparison.NeuralTypeComparisonResult", "funcdef": "def"}, "mridc.core.neural_types.elements.ChannelType": {"fullname": "mridc.core.neural_types.elements.ChannelType", "modulename": "mridc.core.neural_types.elements", "qualname": "ChannelType", "type": "class", "doc": "<p>Element to represent convolutional input/output channel.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.ChannelType.__init__": {"fullname": "mridc.core.neural_types.elements.ChannelType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "ChannelType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.MRISignal": {"fullname": "mridc.core.neural_types.elements.MRISignal", "modulename": "mridc.core.neural_types.elements", "qualname": "MRISignal", "type": "class", "doc": "<p>Element type to represent encoded representation returned by the mri model</p>\n\n<p>Args:\n    freq (int): sampling frequency of a signal. Note that two signals will only be the same if their\n    freq is the same.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.MRISignal.__init__": {"fullname": "mridc.core.neural_types.elements.MRISignal.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "MRISignal.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, freq: int = None)", "funcdef": "def"}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"fullname": "mridc.core.neural_types.elements.MRISignal.type_parameters", "modulename": "mridc.core.neural_types.elements", "qualname": "MRISignal.type_parameters", "type": "variable", "doc": "<p>Returns the type parameters of the element type.</p>\n"}, "mridc.core.neural_types.elements.RecurrentsType": {"fullname": "mridc.core.neural_types.elements.RecurrentsType", "modulename": "mridc.core.neural_types.elements", "qualname": "RecurrentsType", "type": "class", "doc": "<p>Element type to represent recurrent layers</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"fullname": "mridc.core.neural_types.elements.RecurrentsType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "RecurrentsType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.LabelsType": {"fullname": "mridc.core.neural_types.elements.LabelsType", "modulename": "mridc.core.neural_types.elements", "qualname": "LabelsType", "type": "class", "doc": "<p>Element type to represent labels of something. For example, labels of a dataset.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.LabelsType.__init__": {"fullname": "mridc.core.neural_types.elements.LabelsType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "LabelsType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.LogprobsType": {"fullname": "mridc.core.neural_types.elements.LogprobsType", "modulename": "mridc.core.neural_types.elements", "qualname": "LogprobsType", "type": "class", "doc": "<p>Element type to represent log-probabilities. For example, outputs of log softmax layers.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"fullname": "mridc.core.neural_types.elements.LogprobsType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "LogprobsType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.ProbsType": {"fullname": "mridc.core.neural_types.elements.ProbsType", "modulename": "mridc.core.neural_types.elements", "qualname": "ProbsType", "type": "class", "doc": "<p>Element type to represent probabilities. For example, outputs of softmax layers.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.ProbsType.__init__": {"fullname": "mridc.core.neural_types.elements.ProbsType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "ProbsType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.LossType": {"fullname": "mridc.core.neural_types.elements.LossType", "modulename": "mridc.core.neural_types.elements", "qualname": "LossType", "type": "class", "doc": "<p>Element type to represent outputs of Loss modules</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.LossType.__init__": {"fullname": "mridc.core.neural_types.elements.LossType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "LossType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.RegressionValuesType": {"fullname": "mridc.core.neural_types.elements.RegressionValuesType", "modulename": "mridc.core.neural_types.elements", "qualname": "RegressionValuesType", "type": "class", "doc": "<p>Element type to represent labels for regression task</p>\n", "bases": "PredictionsType"}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"fullname": "mridc.core.neural_types.elements.RegressionValuesType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "RegressionValuesType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.CategoricalValuesType": {"fullname": "mridc.core.neural_types.elements.CategoricalValuesType", "modulename": "mridc.core.neural_types.elements", "qualname": "CategoricalValuesType", "type": "class", "doc": "<p>Element type to represent labels for categorical classification task</p>\n", "bases": "PredictionsType"}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"fullname": "mridc.core.neural_types.elements.CategoricalValuesType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "CategoricalValuesType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.PredictionsType": {"fullname": "mridc.core.neural_types.elements.PredictionsType", "modulename": "mridc.core.neural_types.elements", "qualname": "PredictionsType", "type": "class", "doc": "<p>Element type to represent some sort of predictions returned by model</p>\n", "bases": "LabelsType"}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"fullname": "mridc.core.neural_types.elements.PredictionsType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "PredictionsType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.LengthsType": {"fullname": "mridc.core.neural_types.elements.LengthsType", "modulename": "mridc.core.neural_types.elements", "qualname": "LengthsType", "type": "class", "doc": "<p>Element type representing lengths of something</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.LengthsType.__init__": {"fullname": "mridc.core.neural_types.elements.LengthsType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "LengthsType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.MaskType": {"fullname": "mridc.core.neural_types.elements.MaskType", "modulename": "mridc.core.neural_types.elements", "qualname": "MaskType", "type": "class", "doc": "<p>Element type to represent a boolean mask</p>\n", "bases": "PredictionsType"}, "mridc.core.neural_types.elements.MaskType.__init__": {"fullname": "mridc.core.neural_types.elements.MaskType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "MaskType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.Target": {"fullname": "mridc.core.neural_types.elements.Target", "modulename": "mridc.core.neural_types.elements", "qualname": "Target", "type": "class", "doc": "<p>Type representing an element being a target value.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.Target.__init__": {"fullname": "mridc.core.neural_types.elements.Target.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "Target.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.ReconstructionTarget": {"fullname": "mridc.core.neural_types.elements.ReconstructionTarget", "modulename": "mridc.core.neural_types.elements", "qualname": "ReconstructionTarget", "type": "class", "doc": "<p>Type representing an element being target value in the reconstruction task, i.e. identifier of a desired\nclass.</p>\n", "bases": "Target"}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"fullname": "mridc.core.neural_types.elements.ReconstructionTarget.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "ReconstructionTarget.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.ImageFeatureValue": {"fullname": "mridc.core.neural_types.elements.ImageFeatureValue", "modulename": "mridc.core.neural_types.elements", "qualname": "ImageFeatureValue", "type": "class", "doc": "<p>Type representing an element (single value) of a (image) feature maps.</p>\n", "bases": "ImageValue"}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"fullname": "mridc.core.neural_types.elements.ImageFeatureValue.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "ImageFeatureValue.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.Index": {"fullname": "mridc.core.neural_types.elements.Index", "modulename": "mridc.core.neural_types.elements", "qualname": "Index", "type": "class", "doc": "<p>Type representing an element being an index of the sample.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.Index.__init__": {"fullname": "mridc.core.neural_types.elements.Index.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "Index.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.ImageValue": {"fullname": "mridc.core.neural_types.elements.ImageValue", "modulename": "mridc.core.neural_types.elements", "qualname": "ImageValue", "type": "class", "doc": "<p>Type representing an element/value of a single image channel,</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.ImageValue.__init__": {"fullname": "mridc.core.neural_types.elements.ImageValue.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "ImageValue.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.NormalizedImageValue": {"fullname": "mridc.core.neural_types.elements.NormalizedImageValue", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalizedImageValue", "type": "class", "doc": "<p>Type representing an element/value of a single image channel normalized to &lt;0-1> range.</p>\n", "bases": "ImageValue"}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"fullname": "mridc.core.neural_types.elements.NormalizedImageValue.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalizedImageValue.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.StringLabel": {"fullname": "mridc.core.neural_types.elements.StringLabel", "modulename": "mridc.core.neural_types.elements", "qualname": "StringLabel", "type": "class", "doc": "<p>Type representing an label being a string with class name (e.g. the \"hamster\" class in CIFAR100).</p>\n", "bases": "StringType"}, "mridc.core.neural_types.elements.StringLabel.__init__": {"fullname": "mridc.core.neural_types.elements.StringLabel.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "StringLabel.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.StringType": {"fullname": "mridc.core.neural_types.elements.StringType", "modulename": "mridc.core.neural_types.elements", "qualname": "StringType", "type": "class", "doc": "<p>Element type representing a single string</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.StringType.__init__": {"fullname": "mridc.core.neural_types.elements.StringType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "StringType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.Length": {"fullname": "mridc.core.neural_types.elements.Length", "modulename": "mridc.core.neural_types.elements", "qualname": "Length", "type": "class", "doc": "<p>Type representing an element storing a \"length\" (e.g. length of a list).</p>\n", "bases": "IntType"}, "mridc.core.neural_types.elements.Length.__init__": {"fullname": "mridc.core.neural_types.elements.Length.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "Length.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.IntType": {"fullname": "mridc.core.neural_types.elements.IntType", "modulename": "mridc.core.neural_types.elements", "qualname": "IntType", "type": "class", "doc": "<p>Element type representing a single integer</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.IntType.__init__": {"fullname": "mridc.core.neural_types.elements.IntType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "IntType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.FloatType": {"fullname": "mridc.core.neural_types.elements.FloatType", "modulename": "mridc.core.neural_types.elements", "qualname": "FloatType", "type": "class", "doc": "<p>Element type representing a single float</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.FloatType.__init__": {"fullname": "mridc.core.neural_types.elements.FloatType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "FloatType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"fullname": "mridc.core.neural_types.elements.NormalDistributionSamplesType", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalDistributionSamplesType", "type": "class", "doc": "<p>Element to represent tensors that meant to be sampled from a valid normal distribution</p>\n", "bases": "ProbabilityDistributionSamplesType"}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"fullname": "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalDistributionSamplesType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"fullname": "mridc.core.neural_types.elements.NormalDistributionMeanType", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalDistributionMeanType", "type": "class", "doc": "<p>Element to represent the mean of a normal distribution</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"fullname": "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalDistributionMeanType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"fullname": "mridc.core.neural_types.elements.NormalDistributionLogVarianceType", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalDistributionLogVarianceType", "type": "class", "doc": "<p>Element to represent the log variance of a normal distribution</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"fullname": "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "NormalDistributionLogVarianceType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.LogDeterminantType": {"fullname": "mridc.core.neural_types.elements.LogDeterminantType", "modulename": "mridc.core.neural_types.elements", "qualname": "LogDeterminantType", "type": "class", "doc": "<p>Element for representing log determinants usually used in flow models</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"fullname": "mridc.core.neural_types.elements.LogDeterminantType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "LogDeterminantType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"fullname": "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType", "modulename": "mridc.core.neural_types.elements", "qualname": "SequenceToSequenceAlignmentType", "type": "class", "doc": "<p>Class to represent the alignment from seq-to-seq attention outputs. Generally a mapping from encoder time steps\nto decoder time steps.</p>\n", "bases": "ElementType"}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"fullname": "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__", "modulename": "mridc.core.neural_types.elements", "qualname": "SequenceToSequenceAlignmentType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.core.neural_types.neural_type": {"fullname": "mridc.core.neural_types.neural_type", "modulename": "mridc.core.neural_types.neural_type", "type": "module", "doc": "<p></p>\n"}, "mridc.core.neural_types.neural_type.NeuralType": {"fullname": "mridc.core.neural_types.neural_type.NeuralType", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralType", "type": "class", "doc": "<p>This is the main class which would represent neural type concept.\nIt is used to represent <em>the types</em> of inputs and outputs.\nArgs:\n    axes (Optional[Tuple]): a tuple of AxisTypes objects representing the semantics of what varying each axis means\n        You can use a short, string-based form here. For example: ('B', 'C', 'H', 'W') would correspond to an NCHW\n        format frequently used in computer vision. ('B', 'T', 'D') is frequently used for signal processing and\n        means [batch, time, dimension/channel].\n    elements_type (ElementType): an instance of ElementType class representing the semantics of what is stored\n        inside the tensor. For example: logits (LogitsType), log probabilities (LogprobType), etc.\n    optional (bool): By default, this is false. If set to True, it would means that input to the port of this\n        type can be optional.</p>\n"}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"fullname": "mridc.core.neural_types.neural_type.NeuralType.__init__", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralType.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    axes: Optional[Tuple] = None,\n    elements_type: mridc.core.neural_types.elements.ElementType = VoidType,\n    optional=False\n)", "funcdef": "def"}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"fullname": "mridc.core.neural_types.neural_type.NeuralType.compare", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralType.compare", "type": "function", "doc": "<p>Performs neural type comparison of self with second. When you chain two modules' inputs/outputs via __call__\nmethod, this comparison will be called to ensure neural type compatibility.</p>\n", "signature": "(\n    self,\n    second\n) -> mridc.core.neural_types.comparison.NeuralTypeComparisonResult", "funcdef": "def"}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"fullname": "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralType.compare_and_raise_error", "type": "function", "doc": "<p>Method compares definition of one type with another and raises an error if not compatible.</p>\n", "signature": "(self, parent_type_name, port_name, second_object)", "funcdef": "def"}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"fullname": "mridc.core.neural_types.neural_type.NeuralTypeError", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralTypeError", "type": "class", "doc": "<p>Base class for neural type related exceptions.</p>\n", "bases": "builtins.Exception"}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"fullname": "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralPortNameMismatchError", "type": "class", "doc": "<p>Exception raised when neural module is called with incorrect port names.</p>\n", "bases": "NeuralTypeError"}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"fullname": "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralPortNameMismatchError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, input_port_name)", "funcdef": "def"}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"fullname": "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralPortNmTensorMismatchError", "type": "class", "doc": "<p>Exception raised when a port is fed with a NmTensor of incompatible type.</p>\n", "bases": "NeuralTypeError"}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"fullname": "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__", "modulename": "mridc.core.neural_types.neural_type", "qualname": "NeuralPortNmTensorMismatchError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    class_name,\n    port_name,\n    first_type,\n    second_type,\n    type_compatibility\n)", "funcdef": "def"}, "mridc.core.optim": {"fullname": "mridc.core.optim", "modulename": "mridc.core.optim", "type": "module", "doc": "<p></p>\n"}, "mridc.core.optim.adafactor": {"fullname": "mridc.core.optim.adafactor", "modulename": "mridc.core.optim.adafactor", "type": "module", "doc": "<p></p>\n"}, "mridc.core.optim.adafactor.Adafactor": {"fullname": "mridc.core.optim.adafactor.Adafactor", "modulename": "mridc.core.optim.adafactor", "qualname": "Adafactor", "type": "class", "doc": "<p>Implements Adafactor algorithm.\nThis implementation is based on: <code>Adafactor: Adaptive Learning Rates with Sublinear Memory Cost</code>\n(see https://arxiv.org/abs/1804.04235)\nNote that this optimizer internally adjusts the learning rate depending on the <em>scale_parameter</em>, <em>relative_step</em>\nand <em>warmup_init</em> options. To use a manual (external) learning rate schedule you should set <code>scale_parameter=False</code>\nand <code>relative_step=False</code>.\nArgs:\n    params (iterable): iterable of parameters to optimize or dicts defining parameter groups\n    lr (float, optional): external learning rate (default: None)\n    eps (tuple[float, float]): regularization constants for square gradient\n        and parameter scale respectively (default: (1e-30, 1e-3))\n    clip_threshold (float): threshold of root mean square of\n        final gradient update (default: 1.0)\n    decay_rate (float): coefficient used to compute running averages of square\n        gradient (default: -0.8)\n    beta1 (float): coefficient used for computing running averages of gradient\n        (default: None)\n    weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n    scale_parameter (bool): if True, learning rate is scaled by root mean square of\n        parameter (default: True)\n    relative_step (bool): if True, time-dependent learning rate is computed\n        instead of external learning rate (default: True)\n    warmup_init (bool): time-dependent learning rate computation depends on\n        whether warm-up initialization is being used (default: False)</p>\n", "bases": "torch.optim.optimizer.Optimizer"}, "mridc.core.optim.adafactor.Adafactor.__init__": {"fullname": "mridc.core.optim.adafactor.Adafactor.__init__", "modulename": "mridc.core.optim.adafactor", "qualname": "Adafactor.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    params,\n    lr=None,\n    eps=(1e-30, 0.001),\n    clip_threshold=1.0,\n    decay_rate=-0.8,\n    beta1=None,\n    weight_decay=0.0,\n    scale_parameter=True,\n    relative_step=True,\n    warmup_init=False,\n    min_step=0.01\n)", "funcdef": "def"}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"fullname": "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16", "modulename": "mridc.core.optim.adafactor", "qualname": "Adafactor.supports_memory_efficient_fp16", "type": "variable", "doc": "<p>Whether optimizer supports memory efficient fp16</p>\n"}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"fullname": "mridc.core.optim.adafactor.Adafactor.supports_flat_params", "modulename": "mridc.core.optim.adafactor", "qualname": "Adafactor.supports_flat_params", "type": "variable", "doc": "<p>Whether the optimizer supports flat parameters.</p>\n"}, "mridc.core.optim.adafactor.Adafactor.step": {"fullname": "mridc.core.optim.adafactor.Adafactor.step", "modulename": "mridc.core.optim.adafactor", "qualname": "Adafactor.step", "type": "function", "doc": "<p>Performs a single optimization step.</p>\n\n<p>Args:\n    closure (callable, optional): A closure that reevaluates the model and returns the loss.</p>\n", "signature": "(self, closure=None)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler": {"fullname": "mridc.core.optim.lr_scheduler", "modulename": "mridc.core.optim.lr_scheduler", "type": "module", "doc": "<p></p>\n"}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"fullname": "mridc.core.optim.lr_scheduler.WarmupPolicy", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupPolicy", "type": "class", "doc": "<p>Adds warmup kwargs and warmup logic to lr policy.\nAll arguments should be passed as kwargs for clarity,\nArgs:\n    warmup_steps: Number of training steps in warmup stage\n    warmup_ratio: Ratio of warmup steps to total steps\n    max_steps: Total number of steps while training or <code>None</code> for\n        infinite training</p>\n", "bases": "torch.optim.lr_scheduler._LRScheduler"}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"fullname": "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupPolicy.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    warmup_steps=None,\n    warmup_ratio=None,\n    max_steps=None,\n    min_lr=0.0,\n    last_epoch=-1\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"fullname": "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupPolicy.get_lr", "type": "function", "doc": "<p>Get learning rate at current step.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"fullname": "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareRootConstantPolicy", "type": "class", "doc": "<p>Adds warmup kwargs and warmup logic to lr policy. All arguments should be passed as kwargs for clarity.</p>\n\n<p>Args:\n    warmup_steps: Number of training steps in warmup stage\n    warmup_ratio: Ratio of warmup steps to total steps\n    max_steps: Total number of steps while training or <code>None</code> for infinite training</p>\n", "bases": "torch.optim.lr_scheduler._LRScheduler"}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"fullname": "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareRootConstantPolicy.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    constant_steps (): Number of training steps in constant stage\n    constant_ratio (): Ratio of constant steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    constant_steps=None,\n    constant_ratio=None,\n    max_steps=None,\n    min_lr=0.0,\n    last_epoch=-1\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"fullname": "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareRootConstantPolicy.get_lr", "type": "function", "doc": "<p>Get learning rate at current step.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"fullname": "mridc.core.optim.lr_scheduler.WarmupHoldPolicy", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupHoldPolicy", "type": "class", "doc": "<p>Variant of WarmupPolicy which maintains high learning rate for a defined number of steps.\nAll arguments should be passed as kwargs for clarity,\nArgs:\n    warmup_steps: Number of training steps in warmup stage\n    warmup_ratio: Ratio of warmup steps to total steps\n    hold_steps: Number of training steps to hold the learning rate after warm up\n    hold_ratio: Ratio of hold steps to total steps\n    max_steps: Total number of steps while training or <code>None</code> for\n        infinite training</p>\n", "bases": "WarmupPolicy"}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"fullname": "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupHoldPolicy.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    warmup_steps=None,\n    warmup_ratio=None,\n    hold_steps=None,\n    hold_ratio=None,\n    max_steps=None,\n    min_lr=0.0,\n    last_epoch=-1\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"fullname": "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupHoldPolicy.get_lr", "type": "function", "doc": "<p>Get learning rate at current step.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"fullname": "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupAnnealHoldPolicy", "type": "class", "doc": "<p>Adds warmup kwargs and warmup logic to lr policy.\nAll arguments should be passed as kwargs for clarity,\nArgs:\n    warmup_steps: Number of training steps in warmup stage\n    warmup_ratio: Ratio of warmup steps to total steps\n    max_steps: Total number of steps while training or <code>None</code> for\n        infinite training\n    min_lr: Minimum lr to hold the learning rate after decay at.\n    constant_steps: Number of steps to keep lr constant at.\n    constant_ratio: Ratio of steps to keep lr constant.</p>\n", "bases": "torch.optim.lr_scheduler._LRScheduler"}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"fullname": "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupAnnealHoldPolicy.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    warmup_steps=None,\n    warmup_ratio=None,\n    constant_steps=None,\n    constant_ratio=None,\n    max_steps=None,\n    min_lr=0.0,\n    last_epoch=-1\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"fullname": "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupAnnealHoldPolicy.get_lr", "type": "function", "doc": "<p>Get learning rate at current step.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.SquareAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareAnnealing", "type": "class", "doc": "<p>Anneal learning rate by square.</p>\n", "bases": "WarmupPolicy"}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(self, optimizer, *, max_steps, min_lr=1e-05, last_epoch=-1, **kwargs)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.SquareRootAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareRootAnnealing", "type": "class", "doc": "<p>Anneal learning rate by square root.</p>\n", "bases": "WarmupPolicy"}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "SquareRootAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(self, optimizer, *, max_steps, min_lr=0, last_epoch=-1, **kwargs)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.CosineAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "CosineAnnealing", "type": "class", "doc": "<p>Anneal learning rate by cosine.</p>\n", "bases": "WarmupAnnealHoldPolicy"}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "CosineAnnealing.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, optimizer, *, max_steps, min_lr=0, last_epoch=-1, **kwargs)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.NoamAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "NoamAnnealing", "type": "class", "doc": "<p>Noam learning rate annealing.</p>\n", "bases": "torch.optim.lr_scheduler._LRScheduler"}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "NoamAnnealing.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    d_model,\n    warmup_steps=None,\n    warmup_ratio=None,\n    max_steps=None,\n    min_lr=0.0,\n    last_epoch=-1\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"fullname": "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "NoamAnnealing.get_lr", "type": "function", "doc": "<p>Get learning rate at current step.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.WarmupAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupAnnealing", "type": "class", "doc": "<p>Warmup learning rate annealing.</p>\n", "bases": "WarmupPolicy"}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "WarmupAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(self, optimizer, *, max_steps, last_epoch=-1, min_lr=0.0, **kwargs)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "InverseSquareRootAnnealing", "type": "class", "doc": "<p>Inverse square root learning rate annealing.</p>\n", "bases": "WarmupPolicy"}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "InverseSquareRootAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(self, optimizer, *, max_steps, last_epoch=-1, min_lr=0.0, **kwargs)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "T5InverseSquareRootAnnealing", "type": "class", "doc": "<p>Inverse square root learning rate annealing.</p>\n", "bases": "SquareRootConstantPolicy"}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "T5InverseSquareRootAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    constant_steps (): Number of training steps in constant stage\n    constant_ratio (): Ratio of constant steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(self, optimizer, *, max_steps, last_epoch=-1, min_lr=0.0, **kwargs)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "PolynomialDecayAnnealing", "type": "class", "doc": "<p>Polynomial decay learning rate annealing.</p>\n", "bases": "WarmupPolicy"}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "PolynomialDecayAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    max_steps,\n    min_lr=0.0,\n    power=1.0,\n    cycle=False,\n    last_epoch=-1,\n    **kwargs\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"fullname": "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "PolynomialHoldDecayAnnealing", "type": "class", "doc": "<p>Polynomial decay learning rate annealing.</p>\n", "bases": "WarmupHoldPolicy"}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"fullname": "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "PolynomialHoldDecayAnnealing.__init__", "type": "function", "doc": "<p>Args:\n    optimizer (): optimizer\n    warmup_steps (): Number of training steps in warmup stage\n    warmup_ratio (): Ratio of warmup steps to total steps\n    max_steps (): Total number of steps while training or <code>None</code> for infinite training\n    min_lr (): Minimum learning rate\n    last_epoch (): Last epoch</p>\n", "signature": "(\n    self,\n    optimizer,\n    *,\n    max_steps,\n    min_lr=0.0,\n    power=1.0,\n    cycle=False,\n    last_epoch=-1,\n    **kwargs\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.register_scheduler": {"fullname": "mridc.core.optim.lr_scheduler.register_scheduler", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "register_scheduler", "type": "function", "doc": "<p>Checks if the scheduler name exists in the registry, and if it doesnt, adds it.\nThis allows custom schedulers to be added and called by name during instantiation.\nArgs:\n    name: Name of the optimizer. Will be used as key to retrieve the optimizer.\n    scheduler: Scheduler class (inherits from _LRScheduler)\n    scheduler_params: The parameters as a dataclass of the scheduler</p>\n", "signature": "(\n    name: str,\n    scheduler: torch.optim.lr_scheduler._LRScheduler,\n    scheduler_params: mridc.core.conf.schedulers.SchedulerParams\n)", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.get_scheduler": {"fullname": "mridc.core.optim.lr_scheduler.get_scheduler", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "get_scheduler", "type": "function", "doc": "<p>Convenience method to obtain an _LRScheduler class and partially instantiate it with optimizer kwargs.\nArgs:\n    name: Name of the scheduler in the registry.\n    kwargs: Optional kwargs of the scheduler used during instantiation.\nReturns:\n    a partially instantiated _LRScheduler</p>\n", "signature": "(\n    name: str,\n    **kwargs: Optional[Dict[str, Any]]\n) -> torch.optim.lr_scheduler._LRScheduler", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"fullname": "mridc.core.optim.lr_scheduler.prepare_lr_scheduler", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "prepare_lr_scheduler", "type": "function", "doc": "<p>Constructs an LR Scheduler (optionally) for a given optimizer, based on a config with the following schema\noptim:\n  name: <name of optimizer>\n  lr: <maximal learning rate>\n  # <additional optimizer arguments>\n  args:\n    name: auto  # special keyword, resolves to correct optimizer config for given optimizer name\n    # cls: mridc.core.config.optimizers.NovogradParams  # explicit instantiation by class path\n    params:  # optional override parameters for the optimizer config\n      betas: [0.8, 0.5]\n      weight_decay: 0.001\n  # scheduler setup\n  sched:\n    name: <name of scheduler>\n    iters_per_batch: null # computed at runtime; mandatory to have\n    max_steps: null # computed at runtime or explicitly set here; mandatory to have\n    # pytorch lightning args <mandatory>\n    monitor: val_loss\n    reduce_on_plateau: false\n    # <scheduler config override>\n    args:\n      name: auto  # special keyword, resolves to correct optimizer config for given optimizer name\n      # cls: mridc.core.config.schedulers.CosineAnnealingParams  # explicit instantiation by class path\n      params:  # optional override parameters for the optimizer config\n        warmup_steps: null\n        warmup_ratio: null\n        min_lr: 0.0\n        last_epoch: -1\nArgs:\n    optimizer: An instantiated Optimizer.\n    scheduler_config: A dictionary / config dict which follows the above schema.\n    train_dataloader: Optional requirement, must be passed if \"iters_per_batch\" is defined\n        instead of \"max_steps\". Used to compute effective \"max_steps\".\nReturns:\n    A dictionary containing the LR Scheduler implementation if the config was successfully parsed\n    along with other parameters required by Pytorch Lightning, otherwise None.</p>\n", "signature": "(\n    optimizer: torch.optim.optimizer.Optimizer,\n    scheduler_config: Union[Dict[str, Any], omegaconf.dictconfig.DictConfig, NoneType],\n    train_dataloader: Optional[torch.utils.data.dataloader.DataLoader] = None\n) -> Optional[Dict[str, Any]]", "funcdef": "def"}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"fullname": "mridc.core.optim.lr_scheduler.compute_max_steps", "modulename": "mridc.core.optim.lr_scheduler", "qualname": "compute_max_steps", "type": "function", "doc": "<p>Compute effective max_steps from the provided parameters.</p>\n", "signature": "(\n    max_epochs,\n    accumulate_grad_batches,\n    limit_train_batches,\n    num_workers,\n    num_samples,\n    batch_size,\n    drop_last\n)", "funcdef": "def"}, "mridc.core.optim.novograd": {"fullname": "mridc.core.optim.novograd", "modulename": "mridc.core.optim.novograd", "type": "module", "doc": "<p></p>\n"}, "mridc.core.optim.novograd.Novograd": {"fullname": "mridc.core.optim.novograd.Novograd", "modulename": "mridc.core.optim.novograd", "qualname": "Novograd", "type": "class", "doc": "<p>Implements Novograd algorithm.\nIt has been proposed  in \"Stochastic Gradient Methods with Layer-wise\nAdaptive Moments for Training of Deep Networks\"\n(https://arxiv.org/abs/1905.11286)\nArguments:\n    params (iterable): iterable of parameters to optimize or dicts defining\n        parameter groups\n    lr (float, optional): learning rate (default: 1e-3)\n    betas (Tuple[float, float], optional): coefficients used for computing\n        running averages of gradient and its square (default: (0.9, 0.999))\n    eps (float, optional): term added to the denominator to improve\n        numerical stability (default: 1e-8)\n    weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n    amsgrad (boolean, optional): whether to use the AMSGrad variant of this\n        algorithm from the paper \"On the Convergence of Adam and Beyond\"</p>\n", "bases": "torch.optim.optimizer.Optimizer"}, "mridc.core.optim.novograd.Novograd.__init__": {"fullname": "mridc.core.optim.novograd.Novograd.__init__", "modulename": "mridc.core.optim.novograd", "qualname": "Novograd.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    params,\n    lr=0.001,\n    betas=(0.95, 0.98),\n    eps=1e-08,\n    weight_decay=0,\n    grad_averaging=False,\n    amsgrad=False,\n    luc=False,\n    luc_trust=0.001,\n    luc_eps=1e-08\n)", "funcdef": "def"}, "mridc.core.optim.novograd.Novograd.step": {"fullname": "mridc.core.optim.novograd.Novograd.step", "modulename": "mridc.core.optim.novograd", "qualname": "Novograd.step", "type": "function", "doc": "<p>Performs a single optimization step.\nArguments:\n    closure (callable, optional): A closure that reevaluates the model\n        and returns the loss.</p>\n", "signature": "(self, closure=None)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params": {"fullname": "mridc.core.optim.optimizer_with_master_params", "modulename": "mridc.core.optim.optimizer_with_master_params", "type": "module", "doc": "<p></p>\n"}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"fullname": "mridc.core.optim.optimizer_with_master_params.GradBucket", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "GradBucket", "type": "class", "doc": "<p>Persistent buffer for main gradients that remains allocated between training iterations.</p>\n"}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"fullname": "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "GradBucket.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, numel)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"fullname": "mridc.core.optim.optimizer_with_master_params.GradBucket.zero", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "GradBucket.zero", "type": "function", "doc": "<p>Reset the buffer to zero.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"fullname": "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "GradBucket.allreduce_buffer", "type": "function", "doc": "<p>Synchronous buffer data allreduce</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"fullname": "mridc.core.optim.optimizer_with_master_params.GradBucket.get", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "GradBucket.get", "type": "function", "doc": "<p>Return a tensor with the input <code>shape</code> as a view into the 1-D data starting at <code>start_index</code>.</p>\n", "signature": "(self, shape, start_index)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper", "type": "class", "doc": "<p>Float16 optimizer wrapper for half precision (fp16 and bf16) data types.\nThis optimizer wrapper holds master parameters and gradients in fp32 to support\nstable convergence.</p>\n\n<p>Arguments:\n    optimizer: base optimizer such as Adam or SGD.\n    fp32_grad_accum: to enable the use of fp32 in gradient accumulation and allreduce.\n    contiguous_grad_bucket: to enable allocating the master gradients in the\n        contiguous memory space to reduce memory fragmentation.\n    async_grad_allreduce: enable asynchronous gradient allreduce that is executed\n        along with the training step back prop.</p>\n", "bases": "torch.optim.optimizer.Optimizer"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    optimizer,\n    fp32_grad_accum=False,\n    contiguous_grad_bucket=False,\n    async_grad_allreduce=False\n)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.zero_grad", "type": "function", "doc": "<p>We only need to zero the model related parameters, i.e., float16_groups &amp; fp32_from_fp32_groups. We\nadditionally zero fp32_from_float16_groups as a memory optimization to reduce fragmentation; in the case of\nset_to_none==True, the space used by this field can be safely deallocated at this point.</p>\n", "signature": "(self, set_to_none=True)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.copy_model_grads_to_main_grads", "type": "function", "doc": "<p>Copy model grads to main grads.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.reload_model_params", "type": "function", "doc": "<p>Reload model params.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.step", "type": "function", "doc": "<p>Step the optimizer.</p>\n", "signature": "(self, **kwargs)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.state_dict", "type": "function", "doc": "<p>Return the state of the optimizer.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.load_state_dict", "type": "function", "doc": "<p>Load the state of the optimizer.</p>\n", "signature": "(self, state_dict)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.allreduce_main_grads", "type": "function", "doc": "<p>All reduce main grads.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.grad_sync", "type": "function", "doc": "<p>A context manager to disable gradient synchronizations across data-parallel ranks.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.async_master_grads_allreudce", "type": "variable", "doc": "<p>Return whether to use async allreduce for master grads.</p>\n"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.fp32_grad_accumulation", "type": "variable", "doc": "<p>Return whether to accumulate gradients in fp32.</p>\n"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.get_parameters", "type": "function", "doc": "<p>Return the parameters of the optimizer.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.state", "type": "variable", "doc": "<p>Promote state so it can be retrieved or set via \"optimizer_instance.state.</p>\n"}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"fullname": "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups", "modulename": "mridc.core.optim.optimizer_with_master_params", "qualname": "MasterOptimizerWrapper.param_groups", "type": "variable", "doc": "<p>Promote param_groups so it can be retrieved or set via \"optimizer_instance.param_groups.\n(for example, to adjust the learning rate)</p>\n"}, "mridc.core.optim.optimizers": {"fullname": "mridc.core.optim.optimizers", "modulename": "mridc.core.optim.optimizers", "type": "module", "doc": "<p></p>\n"}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"fullname": "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS", "modulename": "mridc.core.optim.optimizers", "qualname": "AVAILABLE_OPTIMIZERS", "type": "variable", "doc": "<p></p>\n", "default_value": " = {'sgd': <class 'torch.optim.sgd.SGD'>, 'adam': <class 'torch.optim.adam.Adam'>, 'adamw': <class 'torch.optim.adamw.AdamW'>, 'adadelta': <class 'torch.optim.adadelta.Adadelta'>, 'adamax': <class 'torch.optim.adamax.Adamax'>, 'adagrad': <class 'torch.optim.adagrad.Adagrad'>, 'rmsprop': <class 'torch.optim.rmsprop.RMSprop'>, 'rprop': <class 'torch.optim.rprop.Rprop'>, 'novograd': <class 'mridc.core.optim.novograd.Novograd'>, 'adafactor': <class 'mridc.core.optim.adafactor.Adafactor'>}"}, "mridc.core.optim.optimizers.get_optimizer": {"fullname": "mridc.core.optim.optimizers.get_optimizer", "modulename": "mridc.core.optim.optimizers", "qualname": "get_optimizer", "type": "function", "doc": "<p>Convenience method to obtain an Optimizer class and partially instantiate it with optimizer kwargs.\nArgs:\n    name: Name of the Optimizer in the registry.\n    kwargs: Optional kwargs of the optimizer used during instantiation.\nReturns:\n    a partially instantiated Optimizer</p>\n", "signature": "(name: str, **kwargs: Optional[Dict[str, Any]]) -> functools.partial", "funcdef": "def"}, "mridc.core.optim.optimizers.register_optimizer": {"fullname": "mridc.core.optim.optimizers.register_optimizer", "modulename": "mridc.core.optim.optimizers", "qualname": "register_optimizer", "type": "function", "doc": "<p>Checks if the optimizer name exists in the registry, and if it doesnt, adds it.\nThis allows custom optimizers to be added and called by name during instantiation.\nArgs:\n    name: Name of the optimizer. Will be used as key to retrieve the optimizer.\n    optimizer: Optimizer class\n    optimizer_params: The parameters as a dataclass of the optimizer</p>\n", "signature": "(\n    name: str,\n    optimizer: torch.optim.optimizer.Optimizer,\n    optimizer_params: mridc.core.conf.optimizers.OptimizerParams\n)", "funcdef": "def"}, "mridc.core.optim.optimizers.parse_optimizer_args": {"fullname": "mridc.core.optim.optimizers.parse_optimizer_args", "modulename": "mridc.core.optim.optimizers", "qualname": "parse_optimizer_args", "type": "function", "doc": "<p>Parses a list of strings, of the format \"key=value\" or \"key2=val1,val2,...\"\ninto a dictionary of type {key=value, key2=[val1, val2], ...}\nThis dictionary is then used to instantiate the chosen Optimizer.\nArgs:\n    optimizer_name: string name of the optimizer, used for auto resolution of params\n    optimizer_kwargs: Either a list of strings in a specified format,\n        or a dictionary. If a dictionary is provided, it is assumed the dictionary\n        is the final parsed value, and simply returned.\n        If a list of strings is provided, each item in the list is parsed into a\n        new dictionary.\nReturns:\n    A dictionary</p>\n", "signature": "(\n    optimizer_name: str,\n    optimizer_kwargs: Union[omegaconf.dictconfig.DictConfig, Dict[str, Any]]\n) -> Union[Dict[str, Any], omegaconf.dictconfig.DictConfig]", "funcdef": "def"}, "mridc.core.utils": {"fullname": "mridc.core.utils", "modulename": "mridc.core.utils", "type": "module", "doc": "<p></p>\n"}, "mridc.core.utils.numba_utils": {"fullname": "mridc.core.utils.numba_utils", "modulename": "mridc.core.utils.numba_utils", "type": "module", "doc": "<p></p>\n"}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"fullname": "mridc.core.utils.numba_utils.is_numba_compat_strict", "modulename": "mridc.core.utils.numba_utils", "qualname": "is_numba_compat_strict", "type": "function", "doc": "<p>Returns strictness level of numba cuda compatibility checks.\nIf value is true, numba cuda compatibility matrix must be satisfied.\nIf value is false, only cuda availability is checked, not compatibility.\nNumba Cuda may still compile and run without issues in such a case, or it may fail.</p>\n", "signature": "() -> bool", "funcdef": "def"}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"fullname": "mridc.core.utils.numba_utils.set_numba_compat_strictness", "modulename": "mridc.core.utils.numba_utils", "qualname": "set_numba_compat_strictness", "type": "function", "doc": "<p>Sets the strictness level of numba cuda compatibility checks.\nIf value is true, numba cuda compatibility matrix must be satisfied.\nIf value is false, only cuda availability is checked, not compatibility.\nNumba Cuda may still compile and run without issues in such a case, or it may fail.\nArgs:\n    strict: bool value, whether to enforce strict compatibility checks or relax them.</p>\n", "signature": "(strict: bool)", "funcdef": "def"}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"fullname": "mridc.core.utils.numba_utils.with_numba_compat_strictness", "modulename": "mridc.core.utils.numba_utils", "qualname": "with_numba_compat_strictness", "type": "function", "doc": "<p>Context manager to temporarily set numba cuda compatibility strictness.</p>\n", "signature": "(strict: bool)", "funcdef": "def"}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"fullname": "mridc.core.utils.numba_utils.numba_cpu_is_supported", "modulename": "mridc.core.utils.numba_utils", "qualname": "numba_cpu_is_supported", "type": "function", "doc": "<p>Tests if an appropriate version of numba is installed.\nArgs:\n    min_version: The minimum version of numba that is required.\nReturns:\n    bool, whether numba CPU supported with this current installation or not.</p>\n", "signature": "(min_version: str) -> bool", "funcdef": "def"}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"fullname": "mridc.core.utils.numba_utils.numba_cuda_is_supported", "modulename": "mridc.core.utils.numba_utils", "qualname": "numba_cuda_is_supported", "type": "function", "doc": "<p>Tests if an appropriate version of numba is installed, and if it is,\nif cuda is supported properly within it.</p>\n\n<p>Args:\n    min_version: The minimum version of numba that is required.\nReturns:\n    bool, whether cuda is supported with this current installation or not.</p>\n", "signature": "(min_version: str) -> bool", "funcdef": "def"}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"fullname": "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported", "modulename": "mridc.core.utils.numba_utils", "qualname": "skip_numba_cuda_test_if_unsupported", "type": "function", "doc": "<p>Helper method to skip pytest test case if numba cuda is not supported.</p>\n\n<p>Args:\n    min_version: The minimum version of numba that is required.</p>\n", "signature": "(min_version: str)", "funcdef": "def"}, "mridc.package_info": {"fullname": "mridc.package_info", "modulename": "mridc.package_info", "type": "module", "doc": "<p></p>\n"}, "mridc.utils": {"fullname": "mridc.utils", "modulename": "mridc.utils", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.app_state": {"fullname": "mridc.utils.app_state", "modulename": "mridc.utils.app_state", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.app_state.ModelMetadataRegistry": {"fullname": "mridc.utils.app_state.ModelMetadataRegistry", "modulename": "mridc.utils.app_state", "qualname": "ModelMetadataRegistry", "type": "class", "doc": "<p>A registry for model metadata.</p>\n"}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"fullname": "mridc.utils.app_state.ModelMetadataRegistry.__init__", "modulename": "mridc.utils.app_state", "qualname": "ModelMetadataRegistry.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, guid: str, gidx: int, restoration_path: Optional[str] = None)", "funcdef": "def"}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"fullname": "mridc.utils.app_state.ModelMetadataRegistry.restoration_path", "modulename": "mridc.utils.app_state", "qualname": "ModelMetadataRegistry.restoration_path", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.app_state.AppState": {"fullname": "mridc.utils.app_state.AppState", "modulename": "mridc.utils.app_state", "qualname": "AppState", "type": "class", "doc": "<p>A singleton class that holds the state of the application.</p>\n"}, "mridc.utils.app_state.AppState.__init__": {"fullname": "mridc.utils.app_state.AppState.__init__", "modulename": "mridc.utils.app_state", "qualname": "AppState.__init__", "type": "function", "doc": "<p>Returns singleton instance. A thread safe implementation.</p>\n", "signature": "(cls, *args, **kwargs)", "funcdef": "def"}, "mridc.utils.app_state.AppState.device_id": {"fullname": "mridc.utils.app_state.AppState.device_id", "modulename": "mridc.utils.app_state", "qualname": "AppState.device_id", "type": "variable", "doc": "<p>Property returns the device_id.</p>\n"}, "mridc.utils.app_state.AppState.world_size": {"fullname": "mridc.utils.app_state.AppState.world_size", "modulename": "mridc.utils.app_state", "qualname": "AppState.world_size", "type": "variable", "doc": "<p>Property returns the total number of GPUs.</p>\n"}, "mridc.utils.app_state.AppState.model_parallel_size": {"fullname": "mridc.utils.app_state.AppState.model_parallel_size", "modulename": "mridc.utils.app_state", "qualname": "AppState.model_parallel_size", "type": "variable", "doc": "<p>Property returns the number of GPUs in each model parallel group.</p>\n"}, "mridc.utils.app_state.AppState.data_parallel_size": {"fullname": "mridc.utils.app_state.AppState.data_parallel_size", "modulename": "mridc.utils.app_state", "qualname": "AppState.data_parallel_size", "type": "variable", "doc": "<p>Property returns the number of GPUs in each data parallel group.</p>\n"}, "mridc.utils.app_state.AppState.local_rank": {"fullname": "mridc.utils.app_state.AppState.local_rank", "modulename": "mridc.utils.app_state", "qualname": "AppState.local_rank", "type": "variable", "doc": "<p>Property returns the local rank.</p>\n"}, "mridc.utils.app_state.AppState.global_rank": {"fullname": "mridc.utils.app_state.AppState.global_rank", "modulename": "mridc.utils.app_state", "qualname": "AppState.global_rank", "type": "variable", "doc": "<p>Property returns the global rank.</p>\n"}, "mridc.utils.app_state.AppState.model_parallel_rank": {"fullname": "mridc.utils.app_state.AppState.model_parallel_rank", "modulename": "mridc.utils.app_state", "qualname": "AppState.model_parallel_rank", "type": "variable", "doc": "<p>Property returns the model parallel rank.</p>\n"}, "mridc.utils.app_state.AppState.model_parallel_group": {"fullname": "mridc.utils.app_state.AppState.model_parallel_group", "modulename": "mridc.utils.app_state", "qualname": "AppState.model_parallel_group", "type": "variable", "doc": "<p>Property returns the model parallel group.</p>\n"}, "mridc.utils.app_state.AppState.data_parallel_rank": {"fullname": "mridc.utils.app_state.AppState.data_parallel_rank", "modulename": "mridc.utils.app_state", "qualname": "AppState.data_parallel_rank", "type": "variable", "doc": "<p>Property returns the data parallel rank.</p>\n"}, "mridc.utils.app_state.AppState.data_parallel_group": {"fullname": "mridc.utils.app_state.AppState.data_parallel_group", "modulename": "mridc.utils.app_state", "qualname": "AppState.data_parallel_group", "type": "variable", "doc": "<p>Property returns the data parallel group.</p>\n"}, "mridc.utils.app_state.AppState.random_seed": {"fullname": "mridc.utils.app_state.AppState.random_seed", "modulename": "mridc.utils.app_state", "qualname": "AppState.random_seed", "type": "variable", "doc": "<p>Property returns the random seed.</p>\n"}, "mridc.utils.app_state.AppState.log_dir": {"fullname": "mridc.utils.app_state.AppState.log_dir", "modulename": "mridc.utils.app_state", "qualname": "AppState.log_dir", "type": "variable", "doc": "<p>Returns the log_dir set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.exp_dir": {"fullname": "mridc.utils.app_state.AppState.exp_dir", "modulename": "mridc.utils.app_state", "qualname": "AppState.exp_dir", "type": "variable", "doc": "<p>Returns the exp_dir set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.name": {"fullname": "mridc.utils.app_state.AppState.name", "modulename": "mridc.utils.app_state", "qualname": "AppState.name", "type": "variable", "doc": "<p>Returns the name set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.checkpoint_name": {"fullname": "mridc.utils.app_state.AppState.checkpoint_name", "modulename": "mridc.utils.app_state", "qualname": "AppState.checkpoint_name", "type": "variable", "doc": "<p>Returns the name set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.version": {"fullname": "mridc.utils.app_state.AppState.version", "modulename": "mridc.utils.app_state", "qualname": "AppState.version", "type": "variable", "doc": "<p>Returns the version set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"fullname": "mridc.utils.app_state.AppState.create_checkpoint_callback", "modulename": "mridc.utils.app_state", "qualname": "AppState.create_checkpoint_callback", "type": "variable", "doc": "<p>Returns the create_checkpoint_callback set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"fullname": "mridc.utils.app_state.AppState.checkpoint_callback_params", "modulename": "mridc.utils.app_state", "qualname": "AppState.checkpoint_callback_params", "type": "variable", "doc": "<p>Returns the version set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.model_restore_path": {"fullname": "mridc.utils.app_state.AppState.model_restore_path", "modulename": "mridc.utils.app_state", "qualname": "AppState.model_restore_path", "type": "variable", "doc": "<p>Returns the model_restore_path set by exp_manager.</p>\n"}, "mridc.utils.app_state.AppState.register_model_guid": {"fullname": "mridc.utils.app_state.AppState.register_model_guid", "modulename": "mridc.utils.app_state", "qualname": "AppState.register_model_guid", "type": "function", "doc": "<p>Maps a guid to its restore path (None or last absolute path).</p>\n", "signature": "(self, guid: str, restoration_path: Optional[str] = None)", "funcdef": "def"}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"fullname": "mridc.utils.app_state.AppState.reset_model_guid_registry", "modulename": "mridc.utils.app_state", "qualname": "AppState.reset_model_guid_registry", "type": "function", "doc": "<p>Resets the model guid registry.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"fullname": "mridc.utils.app_state.AppState.get_model_metadata_from_guid", "modulename": "mridc.utils.app_state", "qualname": "AppState.get_model_metadata_from_guid", "type": "function", "doc": "<p>Returns the global model idx and restoration path.</p>\n", "signature": "(self, guid) -> mridc.utils.app_state.ModelMetadataRegistry", "funcdef": "def"}, "mridc.utils.app_state.AppState.is_model_being_restored": {"fullname": "mridc.utils.app_state.AppState.is_model_being_restored", "modulename": "mridc.utils.app_state", "qualname": "AppState.is_model_being_restored", "type": "variable", "doc": "<p>Returns whether a model is being restored.</p>\n", "annotation": ": bool"}, "mridc.utils.app_state.AppState.mridc_file_folder": {"fullname": "mridc.utils.app_state.AppState.mridc_file_folder", "modulename": "mridc.utils.app_state", "qualname": "AppState.mridc_file_folder", "type": "variable", "doc": "<p>Returns the mridc_file_folder set by exp_manager.</p>\n", "annotation": ": str"}, "mridc.utils.arguments": {"fullname": "mridc.utils.arguments", "modulename": "mridc.utils.arguments", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.arguments.add_optimizer_args": {"fullname": "mridc.utils.arguments.add_optimizer_args", "modulename": "mridc.utils.arguments", "qualname": "add_optimizer_args", "type": "function", "doc": "<p>Extends existing argparse with support for optimizers.</p>\n\n<h1 id=\"example-of-adding-optimizer-args-to-command-line\">Example of adding optimizer args to command line :</h1>\n\n<p>python train_script.py ... --optimizer \"novograd\" --lr 0.01         --opt_args betas=0.95,0.5 weight_decay=0.001\nArgs:\n    parent_parser (ArgumentParser): Custom CLI parser that will be extended.\n    optimizer (str): Default optimizer required.\n    default_lr (float): Default learning rate that should be overridden during training.\n    default_opt_args (list(str)): List of overriding arguments for the instantiated optimizer.\nReturns:\n    ArgumentParser: Parser extended by Optimizers arguments.</p>\n", "signature": "(\n    parent_parser: argparse.ArgumentParser,\n    optimizer: str = 'adam',\n    default_lr: float = None,\n    default_opt_args: Union[Dict[str, Any], List[str], NoneType] = None\n) -> argparse.ArgumentParser", "funcdef": "def"}, "mridc.utils.arguments.add_scheduler_args": {"fullname": "mridc.utils.arguments.add_scheduler_args", "modulename": "mridc.utils.arguments", "qualname": "add_scheduler_args", "type": "function", "doc": "<p>Extends existing argparse with default LR scheduler args.\nArgs:\n    parent_parser (ArgumentParser): Custom CLI parser that will be extended.\nReturns:\n    ArgumentParser: Parser extended by LR Scheduler arguments.</p>\n", "signature": "(parent_parser: argparse.ArgumentParser) -> argparse.ArgumentParser", "funcdef": "def"}, "mridc.utils.arguments.add_recon_args": {"fullname": "mridc.utils.arguments.add_recon_args", "modulename": "mridc.utils.arguments", "qualname": "add_recon_args", "type": "function", "doc": "<p>Extends existing argparse with default recon collection args.\nArgs:\n    parent_parser (ArgumentParser): Custom CLI parser that will be extended.\nReturns:\n    ArgumentParser: Parser extended by MRIDC recon Collection arguments.</p>\n", "signature": "(parent_parser: argparse.ArgumentParser) -> argparse.ArgumentParser", "funcdef": "def"}, "mridc.utils.cloud": {"fullname": "mridc.utils.cloud", "modulename": "mridc.utils.cloud", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.cloud.maybe_download_from_cloud": {"fullname": "mridc.utils.cloud.maybe_download_from_cloud", "modulename": "mridc.utils.cloud", "qualname": "maybe_download_from_cloud", "type": "function", "doc": "<p>Helper function to download pre-trained weights from the cloud\nArgs:\n    url: (str) URL of storage\n    filename: (str) what to download. The request will be issued to url/filename\n    subfolder: (str) subfolder within cache_dir. The file will be stored in cache_dir/subfolder. Subfolder can\n        be empty\n    cache_dir: (str) a cache directory where to download. If not present, this function will attempt to create it.\n        If None (default), then it will be $HOME/.cache/torch/mridc\n    refresh_cache: (bool) if True and cached file is present, it will delete it and re-fetch\nReturns:\n    If successful - absolute local path to the downloaded file\n    else - empty string</p>\n", "signature": "(\n    url,\n    filename,\n    subfolder=None,\n    cache_dir=None,\n    refresh_cache=False\n) -> str", "funcdef": "def"}, "mridc.utils.config_utils": {"fullname": "mridc.utils.config_utils", "modulename": "mridc.utils.config_utils", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.config_utils.update_model_config": {"fullname": "mridc.utils.config_utils.update_model_config", "modulename": "mridc.utils.config_utils", "qualname": "update_model_config", "type": "function", "doc": "<p>Helper class that updates the default values of a ModelPT config class with the values\nin a DictConfig that mirrors the structure of the config class.\nAssumes the <code>update_cfg</code> is a DictConfig (either generated manually, via hydra or instantiated via yaml/model.cfg).\nThis update_cfg is then used to override the default values preset inside the ModelPT config class.\nIf <code>drop_missing_subconfigs</code> is set, the certain sub-configs of the ModelPT config class will be removed, if\nthey are not found in the mirrored <code>update_cfg</code>. The following sub-configs are subject to potential removal:\n    -   <code>train_ds</code>\n    -   <code>validation_ds</code>\n    -   <code>test_ds</code>\n    -   <code>optim</code> + nested <code>sched</code>.\nArgs:\n    model_cls: A subclass of MRIDC, that details in entirety all of the parameters that constitute\n        the MRIDC Model.\n    update_cfg: A DictConfig that mirrors the structure of the MRIDCConfig data class. Used to update the\n        default values of the config class.\n    drop_missing_subconfigs: Bool which determines whether to drop certain sub-configs from the MRIDCConfig\n        class, if the corresponding sub-config is missing from <code>update_cfg</code>.\nReturns:\n    A DictConfig with updated values that can be used to instantiate the MRIDC Model along with supporting\n    infrastructure.</p>\n", "signature": "(\n    model_cls: mridc.core.conf.modelPT.MRIDCConfig,\n    update_cfg: omegaconf.dictconfig.DictConfig,\n    drop_missing_subconfigs: bool = True\n)", "funcdef": "def"}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"fullname": "mridc.utils.config_utils.assert_dataclass_signature_match", "modulename": "mridc.utils.config_utils", "qualname": "assert_dataclass_signature_match", "type": "function", "doc": "<p>Analyses the signature of a provided class and its respective data class,\nasserting that the dataclass signature matches the class __init__ signature.\nNote:\n    This is not a value based check. This function only checks if all argument\n    names exist on both class and dataclass and logs mismatches.\nArgs:\n    cls: Any class type - but not an instance of a class. Pass type(x) where x is an instance\n        if class type is not easily available.\n    datacls: A corresponding dataclass for the above class.\n    ignore_args: (Optional) A list of string argument names which are forcibly ignored,\n        even if mismatched in the signature. Useful when a dataclass is a superset of the\n        arguments of a class.\n    remap_args: (Optional) A dictionary, mapping an argument name that exists (in either the\n        class or its dataclass), to another name. Useful when argument names are mismatched between\n        a class and its dataclass due to indirect instantiation via a helper method.\nReturns:\n    A tuple containing information about the analysis:\n    1) A bool value which is True if the signatures matched exactly / after ignoring values.\n        False otherwise.\n    2) A set of arguments names that exist in the class, but <em>do not</em> exist in the dataclass.\n        If exact signature match occurs, this will be None instead.\n    3) A set of argument names that exist in the data class, but <em>do not</em> exist in the class itself.\n        If exact signature match occurs, this will be None instead.</p>\n", "signature": "(\n    cls: 'class_type',\n    datacls: 'dataclass',\n    ignore_args: Optional[List[str]] = None,\n    remap_args: Optional[Dict[str, str]] = None\n)", "funcdef": "def"}, "mridc.utils.decorators": {"fullname": "mridc.utils.decorators", "modulename": "mridc.utils.decorators", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.decorators.deprecated": {"fullname": "mridc.utils.decorators.deprecated", "modulename": "mridc.utils.decorators.deprecated", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.decorators.deprecated.deprecated": {"fullname": "mridc.utils.decorators.deprecated.deprecated", "modulename": "mridc.utils.decorators.deprecated", "qualname": "deprecated", "type": "function", "doc": "<p>This is a decorator which can be used to mark functions as deprecated. It will result in a warning being emitted\nwhen the function is used.</p>\n\n<p>Args:\n    wrapped (): The function to be decorated.\n    version (str): The version in which the function will be marked as deprecated.\n    explanation (str): The explanation of the deprecation.</p>\n\n<p>Returns:\n    The decorated function.</p>\n", "signature": "(wrapped=None, version=None, explanation=None)", "funcdef": "def"}, "mridc.utils.decorators.experimental": {"fullname": "mridc.utils.decorators.experimental", "modulename": "mridc.utils.decorators.experimental", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.decorators.experimental.experimental": {"fullname": "mridc.utils.decorators.experimental.experimental", "modulename": "mridc.utils.decorators.experimental", "qualname": "experimental", "type": "function", "doc": "<p>Decorator which indicates that module is experimental.\nUse it to mark experimental or research modules.</p>\n", "signature": "(cls)", "funcdef": "def"}, "mridc.utils.decorators.port_docs": {"fullname": "mridc.utils.decorators.port_docs", "modulename": "mridc.utils.decorators.port_docs", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.decorators.port_docs.add_port_docs": {"fullname": "mridc.utils.decorators.port_docs.add_port_docs", "modulename": "mridc.utils.decorators.port_docs", "qualname": "add_port_docs", "type": "function", "doc": "<p>Adds port documentation to the wrapped function.</p>\n", "signature": "(wrapped=None, instance=None, value='')", "funcdef": "def"}, "mridc.utils.env_var_parsing": {"fullname": "mridc.utils.env_var_parsing", "modulename": "mridc.utils.env_var_parsing", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.env_var_parsing.get_env": {"fullname": "mridc.utils.env_var_parsing.get_env", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_env", "type": "function", "doc": "<p>Return env var.\nThis is the parent function of all other get_foo functions,\nand is responsible for unpacking args/kwargs into the values\nthat _get_env expects (it is the root function that actually\ninteracts with environ).\nArgs:\n    key: string, the env var name to look up.\n    default: (optional) the value to use if the env var does not\n        exist. If this value is not supplied, then the env var is\n        considered to be required, and a RequiredSettingMissingError\n        error will be raised if it does not exist.\nKwargs:\n    coerce: a func that may be supplied to coerce the value into\n        something else. This is used by the default get_foo functions\n        to cast strings to builtin types, but could be a function that\n        returns a custom class.\nReturns the env var, coerced if required, and a default if supplied.</p>\n", "signature": "(key, *default, **kwargs)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envbool": {"fullname": "mridc.utils.env_var_parsing.get_envbool", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envbool", "type": "function", "doc": "<p>Return env var cast as boolean.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envint": {"fullname": "mridc.utils.env_var_parsing.get_envint", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envint", "type": "function", "doc": "<p>Return env var cast as integer.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envfloat": {"fullname": "mridc.utils.env_var_parsing.get_envfloat", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envfloat", "type": "function", "doc": "<p>Return env var cast as float.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envdecimal": {"fullname": "mridc.utils.env_var_parsing.get_envdecimal", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envdecimal", "type": "function", "doc": "<p>Return env var cast as Decimal.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envdate": {"fullname": "mridc.utils.env_var_parsing.get_envdate", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envdate", "type": "function", "doc": "<p>Return env var as a date.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envdatetime": {"fullname": "mridc.utils.env_var_parsing.get_envdatetime", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envdatetime", "type": "function", "doc": "<p>Return env var as a datetime.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envlist": {"fullname": "mridc.utils.env_var_parsing.get_envlist", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envlist", "type": "function", "doc": "<p>Return env var as a list.</p>\n", "signature": "(key, *default, **kwargs)", "funcdef": "def"}, "mridc.utils.env_var_parsing.get_envdict": {"fullname": "mridc.utils.env_var_parsing.get_envdict", "modulename": "mridc.utils.env_var_parsing", "qualname": "get_envdict", "type": "function", "doc": "<p>Return env var as a dict.</p>\n", "signature": "(key, *default)", "funcdef": "def"}, "mridc.utils.env_var_parsing.CoercionError": {"fullname": "mridc.utils.env_var_parsing.CoercionError", "modulename": "mridc.utils.env_var_parsing", "qualname": "CoercionError", "type": "class", "doc": "<p>Custom error raised when a value cannot be coerced.</p>\n", "bases": "builtins.Exception"}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"fullname": "mridc.utils.env_var_parsing.CoercionError.__init__", "modulename": "mridc.utils.env_var_parsing", "qualname": "CoercionError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, key, value, func)", "funcdef": "def"}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"fullname": "mridc.utils.env_var_parsing.RequiredSettingMissingError", "modulename": "mridc.utils.env_var_parsing", "qualname": "RequiredSettingMissingError", "type": "class", "doc": "<p>Custom error raised when a required env var is missing.</p>\n", "bases": "builtins.Exception"}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"fullname": "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__", "modulename": "mridc.utils.env_var_parsing", "qualname": "RequiredSettingMissingError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, key)", "funcdef": "def"}, "mridc.utils.exceptions": {"fullname": "mridc.utils.exceptions", "modulename": "mridc.utils.exceptions", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.exceptions.MRIDCBaseException": {"fullname": "mridc.utils.exceptions.MRIDCBaseException", "modulename": "mridc.utils.exceptions", "qualname": "MRIDCBaseException", "type": "class", "doc": "<p>MRIDC Base Exception. All exceptions created in MRIDC should inherit from this class</p>\n", "bases": "builtins.Exception"}, "mridc.utils.exceptions.LightningNotInstalledException": {"fullname": "mridc.utils.exceptions.LightningNotInstalledException", "modulename": "mridc.utils.exceptions", "qualname": "LightningNotInstalledException", "type": "class", "doc": "<p>Exception for when lightning is not installed</p>\n", "bases": "MRIDCBaseException"}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"fullname": "mridc.utils.exceptions.LightningNotInstalledException.__init__", "modulename": "mridc.utils.exceptions", "qualname": "LightningNotInstalledException.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, obj)", "funcdef": "def"}, "mridc.utils.exceptions.CheckInstall": {"fullname": "mridc.utils.exceptions.CheckInstall", "modulename": "mridc.utils.exceptions", "qualname": "CheckInstall", "type": "class", "doc": "<p>Class to check if a package is installed.</p>\n"}, "mridc.utils.exceptions.CheckInstall.__init__": {"fullname": "mridc.utils.exceptions.CheckInstall.__init__", "modulename": "mridc.utils.exceptions", "qualname": "CheckInstall.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, *args, **kwargs)", "funcdef": "def"}, "mridc.utils.exp_manager": {"fullname": "mridc.utils.exp_manager", "modulename": "mridc.utils.exp_manager", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.exp_manager.NotFoundError": {"fullname": "mridc.utils.exp_manager.NotFoundError", "modulename": "mridc.utils.exp_manager", "qualname": "NotFoundError", "type": "class", "doc": "<p>Raised when a file or folder is not found</p>\n", "bases": "mridc.utils.exceptions.MRIDCBaseException"}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"fullname": "mridc.utils.exp_manager.LoggerMisconfigurationError", "modulename": "mridc.utils.exp_manager", "qualname": "LoggerMisconfigurationError", "type": "class", "doc": "<p>Raised when a mismatch between trainer.logger and exp_manager occurs</p>\n", "bases": "mridc.utils.exceptions.MRIDCBaseException"}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"fullname": "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "LoggerMisconfigurationError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, message)", "funcdef": "def"}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"fullname": "mridc.utils.exp_manager.CheckpointMisconfigurationError", "modulename": "mridc.utils.exp_manager", "qualname": "CheckpointMisconfigurationError", "type": "class", "doc": "<p>Raised when a mismatch between trainer.callbacks and exp_manager occurs</p>\n", "bases": "mridc.utils.exceptions.MRIDCBaseException"}, "mridc.utils.exp_manager.CallbackParams": {"fullname": "mridc.utils.exp_manager.CallbackParams", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams", "type": "class", "doc": "<p>Parameters for a callback</p>\n"}, "mridc.utils.exp_manager.CallbackParams.__init__": {"fullname": "mridc.utils.exp_manager.CallbackParams.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    filepath: Optional[str] = None,\n    dirpath: Optional[str] = None,\n    filename: Optional[str] = None,\n    monitor: Optional[str] = 'val_loss',\n    verbose: Optional[bool] = True,\n    save_last: Optional[bool] = True,\n    save_top_k: Optional[int] = 3,\n    save_weights_only: Optional[bool] = False,\n    mode: Optional[str] = 'min',\n    every_n_epochs: Optional[int] = 1,\n    prefix: Optional[str] = None,\n    postfix: str = '.mridc',\n    save_best_model: bool = False,\n    always_save_mridc: bool = False,\n    save_mridc_on_train_end: Optional[bool] = True,\n    model_parallel_size: Optional[int] = None\n)", "funcdef": "def"}, "mridc.utils.exp_manager.CallbackParams.filepath": {"fullname": "mridc.utils.exp_manager.CallbackParams.filepath", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.filepath", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"fullname": "mridc.utils.exp_manager.CallbackParams.dirpath", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.dirpath", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.CallbackParams.filename": {"fullname": "mridc.utils.exp_manager.CallbackParams.filename", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.filename", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.CallbackParams.monitor": {"fullname": "mridc.utils.exp_manager.CallbackParams.monitor", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.monitor", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = 'val_loss'"}, "mridc.utils.exp_manager.CallbackParams.verbose": {"fullname": "mridc.utils.exp_manager.CallbackParams.verbose", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.verbose", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.CallbackParams.save_last": {"fullname": "mridc.utils.exp_manager.CallbackParams.save_last", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.save_last", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"fullname": "mridc.utils.exp_manager.CallbackParams.save_top_k", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.save_top_k", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = 3"}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"fullname": "mridc.utils.exp_manager.CallbackParams.save_weights_only", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.save_weights_only", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = False"}, "mridc.utils.exp_manager.CallbackParams.mode": {"fullname": "mridc.utils.exp_manager.CallbackParams.mode", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.mode", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = 'min'"}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"fullname": "mridc.utils.exp_manager.CallbackParams.every_n_epochs", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.every_n_epochs", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = 1"}, "mridc.utils.exp_manager.CallbackParams.prefix": {"fullname": "mridc.utils.exp_manager.CallbackParams.prefix", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.prefix", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.CallbackParams.postfix": {"fullname": "mridc.utils.exp_manager.CallbackParams.postfix", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.postfix", "type": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": " = '.mridc'"}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"fullname": "mridc.utils.exp_manager.CallbackParams.save_best_model", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.save_best_model", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"fullname": "mridc.utils.exp_manager.CallbackParams.always_save_mridc", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.always_save_mridc", "type": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": " = False"}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"fullname": "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.save_mridc_on_train_end", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"fullname": "mridc.utils.exp_manager.CallbackParams.model_parallel_size", "modulename": "mridc.utils.exp_manager", "qualname": "CallbackParams.model_parallel_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = None"}, "mridc.utils.exp_manager.StepTimingParams": {"fullname": "mridc.utils.exp_manager.StepTimingParams", "modulename": "mridc.utils.exp_manager", "qualname": "StepTimingParams", "type": "class", "doc": "<p>Parameters for the step timing callback.</p>\n"}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"fullname": "mridc.utils.exp_manager.StepTimingParams.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "StepTimingParams.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    reduction: Optional[str] = 'mean',\n    sync_cuda: Optional[bool] = False,\n    buffer_size: Optional[int] = 1\n)", "funcdef": "def"}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"fullname": "mridc.utils.exp_manager.StepTimingParams.reduction", "modulename": "mridc.utils.exp_manager", "qualname": "StepTimingParams.reduction", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = 'mean'"}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"fullname": "mridc.utils.exp_manager.StepTimingParams.sync_cuda", "modulename": "mridc.utils.exp_manager", "qualname": "StepTimingParams.sync_cuda", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = False"}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"fullname": "mridc.utils.exp_manager.StepTimingParams.buffer_size", "modulename": "mridc.utils.exp_manager", "qualname": "StepTimingParams.buffer_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = 1"}, "mridc.utils.exp_manager.ExpManagerConfig": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig", "type": "class", "doc": "<p>Configuration for the experiment manager.</p>\n"}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    explicit_log_dir: Optional[str] = None,\n    exp_dir: Optional[str] = None,\n    name: Optional[str] = None,\n    version: Optional[str] = None,\n    use_datetime_version: Optional[bool] = True,\n    resume_if_exists: Optional[bool] = False,\n    resume_past_end: Optional[bool] = False,\n    resume_ignore_no_checkpoint: Optional[bool] = False,\n    create_tensorboard_logger: Optional[bool] = True,\n    summary_writer_kwargs: Optional[Dict[Any, Any]] = None,\n    create_wandb_logger: Optional[bool] = False,\n    wandb_logger_kwargs: Optional[Dict[Any, Any]] = None,\n    create_checkpoint_callback: Optional[bool] = True,\n    checkpoint_callback_params: Optional[mridc.utils.exp_manager.CallbackParams] = CallbackParams(filepath=None, dirpath=None, filename=None, monitor='val_loss', verbose=True, save_last=True, save_top_k=3, save_weights_only=False, mode='min', every_n_epochs=1, prefix=None, postfix='.mridc', save_best_model=False, always_save_mridc=False, save_mridc_on_train_end=True, model_parallel_size=None),\n    files_to_copy: Optional[List[str]] = None,\n    log_step_timing: Optional[bool] = True,\n    step_timing_kwargs: Optional[mridc.utils.exp_manager.StepTimingParams] = StepTimingParams(reduction='mean', sync_cuda=False, buffer_size=1),\n    model_parallel_size: Optional[int] = None\n)", "funcdef": "def"}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.explicit_log_dir", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.exp_dir", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.exp_dir", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.name", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.name", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.version", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.version", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.use_datetime_version", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.resume_if_exists", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = False"}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.resume_past_end", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = False"}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.resume_ignore_no_checkpoint", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = False"}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.create_tensorboard_logger", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.summary_writer_kwargs", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Dict[Any, Any]]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.create_wandb_logger", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = False"}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.wandb_logger_kwargs", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Dict[Any, Any]]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.create_checkpoint_callback", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.checkpoint_callback_params", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.utils.exp_manager.CallbackParams]", "default_value": " = CallbackParams(filepath=None, dirpath=None, filename=None, monitor='val_loss', verbose=True, save_last=True, save_top_k=3, save_weights_only=False, mode='min', every_n_epochs=1, prefix=None, postfix='.mridc', save_best_model=False, always_save_mridc=False, save_mridc_on_train_end=True, model_parallel_size=None)"}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.files_to_copy", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[List[str]]", "default_value": " = None"}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.log_step_timing", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]", "default_value": " = True"}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.step_timing_kwargs", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[mridc.utils.exp_manager.StepTimingParams]", "default_value": " = StepTimingParams(reduction='mean', sync_cuda=False, buffer_size=1)"}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"fullname": "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size", "modulename": "mridc.utils.exp_manager", "qualname": "ExpManagerConfig.model_parallel_size", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": " = None"}, "mridc.utils.exp_manager.TimingCallback": {"fullname": "mridc.utils.exp_manager.TimingCallback", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback", "type": "class", "doc": "<p>Logs execution time of train/val/test steps</p>\n", "bases": "pytorch_lightning.callbacks.base.Callback"}, "mridc.utils.exp_manager.TimingCallback.__init__": {"fullname": "mridc.utils.exp_manager.TimingCallback.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.__init__", "type": "function", "doc": "<p>Initialize TimingCallback</p>\n", "signature": "(self, timer_kwargs=None)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_train_batch_start", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_train_batch_start", "type": "function", "doc": "<p>Called at the beginning of each training batch</p>\n", "signature": "(self, trainer, pl_module, batch, batch_idx, **kwargs)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_train_batch_end", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_train_batch_end", "type": "function", "doc": "<p>Logs the time taken by the training batch</p>\n", "signature": "(self, trainer, pl_module, outputs, batch, batch_idx, **kwargs)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_validation_batch_start", "type": "function", "doc": "<p>Logs the time taken by the validation batch</p>\n", "signature": "(self, trainer, pl_module, batch, batch_idx, dataloader_idx)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_validation_batch_end", "type": "function", "doc": "<p>Logs the time taken by the validation step</p>\n", "signature": "(self, trainer, pl_module, outputs, batch, batch_idx, dataloader_idx)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_test_batch_start", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_test_batch_start", "type": "function", "doc": "<p>Logs execution time of test steps</p>\n", "signature": "(self, trainer, pl_module, batch, batch_idx, dataloader_idx)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_test_batch_end", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_test_batch_end", "type": "function", "doc": "<p>Logs execution time of test steps</p>\n", "signature": "(self, trainer, pl_module, outputs, batch, batch_idx, dataloader_idx)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_before_backward", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_before_backward", "type": "function", "doc": "<p>Logs the time taken for backward pass</p>\n", "signature": "(self, trainer, pl_module, loss)", "funcdef": "def"}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"fullname": "mridc.utils.exp_manager.TimingCallback.on_after_backward", "modulename": "mridc.utils.exp_manager", "qualname": "TimingCallback.on_after_backward", "type": "function", "doc": "<p>Note: this is called after the optimizer step</p>\n", "signature": "(self, trainer, pl_module)", "funcdef": "def"}, "mridc.utils.exp_manager.exp_manager": {"fullname": "mridc.utils.exp_manager.exp_manager", "modulename": "mridc.utils.exp_manager", "qualname": "exp_manager", "type": "function", "doc": "<p>exp_manager is a helper function used to manage folders for experiments. It follows the pytorch lightning paradigm\nof exp_dir/model_or_experiment_name/version. If the lightning trainer has a logger, exp_manager will get exp_dir,\nname, and version from the logger. Otherwise it will use the exp_dir and name arguments to create the logging\ndirectory. exp_manager also allows for explicit folder creation via explicit_log_dir.\nThe version can be a datetime string or an integer. Datetime version can be disabled if use_datetime_version is set\n to False. It optionally creates TensorBoardLogger, WandBLogger, ModelCheckpoint objects from pytorch lightning.\nIt copies sys.argv, and git information if available to the logging directory. It creates a log file for each\nprocess to log their output into.\nexp_manager additionally has a resume feature (resume_if_exists) which can be used to continuing training from\nthe constructed log_dir. When you need to continue the training repeatedly (like on a cluster which you need\nmultiple consecutive jobs), you need to avoid creating the version folders. Therefore from v1.0.0, when\nresume_if_exists is set to True, creating the version folders is ignored.\nArgs:\n    trainer (Trainer): The lightning trainer.\n    cfg (DictConfig, dict): Can have the following keys:\n        - explicit_log_dir (str, Path): Can be used to override exp_dir/name/version folder creation. Defaults to\n            None, which will use exp_dir, name, and version to construct the logging directory.\n        - exp_dir (str, Path): The base directory to create the logging directory. Defaults to None, which logs to\n            ./mridc_experiments.\n        - name (str): The name of the experiment. Defaults to None which turns into \"default\" via name = name or\n            \"default\".\n        - version (str): The version of the experiment. Defaults to None which uses either a datetime string or\n            lightning's TensorboardLogger system of using version_{int}.\n        - use_datetime_version (bool): Whether to use a datetime string for version. Defaults to True.\n        - resume_if_exists (bool): Whether this experiment is resuming from a previous run. If True, it sets\n            trainer.checkpoint_connector.resume_from_checkpoint_fit_path so that the trainer should auto-resume.\n            exp_manager will move files under log_dir to log_dir/run_{int}. Defaults to False. From v1.0.0, when\n            resume_if_exists is True, we would not create version folders to make it easier to find the log folder\n             for next runs.\n        - resume_past_end (bool): exp_manager errors out if resume_if_exists is True and a checkpoint matching\n            *end.ckpt indicating a previous training run fully completed. This behaviour can be disabled, in which\n            case the *end.ckpt will be loaded by setting resume_past_end to True. Defaults to False.\n        - resume_ignore_no_checkpoint (bool): exp_manager errors out if resume_if_exists is True and no checkpoint\n            could be found. This behaviour can be disabled, in which case exp_manager will print a message and\n            continue without restoring, by setting resume_ignore_no_checkpoint to True. Defaults to False.\n        - create_tensorboard_logger (bool): Whether to create a tensorboard logger and attach it to the pytorch\n            lightning trainer. Defaults to True.\n        - summary_writer_kwargs (dict): A dictionary of kwargs that can be passed to lightning's TensorboardLogger\n            class. Note that log_dir is passed by exp_manager and cannot exist in this dict. Defaults to None.\n        - create_wandb_logger (bool): Whether to create a Weights and Biases logger and attach it to the pytorch\n            lightning trainer. Defaults to False.\n        - wandb_logger_kwargs (dict): A dictionary of kwargs that can be passed to lightning's WandBLogger\n            class. Note that name and project are required parameters if create_wandb_logger is True.\n            Defaults to None.\n        - create_checkpoint_callback (bool): Whether to create a ModelCheckpoint callback and attach it to the\n            pytorch lightning trainer. The ModelCheckpoint saves the top 3 models with the best \"val_loss\", the\n            most recent checkpoint under *last.ckpt, and the final checkpoint after training completes under\n            *end.ckpt. Defaults to True.\n        - files_to_copy (list): A list of files to copy to the experiment logging directory. Defaults to None which\n            copies no files.\nreturns:\n    log_dir (Path): The final logging directory where logging files are saved. Usually the concatenation of\n        exp_dir, name, and version.</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    cfg: Union[omegaconf.dictconfig.DictConfig, Dict, NoneType] = None\n) -> Optional[pathlib.Path]", "funcdef": "def"}, "mridc.utils.exp_manager.error_checks": {"fullname": "mridc.utils.exp_manager.error_checks", "modulename": "mridc.utils.exp_manager", "qualname": "error_checks", "type": "function", "doc": "<p>Checks that the passed trainer is compliant with MRIDC and exp_manager's passed configuration. Checks that:\n    - Throws error when hydra has changed the working directory. This causes issues with lightning's DDP\n    - Throws error when trainer has loggers defined but create_tensorboard_logger or create_WandB_logger is True\n    - Prints error messages when 1) run on multi-node and not Slurm, and 2) run on multi-gpu without DDP</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    cfg: Union[omegaconf.dictconfig.DictConfig, Dict, NoneType] = None\n)", "funcdef": "def"}, "mridc.utils.exp_manager.check_resume": {"fullname": "mridc.utils.exp_manager.check_resume", "modulename": "mridc.utils.exp_manager", "qualname": "check_resume", "type": "function", "doc": "<p>Checks that resume=True was used correctly with the arguments pass to exp_manager. Sets\ntrainer.checkpoint_connector.resume_from_checkpoint_fit_path as necessary.\nReturns:\n    log_dir (Path): the log_dir\n    exp_dir (str): the base exp_dir without name nor version\n    name (str): The name of the experiment\n    version (str): The version of the experiment\nRaises:\n    NotFoundError: If resume is True, resume_ignore_no_checkpoint is False, and checkpoints could not be found.\n    ValueError: If resume is True, and there were more than 1 checkpoint could found.</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    log_dir: str,\n    resume_past_end: bool = False,\n    resume_ignore_no_checkpoint: bool = False\n)", "funcdef": "def"}, "mridc.utils.exp_manager.check_explicit_log_dir": {"fullname": "mridc.utils.exp_manager.check_explicit_log_dir", "modulename": "mridc.utils.exp_manager", "qualname": "check_explicit_log_dir", "type": "function", "doc": "<p>Checks that the passed arguments are compatible with explicit_log_dir.\nReturns:\n    log_dir (Path): the log_dir\n    exp_dir (str): the base exp_dir without name nor version\n    name (str): The name of the experiment\n    version (str): The version of the experiment\nRaise:\n    LoggerMisconfigurationError</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    explicit_log_dir: List[Union[pathlib.Path, str]],\n    exp_dir: str,\n    name: str,\n    version: str\n) -> Tuple[pathlib.Path, str, str, str]", "funcdef": "def"}, "mridc.utils.exp_manager.get_log_dir": {"fullname": "mridc.utils.exp_manager.get_log_dir", "modulename": "mridc.utils.exp_manager", "qualname": "get_log_dir", "type": "function", "doc": "<p>Obtains the log_dir used for exp_manager.\nReturns:\n    log_dir (Path): the log_dir\n    exp_dir (str): the base exp_dir without name nor version\n    name (str): The name of the experiment\n    version (str): The version of the experiment\n    explicit_log_dir (str): The explicit path to the log folder. Defaults to False.\n    use_datetime_version (bool): Uses date and time as the version of the log folder. Defaults to True.\n    resume_if_exists (bool): if resume_if_exists of the exp_manager's config is enabled or not. When enabled, the\n        version folders would not get created.\nRaise:\n    LoggerMisconfigurationError: If trainer is incompatible with arguments\n    NotFoundError: If resume is True, resume_ignore_no_checkpoint is False, and checkpoints could not be found.\n    ValueError: If resume is True, and there were more than 1 checkpoint could found.</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    exp_dir: str = None,\n    name: str = None,\n    version: str = None,\n    explicit_log_dir: str = None,\n    use_datetime_version: bool = True,\n    resume_if_exists: bool = False\n) -> Tuple[pathlib.Path, str, str, str]", "funcdef": "def"}, "mridc.utils.exp_manager.get_git_hash": {"fullname": "mridc.utils.exp_manager.get_git_hash", "modulename": "mridc.utils.exp_manager", "qualname": "get_git_hash", "type": "function", "doc": "<p>Helper function that tries to get the commit hash if running inside a git folder\nreturns:\n    Bool: Whether the git subprocess ran without error\n    str: git subprocess output or error message</p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.exp_manager.get_git_diff": {"fullname": "mridc.utils.exp_manager.get_git_diff", "modulename": "mridc.utils.exp_manager", "qualname": "get_git_diff", "type": "function", "doc": "<p>Helper function that tries to get the git diff if running inside a git folder\nreturns:\n    Bool: Whether the git subprocess ran without error\n    str: git subprocess output or error message</p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.exp_manager.LoggerList": {"fullname": "mridc.utils.exp_manager.LoggerList", "modulename": "mridc.utils.exp_manager", "qualname": "LoggerList", "type": "class", "doc": "<p>A thin wrapper on Lightning's LoggerCollection such that name and version are better aligned with exp_manager</p>\n", "bases": "pytorch_lightning.loggers.base.LoggerCollection"}, "mridc.utils.exp_manager.LoggerList.__init__": {"fullname": "mridc.utils.exp_manager.LoggerList.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "LoggerList.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, _logger_iterable, mridc_name=None, mridc_version='')", "funcdef": "def"}, "mridc.utils.exp_manager.LoggerList.name": {"fullname": "mridc.utils.exp_manager.LoggerList.name", "modulename": "mridc.utils.exp_manager", "qualname": "LoggerList.name", "type": "variable", "doc": "<p>The name of the experiment.</p>\n", "annotation": ": str"}, "mridc.utils.exp_manager.LoggerList.version": {"fullname": "mridc.utils.exp_manager.LoggerList.version", "modulename": "mridc.utils.exp_manager", "qualname": "LoggerList.version", "type": "variable", "doc": "<p>The version of the experiment. If the logger was created with a version, this will be the version.</p>\n", "annotation": ": str"}, "mridc.utils.exp_manager.configure_loggers": {"fullname": "mridc.utils.exp_manager.configure_loggers", "modulename": "mridc.utils.exp_manager", "qualname": "configure_loggers", "type": "function", "doc": "<p>Creates TensorboardLogger and/or WandBLogger and attach them to trainer. Raises ValueError if\nsummary_writer_kwargs or wandb_kwargs are miss configured.</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    exp_dir: List[Union[pathlib.Path, str]],\n    name: str,\n    version: str,\n    create_tensorboard_logger: bool,\n    summary_writer_kwargs: dict,\n    create_wandb_logger: bool,\n    wandb_kwargs: dict\n)", "funcdef": "def"}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"fullname": "mridc.utils.exp_manager.MRIDCModelCheckpoint", "modulename": "mridc.utils.exp_manager", "qualname": "MRIDCModelCheckpoint", "type": "class", "doc": "<p>Light wrapper around Lightning's ModelCheckpoint to force a saved checkpoint on train_end</p>\n", "bases": "pytorch_lightning.callbacks.model_checkpoint.ModelCheckpoint"}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"fullname": "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__", "modulename": "mridc.utils.exp_manager", "qualname": "MRIDCModelCheckpoint.__init__", "type": "function", "doc": "<p>Args:\n    always_save_mridc (): (Default value = False)\n    save_mridc_on_train_end (): (Default value = True)\n    save_best_model (): (Default value = False)\n    postfix (): (Default value = \".mridc\")\n    n_resume (): (Default value = False)\n    model_parallel_size (): (Default value = None)\n    **kwargs (): (Default value = {})</p>\n", "signature": "(\n    self,\n    always_save_mridc=False,\n    save_mridc_on_train_end=True,\n    save_best_model=False,\n    postfix='.mridc',\n    n_resume=False,\n    model_parallel_size=None,\n    **kwargs\n)", "funcdef": "def"}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"fullname": "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run", "modulename": "mridc.utils.exp_manager", "qualname": "MRIDCModelCheckpoint.mridc_topk_check_previous_run", "type": "function", "doc": "<p>Check if there are previous runs with the same topk value.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"fullname": "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint", "modulename": "mridc.utils.exp_manager", "qualname": "MRIDCModelCheckpoint.on_save_checkpoint", "type": "function", "doc": "<p>Override the default on_save_checkpoint to save the best model if needed.</p>\n\n<p>Args:\n    trainer (): The trainer object.\n    pl_module (): The LightningModule object.\n    checkpoint (): The checkpoint object.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self, trainer, pl_module, checkpoint)", "funcdef": "def"}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"fullname": "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end", "modulename": "mridc.utils.exp_manager", "qualname": "MRIDCModelCheckpoint.on_train_end", "type": "function", "doc": "<p>This is called at the end of training.</p>\n\n<p>Args:\n    trainer (): the trainer object\n    pl_module (): the pl_module object</p>\n\n<p>Returns:\n    None</p>\n", "signature": "(self, trainer, pl_module)", "funcdef": "def"}, "mridc.utils.exp_manager.configure_checkpointing": {"fullname": "mridc.utils.exp_manager.configure_checkpointing", "modulename": "mridc.utils.exp_manager", "qualname": "configure_checkpointing", "type": "function", "doc": "<p>Adds ModelCheckpoint to trainer. Raises CheckpointMisconfigurationError if trainer already has a ModelCheckpoint\ncallback or if trainer.weights_save_path was passed to Trainer.</p>\n", "signature": "(\n    trainer: pytorch_lightning.trainer.trainer.Trainer,\n    log_dir: pathlib.Path,\n    name: str,\n    resume: bool,\n    params: omegaconf.dictconfig.DictConfig\n)", "funcdef": "def"}, "mridc.utils.exp_manager.check_slurm": {"fullname": "mridc.utils.exp_manager.check_slurm", "modulename": "mridc.utils.exp_manager", "qualname": "check_slurm", "type": "function", "doc": "<p>Checks if the trainer is running on a slurm cluster. If so, it will check if the trainer is running on the master\nnode. If it is not, it will exit.</p>\n\n<p>Args:\n    trainer (): The trainer to check.</p>\n\n<p>Returns:\n    bool: True if the trainer is running on the master node, False otherwise.</p>\n", "signature": "(trainer)", "funcdef": "def"}, "mridc.utils.exp_manager.StatelessTimer": {"fullname": "mridc.utils.exp_manager.StatelessTimer", "modulename": "mridc.utils.exp_manager", "qualname": "StatelessTimer", "type": "class", "doc": "<p>Extension of PTL timers to be per run.</p>\n", "bases": "pytorch_lightning.callbacks.timer.Timer"}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"fullname": "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint", "modulename": "mridc.utils.exp_manager", "qualname": "StatelessTimer.on_save_checkpoint", "type": "function", "doc": "<p>Override to not save the state of the timer.</p>\n", "signature": "(self, trainer, pl_module, checkpoint) -> None", "funcdef": "def"}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"fullname": "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint", "modulename": "mridc.utils.exp_manager", "qualname": "StatelessTimer.on_load_checkpoint", "type": "function", "doc": "<p>Override to not load the state of the timer.</p>\n", "signature": "(self, trainer, pl_module, callback_state) -> None", "funcdef": "def"}, "mridc.utils.export_utils": {"fullname": "mridc.utils.export_utils", "modulename": "mridc.utils.export_utils", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.export_utils.expand_Conv1D": {"fullname": "mridc.utils.export_utils.expand_Conv1D", "modulename": "mridc.utils.export_utils", "qualname": "expand_Conv1D", "type": "function", "doc": "<p>Expands a Conv1D into a Conv2D. This is required for many (closed source) commercial tools with poor support for\n1D Convolutions in Onnx.</p>\n\n<p>Args:\n    conv1d: the Conv1D pytorch module to expand\nReturns:\n    conv2d: Conv2D module with identical weights and params</p>\n", "signature": "(\n    conv1d: torch.nn.modules.module.Module\n) -> Optional[torch.nn.modules.conv.Conv2d]", "funcdef": "def"}, "mridc.utils.export_utils.expand_BatchNorm1d": {"fullname": "mridc.utils.export_utils.expand_BatchNorm1d", "modulename": "mridc.utils.export_utils", "qualname": "expand_BatchNorm1d", "type": "function", "doc": "<p>Expands a BatchNorm1d into a BatchNorm2d. This is required for many (closed source) commercial tools with poor\nsupport for BatchNorm1d in Onnx.</p>\n\n<p>Args:\n    bn1d: the BatchNorm1d pytorch module to expand\nReturns:\n    bn2d: BatchNorm2d module with identical weights and params</p>\n", "signature": "(\n    bn1d: torch.nn.modules.module.Module\n) -> Optional[torch.nn.modules.batchnorm.BatchNorm2d]", "funcdef": "def"}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"fullname": "mridc.utils.export_utils.expand_ConvTranspose1D", "modulename": "mridc.utils.export_utils", "qualname": "expand_ConvTranspose1D", "type": "function", "doc": "<p>Expands a Conv1D into a Conv2D. This is required for many (closed source) commercial tools with poor support for\n1D Convolutions in Onnx.</p>\n\n<p>Args:\n    conv1d: the Conv1D pytorch module to expand\nReturns:\n    conv2d: Conv2D module with identical weights and params</p>\n", "signature": "(\n    conv1d: torch.nn.modules.module.Module\n) -> Optional[torch.nn.modules.conv.ConvTranspose2d]", "funcdef": "def"}, "mridc.utils.export_utils.simple_replace": {"fullname": "mridc.utils.export_utils.simple_replace", "modulename": "mridc.utils.export_utils", "qualname": "simple_replace", "type": "function", "doc": "<p>Generic function generator to replace BaseT module with DestT. BaseT and DestT should have same attributes.\nNo weights are copied.</p>\n\n<p>Args:\n    BaseT : module type to replace\n    DestT : destination module type\nReturns:\n    swap function to replace BaseT module with DestT</p>\n", "signature": "(\n    BaseT: Type[torch.nn.modules.module.Module],\n    DestT: Type[torch.nn.modules.module.Module]\n) -> Callable[[torch.nn.modules.module.Module], Optional[torch.nn.modules.module.Module]]", "funcdef": "def"}, "mridc.utils.export_utils.swap_modules": {"fullname": "mridc.utils.export_utils.swap_modules", "modulename": "mridc.utils.export_utils", "qualname": "swap_modules", "type": "function", "doc": "<p>This function swaps nested modules as specified by \"dot paths\" in mod with a desired replacement. This allows\nfor swapping nested modules through arbitrary levels if children\nNOTE: This occurs in place, if you want to preserve model then make sure to copy it first.</p>\n", "signature": "(\n    model: torch.nn.modules.module.Module,\n    mapping: Dict[str, torch.nn.modules.module.Module]\n)", "funcdef": "def"}, "mridc.utils.export_utils.replace_modules": {"fullname": "mridc.utils.export_utils.replace_modules", "modulename": "mridc.utils.export_utils", "qualname": "replace_modules", "type": "function", "doc": "<p>Top-level function to replace modules in model, specified by class name with a desired replacement.\nNOTE: This occurs in place, if you want to preserve model then make sure to copy it first.\nArgs:\n    model : top level module\n    expansions : replacement dictionary: module class name -> replacement function generator\nReturns:\n    model, possibly modified in-place</p>\n", "signature": "(\n    model: torch.nn.modules.module.Module,\n    expansions: Dict[str, Callable[[torch.nn.modules.module.Module], Optional[torch.nn.modules.module.Module]]] = None\n) -> torch.nn.modules.module.Module", "funcdef": "def"}, "mridc.utils.export_utils.replace_for_export": {"fullname": "mridc.utils.export_utils.replace_for_export", "modulename": "mridc.utils.export_utils", "qualname": "replace_for_export", "type": "function", "doc": "<p>Top-level function to replace default set of modules in model\nNOTE: This occurs in place, if you want to preserve model then make sure to copy it first.\nArgs:\n    model : top level module\n    replace_1D_2D : include 1D -> 2D replacements\nReturns:\n    model, possibly modified in-place</p>\n", "signature": "(model: torch.nn.modules.module.Module, replace_1D_2D: bool = False)", "funcdef": "def"}, "mridc.utils.formaters": {"fullname": "mridc.utils.formaters", "modulename": "mridc.utils.formaters", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.formaters.base": {"fullname": "mridc.utils.formaters.base", "modulename": "mridc.utils.formaters.base", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"fullname": "mridc.utils.formaters.base.BaseMRIDCFormatter", "modulename": "mridc.utils.formaters.base", "qualname": "BaseMRIDCFormatter", "type": "class", "doc": "<p>Base formatter for MRIDC logs.</p>\n", "bases": "BaseFormatter"}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"fullname": "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT", "modulename": "mridc.utils.formaters.base", "qualname": "BaseMRIDCFormatter.DEFAULT_FORMAT", "type": "variable", "doc": "<p></p>\n", "default_value": " = '%(color)s[MRIDC %(levelname)1.1s %(asctime)s %(module)s:%(lineno)d]%(end_color)s %(message)s'"}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"fullname": "mridc.utils.formaters.base.DebugMRIDCFormatter", "modulename": "mridc.utils.formaters.base", "qualname": "DebugMRIDCFormatter", "type": "class", "doc": "<p>Debug formatter for MRIDC logs.</p>\n", "bases": "BaseFormatter"}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"fullname": "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT", "modulename": "mridc.utils.formaters.base", "qualname": "DebugMRIDCFormatter.DEFAULT_FORMAT", "type": "variable", "doc": "<p></p>\n", "default_value": " = '%(color)s[MRIDC %(levelname)1.1s %(asctime)s %(module)s:%(lineno)d rank:%(rank)s]%(end_color)s %(message)s'"}, "mridc.utils.formaters.colors": {"fullname": "mridc.utils.formaters.colors", "modulename": "mridc.utils.formaters.colors", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.formaters.colors.code_to_chars": {"fullname": "mridc.utils.formaters.colors.code_to_chars", "modulename": "mridc.utils.formaters.colors", "qualname": "code_to_chars", "type": "function", "doc": "<p>Convert ANSI color code to a string of characters.</p>\n\n<p>Args:\n    code (): ANSI color code.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(code)", "funcdef": "def"}, "mridc.utils.formaters.colors.set_title": {"fullname": "mridc.utils.formaters.colors.set_title", "modulename": "mridc.utils.formaters.colors", "qualname": "set_title", "type": "function", "doc": "<p>Set terminal title.</p>\n\n<p>Args:\n    title (): Title.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(title)", "funcdef": "def"}, "mridc.utils.formaters.colors.clear_screen": {"fullname": "mridc.utils.formaters.colors.clear_screen", "modulename": "mridc.utils.formaters.colors", "qualname": "clear_screen", "type": "function", "doc": "<p>Clear terminal screen.</p>\n\n<p>Args:\n    mode (): Mode.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(mode=2)", "funcdef": "def"}, "mridc.utils.formaters.colors.clear_line": {"fullname": "mridc.utils.formaters.colors.clear_line", "modulename": "mridc.utils.formaters.colors", "qualname": "clear_line", "type": "function", "doc": "<p>Clear terminal line.</p>\n\n<p>Args:\n    mode (): Mode.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(mode=2)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCodes": {"fullname": "mridc.utils.formaters.colors.AnsiCodes", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCodes", "type": "class", "doc": "<p>ANSI color codes.</p>\n"}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"fullname": "mridc.utils.formaters.colors.AnsiCodes.__init__", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCodes.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCursor": {"fullname": "mridc.utils.formaters.colors.AnsiCursor", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor", "type": "class", "doc": "<p>ANSI cursor codes.</p>\n"}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"fullname": "mridc.utils.formaters.colors.AnsiCursor.__init__", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"fullname": "mridc.utils.formaters.colors.AnsiCursor.UP", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor.UP", "type": "function", "doc": "<p>Move the cursor up n lines.</p>\n\n<p>Args:\n    n (): Number of lines.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(n=1)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"fullname": "mridc.utils.formaters.colors.AnsiCursor.DOWN", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor.DOWN", "type": "function", "doc": "<p>Move the cursor down n lines.</p>\n\n<p>Args:\n    n (): Number of lines.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(n=1)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"fullname": "mridc.utils.formaters.colors.AnsiCursor.FORWARD", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor.FORWARD", "type": "function", "doc": "<p>Move the cursor forward n characters.</p>\n\n<p>Args:\n    n (): Number of characters.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(n=1)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"fullname": "mridc.utils.formaters.colors.AnsiCursor.BACK", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor.BACK", "type": "function", "doc": "<p>Move the cursor back n characters.</p>\n\n<p>Args:\n    n (): Number of characters.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(n=1)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"fullname": "mridc.utils.formaters.colors.AnsiCursor.POS", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiCursor.POS", "type": "function", "doc": "<p>Position the cursor.</p>\n\n<p>Args:\n    x (): X position.\n    y (): Y position.</p>\n\n<p>Returns:\n    str: String of characters.</p>\n", "signature": "(x=1, y=1)", "funcdef": "def"}, "mridc.utils.formaters.colors.AnsiFore": {"fullname": "mridc.utils.formaters.colors.AnsiFore", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore", "type": "class", "doc": "<p>ANSI color codes for foreground text.</p>\n", "bases": "AnsiCodes"}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"fullname": "mridc.utils.formaters.colors.AnsiFore.BLACK", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.BLACK", "type": "variable", "doc": "<p></p>\n", "default_value": " = 30"}, "mridc.utils.formaters.colors.AnsiFore.RED": {"fullname": "mridc.utils.formaters.colors.AnsiFore.RED", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.RED", "type": "variable", "doc": "<p></p>\n", "default_value": " = 31"}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"fullname": "mridc.utils.formaters.colors.AnsiFore.GREEN", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.GREEN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 32"}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"fullname": "mridc.utils.formaters.colors.AnsiFore.YELLOW", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.YELLOW", "type": "variable", "doc": "<p></p>\n", "default_value": " = 33"}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"fullname": "mridc.utils.formaters.colors.AnsiFore.BLUE", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.BLUE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 34"}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"fullname": "mridc.utils.formaters.colors.AnsiFore.MAGENTA", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.MAGENTA", "type": "variable", "doc": "<p></p>\n", "default_value": " = 35"}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"fullname": "mridc.utils.formaters.colors.AnsiFore.CYAN", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.CYAN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 36"}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"fullname": "mridc.utils.formaters.colors.AnsiFore.WHITE", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.WHITE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 37"}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"fullname": "mridc.utils.formaters.colors.AnsiFore.RESET", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.RESET", "type": "variable", "doc": "<p></p>\n", "default_value": " = 39"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTBLACK_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 90"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTRED_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 91"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTGREEN_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 92"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTYELLOW_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 93"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTBLUE_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 94"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTMAGENTA_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 95"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTCYAN_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 96"}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"fullname": "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiFore.LIGHTWHITE_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 97"}, "mridc.utils.formaters.colors.AnsiBack": {"fullname": "mridc.utils.formaters.colors.AnsiBack", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack", "type": "class", "doc": "<p>ANSI color codes for background text.</p>\n", "bases": "AnsiCodes"}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"fullname": "mridc.utils.formaters.colors.AnsiBack.BLACK", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.BLACK", "type": "variable", "doc": "<p></p>\n", "default_value": " = 40"}, "mridc.utils.formaters.colors.AnsiBack.RED": {"fullname": "mridc.utils.formaters.colors.AnsiBack.RED", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.RED", "type": "variable", "doc": "<p></p>\n", "default_value": " = 41"}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"fullname": "mridc.utils.formaters.colors.AnsiBack.GREEN", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.GREEN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 42"}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"fullname": "mridc.utils.formaters.colors.AnsiBack.YELLOW", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.YELLOW", "type": "variable", "doc": "<p></p>\n", "default_value": " = 43"}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"fullname": "mridc.utils.formaters.colors.AnsiBack.BLUE", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.BLUE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 44"}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"fullname": "mridc.utils.formaters.colors.AnsiBack.MAGENTA", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.MAGENTA", "type": "variable", "doc": "<p></p>\n", "default_value": " = 45"}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"fullname": "mridc.utils.formaters.colors.AnsiBack.CYAN", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.CYAN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 46"}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"fullname": "mridc.utils.formaters.colors.AnsiBack.WHITE", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.WHITE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 47"}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"fullname": "mridc.utils.formaters.colors.AnsiBack.RESET", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.RESET", "type": "variable", "doc": "<p></p>\n", "default_value": " = 49"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTBLACK_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 100"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTRED_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 101"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTGREEN_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 102"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTYELLOW_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 103"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTBLUE_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 104"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTMAGENTA_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 105"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTCYAN_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 106"}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"fullname": "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiBack.LIGHTWHITE_EX", "type": "variable", "doc": "<p></p>\n", "default_value": " = 107"}, "mridc.utils.formaters.colors.AnsiStyle": {"fullname": "mridc.utils.formaters.colors.AnsiStyle", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiStyle", "type": "class", "doc": "<p>ANSI color codes for text styles.</p>\n", "bases": "AnsiCodes"}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"fullname": "mridc.utils.formaters.colors.AnsiStyle.BRIGHT", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiStyle.BRIGHT", "type": "variable", "doc": "<p></p>\n", "default_value": " = 1"}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"fullname": "mridc.utils.formaters.colors.AnsiStyle.DIM", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiStyle.DIM", "type": "variable", "doc": "<p></p>\n", "default_value": " = 2"}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"fullname": "mridc.utils.formaters.colors.AnsiStyle.NORMAL", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiStyle.NORMAL", "type": "variable", "doc": "<p></p>\n", "default_value": " = 22"}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"fullname": "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL", "modulename": "mridc.utils.formaters.colors", "qualname": "AnsiStyle.RESET_ALL", "type": "variable", "doc": "<p></p>\n", "default_value": " = 0"}, "mridc.utils.formaters.colors.Fore": {"fullname": "mridc.utils.formaters.colors.Fore", "modulename": "mridc.utils.formaters.colors", "qualname": "Fore", "type": "variable", "doc": "<p></p>\n", "default_value": " = <mridc.utils.formaters.colors.AnsiFore object>"}, "mridc.utils.formaters.colors.Back": {"fullname": "mridc.utils.formaters.colors.Back", "modulename": "mridc.utils.formaters.colors", "qualname": "Back", "type": "variable", "doc": "<p></p>\n", "default_value": " = <mridc.utils.formaters.colors.AnsiBack object>"}, "mridc.utils.formaters.colors.Style": {"fullname": "mridc.utils.formaters.colors.Style", "modulename": "mridc.utils.formaters.colors", "qualname": "Style", "type": "variable", "doc": "<p></p>\n", "default_value": " = <mridc.utils.formaters.colors.AnsiStyle object>"}, "mridc.utils.formaters.colors.Cursor": {"fullname": "mridc.utils.formaters.colors.Cursor", "modulename": "mridc.utils.formaters.colors", "qualname": "Cursor", "type": "variable", "doc": "<p></p>\n", "default_value": " = <mridc.utils.formaters.colors.AnsiCursor object>"}, "mridc.utils.formaters.utils": {"fullname": "mridc.utils.formaters.utils", "modulename": "mridc.utils.formaters.utils", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.formaters.utils.check_color_support": {"fullname": "mridc.utils.formaters.utils.check_color_support", "modulename": "mridc.utils.formaters.utils", "qualname": "check_color_support", "type": "function", "doc": "<p>Returns True if the terminal supports color, False otherwise.</p>\n\n<p>Returns:\n    bool: True if the terminal supports color, False otherwise.</p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.formaters.utils.to_unicode": {"fullname": "mridc.utils.formaters.utils.to_unicode", "modulename": "mridc.utils.formaters.utils", "qualname": "to_unicode", "type": "function", "doc": "<p>Converts a string argument to a unicode string.\nIf the argument is already a unicode string or None, it is returned\nunchanged.  Otherwise it must be a byte string and is decoded as utf8.</p>\n", "signature": "(value)", "funcdef": "def"}, "mridc.utils.get_rank": {"fullname": "mridc.utils.get_rank", "modulename": "mridc.utils.get_rank", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.get_rank.is_global_rank_zero": {"fullname": "mridc.utils.get_rank.is_global_rank_zero", "modulename": "mridc.utils.get_rank", "qualname": "is_global_rank_zero", "type": "function", "doc": "<p>Helper function to determine if the current process is global_rank 0 (the main process)</p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.lightning_logger_patch": {"fullname": "mridc.utils.lightning_logger_patch", "modulename": "mridc.utils.lightning_logger_patch", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.lightning_logger_patch.HANDLERS": {"fullname": "mridc.utils.lightning_logger_patch.HANDLERS", "modulename": "mridc.utils.lightning_logger_patch", "qualname": "HANDLERS", "type": "variable", "doc": "<p></p>\n", "annotation": ": Dict[Any, Any]", "default_value": " = {}"}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"fullname": "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger", "modulename": "mridc.utils.lightning_logger_patch", "qualname": "add_memory_handlers_to_pl_logger", "type": "function", "doc": "<p>Adds two MemoryHandlers to pytorch_lightning's logger. These two handlers are essentially message buffers. This\nfunction is called in mridc.utils.__init__.py. These handlers are used in add_filehandlers_to_pl_logger to flush\nbuffered messages to files.</p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"fullname": "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger", "modulename": "mridc.utils.lightning_logger_patch", "qualname": "add_filehandlers_to_pl_logger", "type": "function", "doc": "<p>Adds two filehandlers to pytorch_lightning's logger. Called in mridc.utils.exp_manager(). The first filehandler\nlogs all messages to all_log_file while the second filehandler logs all WARNING and higher messages to\nerr_log_file. If \"memory_err\" and \"memory_all\" exist in HANDLERS, then those buffers are flushed to err_log_file\nand all_log_file respectively, and then closed.</p>\n", "signature": "(all_log_file, err_log_file)", "funcdef": "def"}, "mridc.utils.metaclasses": {"fullname": "mridc.utils.metaclasses", "modulename": "mridc.utils.metaclasses", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.metaclasses.Singleton": {"fullname": "mridc.utils.metaclasses.Singleton", "modulename": "mridc.utils.metaclasses", "qualname": "Singleton", "type": "class", "doc": "<p>Implementation of a generic, tread-safe singleton meta-class.\nCan be used as meta-class, i.e. will create</p>\n", "bases": "builtins.type"}, "mridc.utils.model_utils": {"fullname": "mridc.utils.model_utils", "modulename": "mridc.utils.model_utils", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.model_utils.ArtifactPathType": {"fullname": "mridc.utils.model_utils.ArtifactPathType", "modulename": "mridc.utils.model_utils", "qualname": "ArtifactPathType", "type": "class", "doc": "<p>ArtifactPathType refers to the type of the path that the artifact is located at.\nLOCAL_PATH: A user local filepath that exists on the file system.\nTAR_PATH: A (generally flattened) filepath that exists inside of an archive (that may have its own full path).</p>\n", "bases": "enum.Enum"}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"fullname": "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH", "modulename": "mridc.utils.model_utils", "qualname": "ArtifactPathType.LOCAL_PATH", "type": "variable", "doc": "<p></p>\n", "default_value": " = <ArtifactPathType.LOCAL_PATH: 0>"}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"fullname": "mridc.utils.model_utils.ArtifactPathType.TAR_PATH", "modulename": "mridc.utils.model_utils", "qualname": "ArtifactPathType.TAR_PATH", "type": "variable", "doc": "<p></p>\n", "default_value": " = <ArtifactPathType.TAR_PATH: 1>"}, "mridc.utils.model_utils.ArtifactItem": {"fullname": "mridc.utils.model_utils.ArtifactItem", "modulename": "mridc.utils.model_utils", "qualname": "ArtifactItem", "type": "class", "doc": "<p>ArtifactItem is a dataclass that holds the information of an artifact.</p>\n"}, "mridc.utils.model_utils.ArtifactItem.__init__": {"fullname": "mridc.utils.model_utils.ArtifactItem.__init__", "modulename": "mridc.utils.model_utils", "qualname": "ArtifactItem.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"fullname": "mridc.utils.model_utils.ArtifactItem.hashed_path", "modulename": "mridc.utils.model_utils", "qualname": "ArtifactItem.hashed_path", "type": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": " = None"}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"fullname": "mridc.utils.model_utils.resolve_dataset_name_from_cfg", "modulename": "mridc.utils.model_utils", "qualname": "resolve_dataset_name_from_cfg", "type": "function", "doc": "<p>Parses items of the provided sub-config to find the first potential key that\nresolves to an existing file or directory.</p>\n\n<h1 id=\"fast-path-resolution\">Fast-path Resolution</h1>\n\n<p>In order to handle cases where we need to resolve items that are not paths, a fastpath\nkey can be provided as defined in the global <code>_VAL_TEST_FASTPATH_KEY</code>.\nThis key can be used in two ways :</p>\n\n<h2 id=\"_val_test_fastpath_key-points-to-another-key-in-the-config\">_VAL_TEST_FASTPATH_KEY points to another key in the config</h2>\n\n<p>If this _VAL_TEST_FASTPATH_KEY points to another key in this config itself,\nthen we assume we want to loop through the values of that key.\nThis allows for any key in the config to become a fastpath key.\nExample:\nvalidation_ds:\n    splits: \"val\"\n    ...\n    <_VAL_TEST_FASTPATH_KEY>: \"splits\"  &lt;-- this points to the key name \"splits\"\nThen we can write the following when overriding in hydra:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">python</span> <span class=\"n\">train_file</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"o\">...</span>         <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">validation_ds</span><span class=\"o\">.</span><span class=\"n\">splits</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">val1</span><span class=\"p\">,</span> <span class=\"n\">val2</span><span class=\"p\">,</span> <span class=\"n\">dev1</span><span class=\"p\">,</span> <span class=\"n\">dev2</span><span class=\"p\">]</span> <span class=\"o\">...</span>\n</code></pre></div>\n\n<h2 id=\"_val_test_fastpath_key-itself-acts-as-the-resolved-key\">_VAL_TEST_FASTPATH_KEY itself acts as the resolved key</h2>\n\n<p>If this _VAL_TEST_FASTPATH_KEY does not point to another key in the config, then\nit is assumed that the items of this key itself are used for resolution.\nExample:\nvalidation_ds:\n    ...\n    <_VAL_TEST_FASTPATH_KEY>: \"val\"  &lt;-- this points to the key name \"splits\"\nThen we can write the following when overriding in hydra:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">python</span> <span class=\"n\">train_file</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"o\">...</span>         <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">validation_ds</span><span class=\"o\">.&lt;</span><span class=\"n\">_VAL_TEST_FASTPATH_KEY</span><span class=\"o\">&gt;=</span><span class=\"p\">[</span><span class=\"n\">val1</span><span class=\"p\">,</span> <span class=\"n\">val2</span><span class=\"p\">,</span> <span class=\"n\">dev1</span><span class=\"p\">,</span> <span class=\"n\">dev2</span><span class=\"p\">]</span> <span class=\"o\">...</span>\n</code></pre></div>\n\n<h1 id=\"important-note\">IMPORTANT NOTE:</h1>\n\n<p>It <can> potentially mismatch if there exist more than 2 valid paths, and the\nfirst path does <em>not</em> resolve the the path of the data file (but does resolve to\nsome other valid path).\nTo avoid this side-effect, place the data path as the first item on the config file.\nArgs:\n    cfg: DictConfig (Sub-config) that should be parsed.\nReturns:\n    A str representing the <code>key</code> of the config which hosts the filepath(s),\n    or None in case path could not be resolved.</p>\n", "signature": "(\n    cfg: omegaconf.dictconfig.DictConfig\n) -> Union[str, int, enum.Enum, float, bool, NoneType, Any]", "funcdef": "def"}, "mridc.utils.model_utils.parse_dataset_as_name": {"fullname": "mridc.utils.model_utils.parse_dataset_as_name", "modulename": "mridc.utils.model_utils", "qualname": "parse_dataset_as_name", "type": "function", "doc": "<p>Constructs a valid prefix-name from a provided file path.\nArgs:\n    name: str path to some valid data/manifest file or a python object that\n        will be used as a name for the data loader (via str() cast).\nReturns:\n    str prefix used to identify uniquely this data/manifest file.</p>\n", "signature": "(name: str) -> str", "funcdef": "def"}, "mridc.utils.model_utils.unique_names_check": {"fullname": "mridc.utils.model_utils.unique_names_check", "modulename": "mridc.utils.model_utils", "qualname": "unique_names_check", "type": "function", "doc": "<p>Performs a uniqueness check on the name list resolved, so that it can warn users\nabout non-unique keys.\nArgs:\n    name_list: List of strings resolved for data loaders.</p>\n", "signature": "(name_list: Optional[List[str]])", "funcdef": "def"}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"fullname": "mridc.utils.model_utils.resolve_validation_dataloaders", "modulename": "mridc.utils.model_utils", "qualname": "resolve_validation_dataloaders", "type": "function", "doc": "<p>Helper method that operates on the ModelPT class to automatically support\nmultiple dataloaders for the validation set.\nIt does so by first resolving the path to one/more data files via <code>resolve_dataset_name_from_cfg()</code>.\nIf this resolution fails, it assumes the data loader is prepared to manually support / not support\nmultiple data loaders and simply calls the appropriate setup method.\nIf resolution succeeds:\n    Checks if provided path is to a single file or a list of files.\n    If a single file is provided, simply tags that file as such and loads it via the setup method.\n    If multiple files are provided:\n        Inject a new manifest path at index \"i\" into the resolved key.\n        Calls the appropriate setup method to set the data loader.\n        Collects the initialized data loader in a list and preserves it.\n        Once all data loaders are processed, assigns the list of loaded loaders to the ModelPT.\n        Finally assigns a list of unique names resolved from the file paths to the ModelPT.\nArgs:\n    model: ModelPT subclass, which requires &gt;=1 Validation Dataloaders to be setup.</p>\n", "signature": "(model: mridc.core.classes.modelPT.ModelPT)", "funcdef": "def"}, "mridc.utils.model_utils.wrap_training_step": {"fullname": "mridc.utils.model_utils.wrap_training_step", "modulename": "mridc.utils.model_utils", "qualname": "wrap_training_step", "type": "function", "doc": "<p>Wraps the training step of the LightningModule.</p>\n\n<p>Args:\n    wrapped (): The wrapped function.\n    instance (): The LightningModule instance.\n    args (): The arguments passed to the wrapped function.\n    kwargs (): The keyword arguments passed to the wrapped function.</p>\n\n<p>Returns:\n    The return value of the wrapped function.</p>\n", "signature": "(wrapper=None, enabled=None, adapter=None, proxy=<class 'FunctionWrapper'>)", "funcdef": "def"}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"fullname": "mridc.utils.model_utils.convert_model_config_to_dict_config", "modulename": "mridc.utils.model_utils", "qualname": "convert_model_config_to_dict_config", "type": "function", "doc": "<p>Converts its input into a standard DictConfig.\nPossible input values are:</p>\n\n<ul>\n<li>DictConfig</li>\n<li>A dataclass which is a subclass of MRIDCConfig\nArgs:\ncfg: A dict-like object.\nReturns:\nThe equivalent DictConfig</li>\n</ul>\n", "signature": "(\n    cfg: Union[omegaconf.dictconfig.DictConfig, mridc.core.conf.modelPT.MRIDCConfig]\n) -> omegaconf.dictconfig.DictConfig", "funcdef": "def"}, "mridc.utils.model_utils.maybe_update_config_version": {"fullname": "mridc.utils.model_utils.maybe_update_config_version", "modulename": "mridc.utils.model_utils", "qualname": "maybe_update_config_version", "type": "function", "doc": "<p>Recursively convert Hydra 0.x configs to Hydra 1.x configs.\nChanges include:</p>\n\n<ul>\n<li><code>cls</code> -> <code>_target_</code>.</li>\n<li><code>params</code> -> drop params and shift all arguments to parent.</li>\n<li><code>target</code> -> <code>_target_</code> cannot be performed due to ModelPT injecting <code>target</code> inside class.\nArgs:\ncfg: Any Hydra compatible DictConfig\nReturns:\nAn updated DictConfig that conforms to Hydra 1.x format.</li>\n</ul>\n", "signature": "(cfg: omegaconf.dictconfig.DictConfig)", "funcdef": "def"}, "mridc.utils.model_utils.import_class_by_path": {"fullname": "mridc.utils.model_utils.import_class_by_path", "modulename": "mridc.utils.model_utils", "qualname": "import_class_by_path", "type": "function", "doc": "<p>Recursive import of class by path string.</p>\n", "signature": "(path: str)", "funcdef": "def"}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"fullname": "mridc.utils.model_utils.resolve_subclass_pretrained_model_info", "modulename": "mridc.utils.model_utils", "qualname": "resolve_subclass_pretrained_model_info", "type": "function", "doc": "<p>Recursively traverses the inheritance graph of subclasses to extract all pretrained model info.\nFirst constructs a set of unique pretrained model info by performing DFS over the inheritance graph.\nAll model info belonging to the same class is added together.\nArgs:\n    base_class: The root class, whose subclass graph will be traversed.\nReturns:\n    A list of unique pretrained model infos belonging to all of the inherited subclasses of\n    this baseclass.</p>\n", "signature": "(\n    base_class\n) -> Union[List[mridc.core.classes.common.PretrainedModelInfo], Set[Any]]", "funcdef": "def"}, "mridc.utils.model_utils.check_lib_version": {"fullname": "mridc.utils.model_utils.check_lib_version", "modulename": "mridc.utils.model_utils", "qualname": "check_lib_version", "type": "function", "doc": "<p>Checks if a library is installed, and if it is, checks the operator(lib.__version__, checked_version) as a result.\nThis bool result along with a string analysis of result is returned.\nIf the library is not installed at all, then returns None instead, along with a string explaining\nthat the library is not installed\nArgs:\n    lib_name: lower case str name of the library that must be imported.\n    checked_version: semver string that is compared against lib.__version__.\n    operator: binary callable function func(a, b) -> bool; that compares lib.__version__ against version in\n        some manner. Must return a boolean.\nReturns:\n    A tuple of results:\n    -   Bool or None. Bool if the library could be imported, and the result of\n        operator(lib.__version__, checked_version) or False if __version__ is not implemented in lib.\n        None is passed if the library is not installed at all.\n    -   A string analysis of the check.</p>\n", "signature": "(\n    lib_name: str,\n    checked_version: str,\n    operator\n) -> Tuple[Optional[bool], str]", "funcdef": "def"}, "mridc.utils.model_utils.resolve_cache_dir": {"fullname": "mridc.utils.model_utils.resolve_cache_dir", "modulename": "mridc.utils.model_utils", "qualname": "resolve_cache_dir", "type": "function", "doc": "<p>Utility method to resolve a cache directory for MRIDC that can be overridden by an environment variable.\nExample:\n    MRIDC_CACHE_DIR=\"~/mridc_cache_dir/\" python mridc_example_script.py\nReturns:\n    A Path object, resolved to the absolute path of the cache directory. If no override is provided,\n    uses an inbuilt default which adapts to mridc versions strings.</p>\n", "signature": "() -> pathlib.Path", "funcdef": "def"}, "mridc.utils.mridc_logging": {"fullname": "mridc.utils.mridc_logging", "modulename": "mridc.utils.mridc_logging", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.mridc_logging.Logger": {"fullname": "mridc.utils.mridc_logging.Logger", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger", "type": "class", "doc": "<p>Singleton class for logging.</p>\n"}, "mridc.utils.mridc_logging.Logger.__init__": {"fullname": "mridc.utils.mridc_logging.Logger.__init__", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.__init__", "type": "function", "doc": "<p>Returns singleton instance. A thread safe implementation.</p>\n", "signature": "(cls, *args, **kwargs)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.NOTSET": {"fullname": "mridc.utils.mridc_logging.Logger.NOTSET", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.NOTSET", "type": "variable", "doc": "<p></p>\n", "default_value": " = 0"}, "mridc.utils.mridc_logging.Logger.DEBUG": {"fullname": "mridc.utils.mridc_logging.Logger.DEBUG", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.DEBUG", "type": "variable", "doc": "<p></p>\n", "default_value": " = 10"}, "mridc.utils.mridc_logging.Logger.INFO": {"fullname": "mridc.utils.mridc_logging.Logger.INFO", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.INFO", "type": "variable", "doc": "<p></p>\n", "default_value": " = 20"}, "mridc.utils.mridc_logging.Logger.WARNING": {"fullname": "mridc.utils.mridc_logging.Logger.WARNING", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.WARNING", "type": "variable", "doc": "<p></p>\n", "default_value": " = 30"}, "mridc.utils.mridc_logging.Logger.ERROR": {"fullname": "mridc.utils.mridc_logging.Logger.ERROR", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.ERROR", "type": "variable", "doc": "<p></p>\n", "default_value": " = 40"}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"fullname": "mridc.utils.mridc_logging.Logger.CRITICAL", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.CRITICAL", "type": "variable", "doc": "<p></p>\n", "default_value": " = 50"}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"fullname": "mridc.utils.mridc_logging.Logger.remove_stream_handlers", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.remove_stream_handlers", "type": "function", "doc": "<p>Removes StreamHandler that log to stdout and stderr from the logger.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"fullname": "mridc.utils.mridc_logging.Logger.add_stream_handlers", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.add_stream_handlers", "type": "function", "doc": "<p>Add StreamHandler that log to stdout and stderr to the logger. INFO and lower logs are streamed to stdout\nwhile WARNING and higher are streamed to stderr. If the MRIDC_ENV_VARNAME_REDIRECT_LOGS_TO_STDERR environment\nvariable is set, all logs are sent to stderr instead.</p>\n", "signature": "(\n    self,\n    formatter=<class 'mridc.utils.formaters.base.BaseMRIDCFormatter'>\n)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"fullname": "mridc.utils.mridc_logging.Logger.reset_stream_handler", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.reset_stream_handler", "type": "function", "doc": "<p>Removes then adds stream handlers.</p>\n", "signature": "(\n    self,\n    formatter=<class 'mridc.utils.formaters.base.BaseMRIDCFormatter'>\n)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"fullname": "mridc.utils.mridc_logging.Logger.add_file_handler", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.add_file_handler", "type": "function", "doc": "<p>Add a FileHandler to logger that logs all messages to a file. If the logger had a MemoryHandler at\nself._handlers[\"memory_all\"], those buffered messages are flushed to the new file, and the MemoryHandler is\nclosed.</p>\n", "signature": "(self, log_file)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"fullname": "mridc.utils.mridc_logging.Logger.add_err_file_handler", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.add_err_file_handler", "type": "function", "doc": "<p>Add a FileHandler to logger that logs all WARNING and higher messages to a file. If the logger had a\nMemoryHandler at self._handlers[\"memory_err\"], those buffered messages are flushed to the new file, and the\nMemoryHandler is closed.</p>\n", "signature": "(self, log_file)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"fullname": "mridc.utils.mridc_logging.Logger.getEffectiveLevel", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.getEffectiveLevel", "type": "function", "doc": "<p>Return how much logging output will be produced.</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"fullname": "mridc.utils.mridc_logging.Logger.get_verbosity", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.get_verbosity", "type": "function", "doc": "<p>See getEffectiveLevel</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.setLevel": {"fullname": "mridc.utils.mridc_logging.Logger.setLevel", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.setLevel", "type": "function", "doc": "<p>Sets the threshold for what messages will be logged.</p>\n", "signature": "(self, verbosity_level)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"fullname": "mridc.utils.mridc_logging.Logger.set_verbosity", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.set_verbosity", "type": "function", "doc": "<p>See setLevel</p>\n", "signature": "(self, verbosity_level)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"fullname": "mridc.utils.mridc_logging.Logger.patch_stderr_handler", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.patch_stderr_handler", "type": "function", "doc": "<p>Sends messages that should log to stderr to stream instead. Useful for unittests</p>\n", "signature": "(self, stream)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"fullname": "mridc.utils.mridc_logging.Logger.patch_stdout_handler", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.patch_stdout_handler", "type": "function", "doc": "<p>Sends messages that should log to stdout to stream instead. Useful for unittests</p>\n", "signature": "(self, stream)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"fullname": "mridc.utils.mridc_logging.Logger.temp_verbosity", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.temp_verbosity", "type": "function", "doc": "<p>Sets the a temporary threshold for what messages will be logged.</p>\n", "signature": "(self, verbosity_level)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"fullname": "mridc.utils.mridc_logging.Logger.captureWarnings", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.captureWarnings", "type": "function", "doc": "<p>If capture is true, redirect all warnings to the logging package.\nIf capture is False, ensure that warnings are not redirected to logging\nbut to their original destinations.</p>\n", "signature": "(self, capture)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.debug": {"fullname": "mridc.utils.mridc_logging.Logger.debug", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.debug", "type": "function", "doc": "<p>Log 'msg % args' with severity 'DEBUG'.\nTo pass exception information, use the keyword argument exc_info with\na true value, e.g.\nlogger.debug(\"Houston, we have a %s\", \"thorny problem\", exc_info=1)</p>\n", "signature": "(self, msg, *args, mode=<LogMode.EACH: 0>, **kwargs)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.info": {"fullname": "mridc.utils.mridc_logging.Logger.info", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.info", "type": "function", "doc": "<p>Log 'msg % args' with severity 'INFO'.\nTo pass exception information, use the keyword argument exc_info with\na true value, e.g.\nlogger.info(\"Houston, we have a %s\", \"interesting problem\", exc_info=1)</p>\n", "signature": "(self, msg, *args, mode=<LogMode.EACH: 0>, **kwargs)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.warning": {"fullname": "mridc.utils.mridc_logging.Logger.warning", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.warning", "type": "function", "doc": "<p>Log 'msg % args' with severity 'WARNING'.\nTo pass exception information, use the keyword argument exc_info with\na true value, e.g.\nlogger.warning(\"Houston, we have a %s\", \"bit of a problem\", exc_info=1)</p>\n", "signature": "(self, msg, *args, mode=<LogMode.EACH: 0>, **kwargs)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.error": {"fullname": "mridc.utils.mridc_logging.Logger.error", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.error", "type": "function", "doc": "<p>Log 'msg % args' with severity 'ERROR'.\nTo pass exception information, use the keyword argument exc_info with\na true value, e.g.\nlogger.error(\"Houston, we have a %s\", \"major problem\", exc_info=1)</p>\n", "signature": "(self, msg, *args, mode=<LogMode.EACH: 0>, **kwargs)", "funcdef": "def"}, "mridc.utils.mridc_logging.Logger.critical": {"fullname": "mridc.utils.mridc_logging.Logger.critical", "modulename": "mridc.utils.mridc_logging", "qualname": "Logger.critical", "type": "function", "doc": "<p>Log 'msg % args' with severity 'CRITICAL'.\nTo pass exception information, use the keyword argument exc_info with a true value, e.g.\nlogger.critical(\"Houston, we have a %s\", \"major disaster\", exc_info=1)\nArgs:\n    msg: the message to log\n    <em>args: the arguments to the message\n    mode: the mode to log the message in\n    *</em>kwargs: the keyword arguments to the message</p>\n", "signature": "(self, msg, *args, mode=<LogMode.EACH: 0>, **kwargs) -> None", "funcdef": "def"}, "mridc.utils.mridc_logging.LogMode": {"fullname": "mridc.utils.mridc_logging.LogMode", "modulename": "mridc.utils.mridc_logging", "qualname": "LogMode", "type": "class", "doc": "<p>Enum for the different logging modes.</p>\n", "bases": "enum.IntEnum"}, "mridc.utils.mridc_logging.LogMode.EACH": {"fullname": "mridc.utils.mridc_logging.LogMode.EACH", "modulename": "mridc.utils.mridc_logging", "qualname": "LogMode.EACH", "type": "variable", "doc": "<p></p>\n", "default_value": " = <LogMode.EACH: 0>"}, "mridc.utils.mridc_logging.LogMode.ONCE": {"fullname": "mridc.utils.mridc_logging.LogMode.ONCE", "modulename": "mridc.utils.mridc_logging", "qualname": "LogMode.ONCE", "type": "variable", "doc": "<p></p>\n", "default_value": " = <LogMode.ONCE: 1>"}, "mridc.utils.timers": {"fullname": "mridc.utils.timers", "modulename": "mridc.utils.timers", "type": "module", "doc": "<p></p>\n"}, "mridc.utils.timers.NamedTimer": {"fullname": "mridc.utils.timers.NamedTimer", "modulename": "mridc.utils.timers", "qualname": "NamedTimer", "type": "class", "doc": "<p>A timer class that supports multiple named timers.\nA named timer can be used multiple times, in which case the average\ndt will be returned.\nA named timer cannot be started if it is already currently running.\nUse case: measuring execution of multiple code blocks.</p>\n"}, "mridc.utils.timers.NamedTimer.__init__": {"fullname": "mridc.utils.timers.NamedTimer.__init__", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.__init__", "type": "function", "doc": "<p>Args:\n    reduction (str): reduction over multiple timings of the same timer\n                     (none - returns the list instead of a scalar)\n    sync_cuda (bool): if True torch.cuda.synchronize() is called for start/stop\n    buffer_size (int): if positive, limits the number of stored measures per name</p>\n", "signature": "(self, reduction='mean', sync_cuda=False, buffer_size=-1)", "funcdef": "def"}, "mridc.utils.timers.NamedTimer.buffer_size": {"fullname": "mridc.utils.timers.NamedTimer.buffer_size", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.buffer_size", "type": "variable", "doc": "<p></p>\n"}, "mridc.utils.timers.NamedTimer.reset": {"fullname": "mridc.utils.timers.NamedTimer.reset", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.reset", "type": "function", "doc": "<p>Resents all / specific timer\nArgs:\n    name (str): timer name to reset (if None all timers are reset)</p>\n", "signature": "(self, name=None)", "funcdef": "def"}, "mridc.utils.timers.NamedTimer.start": {"fullname": "mridc.utils.timers.NamedTimer.start", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.start", "type": "function", "doc": "<p>Starts measuring a named timer.\nArgs:\n    name (str): timer name to start</p>\n", "signature": "(self, name='')", "funcdef": "def"}, "mridc.utils.timers.NamedTimer.stop": {"fullname": "mridc.utils.timers.NamedTimer.stop", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.stop", "type": "function", "doc": "<p>Stops measuring a named timer.\nArgs:\n    name (str): timer name to stop</p>\n", "signature": "(self, name='')", "funcdef": "def"}, "mridc.utils.timers.NamedTimer.active_timers": {"fullname": "mridc.utils.timers.NamedTimer.active_timers", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.active_timers", "type": "function", "doc": "<p>Return list of all active named timers</p>\n", "signature": "(self)", "funcdef": "def"}, "mridc.utils.timers.NamedTimer.get": {"fullname": "mridc.utils.timers.NamedTimer.get", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.get", "type": "function", "doc": "<p>Returns the value of a named timer\nArgs:\n    name (str): timer name to return</p>\n", "signature": "(self, name='')", "funcdef": "def"}, "mridc.utils.timers.NamedTimer.export": {"fullname": "mridc.utils.timers.NamedTimer.export", "modulename": "mridc.utils.timers", "qualname": "NamedTimer.export", "type": "function", "doc": "<p>Exports a dictionary with average/all dt per named timer</p>\n", "signature": "(self)", "funcdef": "def"}}, "docInfo": {"mridc": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.callbacks": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.callbacks.callbacks": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 18}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 6}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 10}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 10}, "mridc.collections.common.data": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.data.dataset": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.data.dataset.ConcatDataset": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 120}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 7}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 6}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 32}, "mridc.collections.common.losses": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.losses.aggregator": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 22}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 14}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.collections.common.losses.ssim": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.losses.ssim.SSIMLoss": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 6}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 23}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 22}, "mridc.collections.common.metrics": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.metrics.global_average_loss_metric": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 229}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 14}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 81}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 6}, "mridc.collections.common.parts": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.parts.fft": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.parts.fft.fft2c": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 88}, "mridc.collections.common.parts.fft.ifft2c": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 89}, "mridc.collections.common.parts.patch_utils": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.parts.ptl_overrides": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 9}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "mridc.collections.common.parts.rnn_utils": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 66}, "mridc.collections.common.parts.utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.common.parts.utils.to_tensor": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 50}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 34}, "mridc.collections.common.parts.utils.complex_mul": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 70}, "mridc.collections.common.parts.utils.complex_conj": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 55}, "mridc.collections.common.parts.utils.complex_abs": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 40}, "mridc.collections.common.parts.utils.complex_abs_sq": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 40}, "mridc.collections.common.parts.utils.rss": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 47}, "mridc.collections.common.parts.utils.rss_complex": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 50}, "mridc.collections.common.parts.utils.sense": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 61}, "mridc.collections.common.parts.utils.coil_combination": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 41}, "mridc.collections.common.parts.utils.save_reconstructions": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 49}, "mridc.collections.common.parts.utils.check_stacked_complex": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 52}, "mridc.collections.reconstruction": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.data": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.data.mri_data": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.data.mri_data.et_query": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 59}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 198}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 12}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 209}, "mridc.collections.reconstruction.data.subsample": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 34}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 77}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 177}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 170}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 77}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 77}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 17}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 140}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 15}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 61}, "mridc.collections.reconstruction.metrics": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.metrics.evaluate": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 11}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 28}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 38}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 26}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 27}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.models": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.base": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 9}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 91}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 7}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 7}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 7}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 38}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 106}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 35}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 32}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 35}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 62}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 44}, "mridc.collections.reconstruction.models.cascadenet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 45}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 33}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 44}, "mridc.collections.reconstruction.models.ccnn": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 58}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.cirim": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 49}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 109}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.conv": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.conv.conv2d": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 25}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 57}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 31}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 69}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 57}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 46}, "mridc.collections.reconstruction.models.convrecnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 30}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 65}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 38}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.crnn": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 63}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 109}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.crossdomain": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 19}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 97}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 7}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 76}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 49}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 70}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 49}, "mridc.collections.reconstruction.models.didn": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.didn.didn": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 62}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 46}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 54}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 25}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 28}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 56}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 25}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 35}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 48}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 57}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 65}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 48}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 46}, "mridc.collections.reconstruction.models.dunet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.dunet.DUNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 52}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.jointicnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 72}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 6}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 109}, "mridc.collections.reconstruction.models.kikinet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 60}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.lpd": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 49}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.multidomain": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 7}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 8}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 25}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 25}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 16}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 20}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 16}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 85}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 5}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 63}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 16}, "mridc.collections.reconstruction.models.multidomainnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 19}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.mwcnn": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 41}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 5}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 38}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 41}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 5}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 38}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 41}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 61}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 40}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 43}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 67}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 40}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 43}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 76}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 5}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 44}, "mridc.collections.reconstruction.models.primaldual": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.primaldual.pd": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 10}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 21}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 37}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 5}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 10}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 20}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 5}, "mridc.collections.reconstruction.models.recurrentvarnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 7}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 103}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 55}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 79}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 87}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 43}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 56}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 52}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 146}, "mridc.collections.reconstruction.models.rim": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.rim.conv_layers": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 8}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 13}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 32}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 8}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 55}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 15}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 26}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 18}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 30}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 29}, "mridc.collections.reconstruction.models.rim.rim_block": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 112}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 48}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 18}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 16}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 38}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 32}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 19}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 19}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 31}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 62}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 34}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 19}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 62}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 29}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 15}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 20}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 30}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 22}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 59}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 24}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 18}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 19}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 27}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 69}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 37}, "mridc.collections.reconstruction.models.rim.utils": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 56}, "mridc.collections.reconstruction.models.rvn": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 52}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.unet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.unet.UNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 48}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.unet_base": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 39}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 87}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 32}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"qualname": 6, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 32}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 25}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 30}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 29}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 36}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 23}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 43}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 55}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 36}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 24}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 36}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 20}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 36}, "mridc.collections.reconstruction.models.variablesplittingnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 30}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 10}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 65}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 65}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 45}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "mridc.collections.reconstruction.models.varnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.varnet.vn_block": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 44}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 33}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 44}, "mridc.collections.reconstruction.models.vn": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.vn.VarNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 41}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.vsnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 61}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.xpdnet": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 43}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 90}, "mridc.collections.reconstruction.models.zf": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.models.zf.ZF": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 46}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 73}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "mridc.collections.reconstruction.parts": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.parts.transforms": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 104}, "mridc.collections.reconstruction.parts.utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 128}, "mridc.collections.reconstruction.parts.utils.mask_center": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 70}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 76}, "mridc.collections.reconstruction.parts.utils.center_crop": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 69}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 78}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 87}, "mridc.constants": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.common": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.common.Typing": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 10}, "mridc.core.classes.common.Typing.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.common.Typing.input_types": {"qualname": 3, "fullname": 7, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.core.classes.common.Typing.output_types": {"qualname": 3, "fullname": 7, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.core.classes.common.FileIO": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 8}, "mridc.core.classes.common.FileIO.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.common.FileIO.save_to": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 6}, "mridc.core.classes.common.FileIO.restore_from": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 6}, "mridc.core.classes.common.FileIO.from_config_file": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 28}, "mridc.core.classes.common.FileIO.to_config_file": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 33}, "mridc.core.classes.common.Model": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "mridc.core.classes.common.Model.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.common.Model.list_available_models": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 50}, "mridc.core.classes.common.Model.get_available_model_names": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 25}, "mridc.core.classes.common.Model.from_pretrained": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 178}, "mridc.core.classes.common.PretrainedModelInfo": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.common.Serialization": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 7}, "mridc.core.classes.common.Serialization.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.common.Serialization.from_config_dict": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 8}, "mridc.core.classes.common.Serialization.to_config_dict": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 9}, "mridc.core.classes.common.is_typecheck_enabled": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 8}, "mridc.core.classes.common.typecheck": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "mridc.core.classes.common.typecheck.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 149}, "mridc.core.classes.common.typecheck.TypeState": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 37}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 8}, "mridc.core.classes.common.typecheck.disable_checks": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 7}, "mridc.core.classes.dataset": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.Dataset": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 19}, "mridc.core.classes.dataset.Dataset.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.Dataset.collate_fn": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 62}, "mridc.core.classes.dataset.DatasetConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.IterableDataset": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 20}, "mridc.core.classes.dataset.IterableDataset.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 53}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 32}, "mridc.core.classes.export": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.export.ExportFormat": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "mridc.core.classes.export.ExportFormat.ONNX": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.export.Exportable": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "mridc.core.classes.export.Exportable.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.classes.export.Exportable.get_format": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "mridc.core.classes.export.Exportable.input_module": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "mridc.core.classes.export.Exportable.output_module": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "mridc.core.classes.export.Exportable.export": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 10}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "mridc.core.classes.export.Exportable.supported_export_formats": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "mridc.core.classes.export.Exportable.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 10}, "mridc.core.classes.loss": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.loss.Loss": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 15, "doc": 10}, "mridc.core.classes.modelPT": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.modelPT.ModelPT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 10, "doc": 9}, "mridc.core.classes.modelPT.ModelPT.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 204}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 222}, "mridc.core.classes.modelPT.ModelPT.save_to": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 71}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 182}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 22}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 19}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 19}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 21}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 23}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 28}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 97}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 7}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 7}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 7}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 143}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 144}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 77}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 77}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 37}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 37}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 9}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 160}, "mridc.core.classes.modelPT.ModelPT.teardown": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 17}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 252}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 56}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 15}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 23}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "mridc.core.classes.modelPT.ModelPT.cfg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 41}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "mridc.core.classes.module": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.classes.module.NeuralModule": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 22, "doc": 13}, "mridc.core.classes.module.NeuralModule.num_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mridc.core.classes.module.NeuralModule.input_example": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 38}, "mridc.core.classes.module.NeuralModule.freeze": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "mridc.core.classes.module.NeuralModule.unfreeze": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "mridc.core.classes.module.NeuralModule.as_frozen": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 17}, "mridc.core.conf": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.base_config": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.base_config.Config": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "mridc.core.conf.base_config.Config.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 3}, "mridc.core.conf.base_config.Config.name": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.hydra_runner": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.hydra_runner.hydra_runner": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 62}, "mridc.core.conf.modelPT": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.SchedConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.SchedConfig.name": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.OptimConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.OptimConfig.name": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.OptimConfig.sched": {"qualname": 2, "fullname": 6, "annotation": 6, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.ModelConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.ModelConfig.optim": {"qualname": 2, "fullname": 6, "annotation": 6, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.HydraConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.MRIDCConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 392, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"qualname": 2, "fullname": 6, "annotation": 6, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"qualname": 2, "fullname": 6, "annotation": 6, "default_value": 224, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 129, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"qualname": 2, "fullname": 6, "annotation": 6, "default_value": 17, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 484}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 8}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 8}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 8}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 7}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 4}, "mridc.core.conf.optimizers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.OptimizerParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 26}, "mridc.core.conf.optimizers.AdamParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 130}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.betas": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.luc": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.SGDParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 26}, "mridc.core.conf.optimizers.SGDParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.SGDParams.momentum": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.SGDParams.dampening": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdadeltaParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamaxParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdagradParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdagradParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamWParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamWParams.betas": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamWParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RMSpropParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RpropParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.conf.optimizers.RpropParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RpropParams.etas": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.optimizers.get_optimizer_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.core.conf.optimizers.register_optimizer_params": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "mridc.core.conf.schedulers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SchedulerParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 30}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.StepLRParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ExponentialLRParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.schedulers.register_scheduler_params": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 50}, "mridc.core.conf.schedulers.get_scheduler_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 40}, "mridc.core.conf.trainer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 284, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.logger": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"qualname": 6, "fullname": 10, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"qualname": 6, "fullname": 10, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.precision": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"qualname": 6, "fullname": 10, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.devices": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.connectors": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.connectors.save_restore_connector": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 77}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 169}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 237}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 229}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"qualname": 4, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"qualname": 4, "fullname": 10, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "mridc.core.neural_types": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKindAbstract": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 51}, "mridc.core.neural_types.axes.AxisKind": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 48}, "mridc.core.neural_types.axes.AxisKind.Batch": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Time": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Channel": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Width": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Height": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Any": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 11}, "mridc.core.neural_types.axes.AxisKind.from_str": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "mridc.core.neural_types.axes.AxisType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 75}, "mridc.core.neural_types.axes.AxisType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 19}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.ElementType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "mridc.core.neural_types.elements.ElementType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"qualname": 3, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 61}, "mridc.core.neural_types.elements.ElementType.fields": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 64}, "mridc.core.neural_types.elements.ElementType.compare": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 13}, "mridc.core.neural_types.elements.VoidType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 31}, "mridc.core.neural_types.elements.VoidType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.VoidType.compare": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 9}, "mridc.core.neural_types.elements.ChannelType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.core.neural_types.elements.ChannelType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.MRISignal": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 40}, "mridc.core.neural_types.elements.MRISignal.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "mridc.core.neural_types.elements.RecurrentsType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.LabelsType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "mridc.core.neural_types.elements.LabelsType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.LogprobsType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.ProbsType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 14}, "mridc.core.neural_types.elements.ProbsType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.LossType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "mridc.core.neural_types.elements.LossType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.RegressionValuesType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.CategoricalValuesType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.PredictionsType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.LengthsType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.neural_types.elements.LengthsType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.MaskType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.core.neural_types.elements.MaskType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.Target": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "mridc.core.neural_types.elements.Target.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.ReconstructionTarget": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 21}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.ImageFeatureValue": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 14}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.Index": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "mridc.core.neural_types.elements.Index.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.ImageValue": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "mridc.core.neural_types.elements.ImageValue.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.NormalizedImageValue": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 18}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.StringLabel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 20}, "mridc.core.neural_types.elements.StringLabel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.StringType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.neural_types.elements.StringType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.Length": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "mridc.core.neural_types.elements.Length.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.IntType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.neural_types.elements.IntType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.FloatType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.neural_types.elements.FloatType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.LogDeterminantType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.core.neural_types.neural_type": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.neural_types.neural_type.NeuralType": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 138}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 30}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 18}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 10}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 14}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 3}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 3}, "mridc.core.optim": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.adafactor": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.adafactor.Adafactor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 227}, "mridc.core.optim.adafactor.Adafactor.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.core.optim.adafactor.Adafactor.step": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 26}, "mridc.core.optim.lr_scheduler": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 54}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 57}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 82}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 86}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 7}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 53}, "mridc.core.optim.lr_scheduler.register_scheduler": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 61}, "mridc.core.optim.lr_scheduler.get_scheduler": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 39}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 238}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 11}, "mridc.core.optim.novograd": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.novograd.Novograd": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 121}, "mridc.core.optim.novograd.Novograd.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "mridc.core.optim.novograd.Novograd.step": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 23}, "mridc.core.optim.optimizer_with_master_params": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 6}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 26}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 89}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 56}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"qualname": 7, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 6}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 6}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 7}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "mridc.core.optim.optimizers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 42, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.optim.optimizers.get_optimizer": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 39}, "mridc.core.optim.optimizers.register_optimizer": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 58}, "mridc.core.optim.optimizers.parse_optimizer_args": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 104}, "mridc.core.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.utils.numba_utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 50}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 64}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 12}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 35}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 49}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 30}, "mridc.package_info": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.app_state": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.app_state.ModelMetadataRegistry": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.app_state.AppState": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "mridc.utils.app_state.AppState.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.device_id": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.app_state.AppState.world_size": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.model_parallel_size": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mridc.utils.app_state.AppState.data_parallel_size": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mridc.utils.app_state.AppState.local_rank": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.app_state.AppState.global_rank": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.app_state.AppState.model_parallel_rank": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.utils.app_state.AppState.model_parallel_group": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.utils.app_state.AppState.data_parallel_rank": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.utils.app_state.AppState.data_parallel_group": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.utils.app_state.AppState.random_seed": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.app_state.AppState.log_dir": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "mridc.utils.app_state.AppState.exp_dir": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "mridc.utils.app_state.AppState.name": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.checkpoint_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.version": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.model_restore_path": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "mridc.utils.app_state.AppState.register_model_guid": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 15}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 11}, "mridc.utils.app_state.AppState.is_model_being_restored": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mridc.utils.app_state.AppState.mridc_file_folder": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "mridc.utils.arguments": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.arguments.add_optimizer_args": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 96}, "mridc.utils.arguments.add_scheduler_args": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 31}, "mridc.utils.arguments.add_recon_args": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 32}, "mridc.utils.cloud": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.cloud.maybe_download_from_cloud": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 106}, "mridc.utils.config_utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.config_utils.update_model_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 216}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 246}, "mridc.utils.decorators": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.decorators.deprecated": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.decorators.deprecated.deprecated": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 69}, "mridc.utils.decorators.experimental": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.decorators.experimental.experimental": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 18}, "mridc.utils.decorators.port_docs": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.decorators.port_docs.add_port_docs": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "mridc.utils.env_var_parsing": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.env_var_parsing.get_env": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 142}, "mridc.utils.env_var_parsing.get_envbool": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envint": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envfloat": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envdecimal": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envdate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envdatetime": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envlist": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.get_envdict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "mridc.utils.env_var_parsing.CoercionError": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 12}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 3}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "mridc.utils.exceptions": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exceptions.MRIDCBaseException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 15}, "mridc.utils.exceptions.LightningNotInstalledException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "mridc.utils.exceptions.CheckInstall": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "mridc.utils.exceptions.CheckInstall.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 3}, "mridc.utils.exp_manager": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.NotFoundError": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 13}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 13}, "mridc.utils.exp_manager.CallbackParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "mridc.utils.exp_manager.CallbackParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.filepath": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.filename": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.monitor": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.verbose": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.save_last": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.mode": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.prefix": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.postfix": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"qualname": 6, "fullname": 10, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.StepTimingParams": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 157, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"qualname": 5, "fullname": 9, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"qualname": 4, "fullname": 8, "annotation": 3, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"qualname": 4, "fullname": 8, "annotation": 3, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"qualname": 4, "fullname": 8, "annotation": 6, "default_value": 53, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"qualname": 4, "fullname": 8, "annotation": 6, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.TimingCallback": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 8}, "mridc.utils.exp_manager.TimingCallback.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 4}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 10}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 10}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 8}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 10}, "mridc.utils.exp_manager.exp_manager": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 722}, "mridc.utils.exp_manager.error_checks": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 72}, "mridc.utils.exp_manager.check_resume": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 96}, "mridc.utils.exp_manager.check_explicit_log_dir": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 51}, "mridc.utils.exp_manager.get_log_dir": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 148}, "mridc.utils.exp_manager.get_git_hash": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 33}, "mridc.utils.exp_manager.get_git_diff": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 33}, "mridc.utils.exp_manager.LoggerList": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 20}, "mridc.utils.exp_manager.LoggerList.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "mridc.utils.exp_manager.LoggerList.name": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "mridc.utils.exp_manager.LoggerList.version": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "mridc.utils.exp_manager.configure_loggers": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 24}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 50}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 40}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 30}, "mridc.utils.exp_manager.configure_checkpointing": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 26}, "mridc.utils.exp_manager.check_slurm": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 61}, "mridc.utils.exp_manager.StatelessTimer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 11}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 12}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 12}, "mridc.utils.export_utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.export_utils.expand_Conv1D": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 45}, "mridc.utils.export_utils.expand_BatchNorm1d": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 44}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 45}, "mridc.utils.export_utils.simple_replace": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 46}, "mridc.utils.export_utils.swap_modules": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 48}, "mridc.utils.export_utils.replace_modules": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 59}, "mridc.utils.export_utils.replace_for_export": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 52}, "mridc.utils.formaters": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.base": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 23, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 26, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.code_to_chars": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 29}, "mridc.utils.formaters.colors.set_title": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 21}, "mridc.utils.formaters.colors.clear_screen": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 21}, "mridc.utils.formaters.colors.clear_line": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 21}, "mridc.utils.formaters.colors.AnsiCodes": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiCursor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 26}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 26}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 26}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 26}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 26}, "mridc.utils.formaters.colors.AnsiFore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.RED": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.RED": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiStyle": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.Fore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.Back": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.Style": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.colors.Cursor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.formaters.utils.check_color_support": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 25}, "mridc.utils.formaters.utils.to_unicode": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 37}, "mridc.utils.get_rank": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.get_rank.is_global_rank_zero": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 18}, "mridc.utils.lightning_logger_patch": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.lightning_logger_patch.HANDLERS": {"qualname": 1, "fullname": 6, "annotation": 3, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 43}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 67}, "mridc.utils.metaclasses": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.metaclasses.Singleton": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 21}, "mridc.utils.model_utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.model_utils.ArtifactPathType": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 48}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.model_utils.ArtifactItem": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mridc.utils.model_utils.ArtifactItem.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 465}, "mridc.utils.model_utils.parse_dataset_as_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 50}, "mridc.utils.model_utils.unique_names_check": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 32}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 185}, "mridc.utils.model_utils.wrap_training_step": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 54}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 40}, "mridc.utils.model_utils.maybe_update_config_version": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 87}, "mridc.utils.model_utils.import_class_by_path": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 73}, "mridc.utils.model_utils.check_lib_version": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 154}, "mridc.utils.model_utils.resolve_cache_dir": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 60}, "mridc.utils.mridc_logging": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "mridc.utils.mridc_logging.Logger.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 10}, "mridc.utils.mridc_logging.Logger.NOTSET": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger.DEBUG": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger.INFO": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger.WARNING": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger.ERROR": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 50}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 8}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 41}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 44}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 4}, "mridc.utils.mridc_logging.Logger.setLevel": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 12}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 4}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 14}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 31}, "mridc.utils.mridc_logging.Logger.debug": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 38}, "mridc.utils.mridc_logging.Logger.info": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 38}, "mridc.utils.mridc_logging.Logger.warning": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 40}, "mridc.utils.mridc_logging.Logger.error": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 38}, "mridc.utils.mridc_logging.Logger.critical": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 66}, "mridc.utils.mridc_logging.LogMode": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "mridc.utils.mridc_logging.LogMode.EACH": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.mridc_logging.LogMode.ONCE": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.timers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.timers.NamedTimer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 48}, "mridc.utils.timers.NamedTimer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "mridc.utils.timers.NamedTimer.buffer_size": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mridc.utils.timers.NamedTimer.reset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 22}, "mridc.utils.timers.NamedTimer.start": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "mridc.utils.timers.NamedTimer.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "mridc.utils.timers.NamedTimer.active_timers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "mridc.utils.timers.NamedTimer.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 17}, "mridc.utils.timers.NamedTimer.export": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}}, "length": 1246, "save": true}, "index": {"qualname": {"root": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 189, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 32, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.LogMode": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 1}}, "b": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}}, "df": 6}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {"mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 19}, "u": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 191, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}}, "df": 8}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}}, "df": 3}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "f": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}}, "df": 3}}, "s": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 6}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"mridc.utils.app_state.AppState.device_id": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 16, "n": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}}, "df": 4}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}}, "df": 1}}}}}}}, "t": {"5": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}}, "df": 62}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 23, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}}, "df": 1, "k": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 17}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.set_title": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}}, "df": 12, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 13}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}}, "df": 3, "d": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.env_var_parsing.get_envbool": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envint": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_envdate": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envdict": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envlist": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1, "a": {"docs": {"mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}}, "df": 6}}}}, "x": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 16, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.decorators.experimental.experimental": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}}, "df": 20}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}}, "df": 5}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 14, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 11}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"mridc.utils.timers.NamedTimer.stop": {"tf": 1}}, "df": 1}}, "r": {"docs": {"mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.Style": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {"mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}}, "df": 8, "e": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 2}}, "t": {"docs": {"mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}}, "df": 10, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 9}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}}, "df": 4}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}}, "df": 14, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.formaters.utils.check_color_support": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}}, "df": 3}}, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}}, "df": 15, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}}, "df": 6}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}}, "df": 3}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.exp_manager.check_slurm": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}}, "df": 6}}}}}}}}}}, "j": {"docs": {"mridc.collections.common.parts.utils.complex_conj": {"tf": 1}}, "df": 1}, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}}, "df": 3}}}}}, "docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}}, "df": 7}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}}, "df": 8}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}}, "df": 8}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 13, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 4}}, "t": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.utils.check_color_support": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 17, "s": {"docs": {"mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "p": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}}, "df": 18}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}}, "df": 12}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}}, "df": 2}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.Cursor": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 32, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"1": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 4}}}}}}}}}}, "2": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 4}}}}}}}}}}, "docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {"mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 5}}, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "d": {"docs": {"mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}}, "df": 5, "d": {"docs": {"mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}}, "df": 3}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}}, "df": 4}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}}, "df": 1}}, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 7}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}}, "df": 18}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 18}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}}, "df": 5}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}}, "df": 26}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 3}}}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}}, "df": 5}}}}}}}}, "w": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}}, "df": 6}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}}, "df": 5}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}}, "df": 6}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 9}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {"mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}}, "df": 3}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}}, "df": 13, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}}, "df": 67}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"mridc.utils.formaters.colors.Fore": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 15}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}}, "df": 1}}}, "p": {"1": {"6": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 7}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 15}}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}}, "df": 6, "l": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 26, "s": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}}, "df": 32}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}}, "df": 10}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}}, "df": 10}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 3}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}}, "df": 5, "p": {"docs": {"mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.NotFoundError": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 10, "s": {"docs": {"mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 4}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 9}}}}}}}}, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 3}}}}}}}}}}, "docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}}, "df": 8}}}}}, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {"mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 7}, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}}, "df": 2}}, "l": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 8}}, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}}, "df": 12, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}}, "df": 7}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 13}}}}}}, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}}, "df": 9}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {"mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.app_state.AppState.device_id": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}}, "df": 1}, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 1}}, "docs": {"mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.Back": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 13}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}}, "df": 3}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}}, "df": 5}}}}}}}}}}, "x": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 4}}}}}}}}, "z": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}}, "df": 2}}}}}}}}, "fullname": {"root": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 189, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.data.mri_data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc": {"tf": 1}, "mridc.collections": {"tf": 1}, "mridc.collections.common": {"tf": 1}, "mridc.collections.common.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.data": {"tf": 1}, "mridc.collections.common.data.dataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses": {"tf": 1}, "mridc.collections.common.losses.aggregator": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.common.parts": {"tf": 1}, "mridc.collections.common.parts.fft": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.patch_utils": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction": {"tf": 1}, "mridc.collections.reconstruction.data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models": {"tf": 1}, "mridc.collections.reconstruction.models.base": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.conv": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.collections.reconstruction.parts": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.constants": {"tf": 1}, "mridc.core": {"tf": 1}, "mridc.core.classes": {"tf": 1}, "mridc.core.classes.common": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.classes.dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.loss": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.classes.module": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf": {"tf": 1}, "mridc.core.conf.base_config": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.dataloader": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.hydra_runner": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.conf.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.core.connectors": {"tf": 1}, "mridc.core.connectors.save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types": {"tf": 1}, "mridc.core.neural_types.axes": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.comparison": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}, "mridc.core.neural_types.elements": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim": {"tf": 1}, "mridc.core.optim.adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils": {"tf": 1}, "mridc.core.utils.numba_utils": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.package_info": {"tf": 1}, "mridc.utils": {"tf": 1}, "mridc.utils.app_state": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1.4142135623730951}, "mridc.utils.arguments": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.cloud": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.decorators": {"tf": 1}, "mridc.utils.decorators.deprecated": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.experimental": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.decorators.port_docs": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.env_var_parsing": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.export_utils": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters": {"tf": 1}, "mridc.utils.formaters.base": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.colors": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.formaters.colors.Fore": {"tf": 1}, "mridc.utils.formaters.colors.Back": {"tf": 1}, "mridc.utils.formaters.colors.Style": {"tf": 1}, "mridc.utils.formaters.colors.Cursor": {"tf": 1}, "mridc.utils.formaters.utils": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.get_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.lightning_logger_patch": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.metaclasses": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.LogMode": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1.4142135623730951}, "mridc.utils.timers": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 1246, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 7}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.collections.common.metrics": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.reconstruction.metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}}, "df": 19}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.metaclasses": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1.4142135623730951}}, "df": 20, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.multidomainnet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 21, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 15}}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 81}}}}}, "x": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}}, "df": 6, "l": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.model_utils": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 42, "s": {"docs": {"mridc.collections.reconstruction.models": {"tf": 1}, "mridc.collections.reconstruction.models.base": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.conv": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 293}, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 65}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.module": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.7320508075688772}}, "df": 19}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}}, "df": 10}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections": {"tf": 1}, "mridc.collections.common": {"tf": 1}, "mridc.collections.common.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.data": {"tf": 1}, "mridc.collections.common.data.dataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses": {"tf": 1}, "mridc.collections.common.losses.aggregator": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.common.parts": {"tf": 1}, "mridc.collections.common.parts.fft": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.patch_utils": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction": {"tf": 1}, "mridc.collections.reconstruction.data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models": {"tf": 1}, "mridc.collections.reconstruction.models.base": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.conv": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.collections.reconstruction.parts": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 398}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.utils.check_color_support": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.utils.formaters.colors": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.formaters.colors.Fore": {"tf": 1}, "mridc.utils.formaters.colors.Back": {"tf": 1}, "mridc.utils.formaters.colors.Style": {"tf": 1}, "mridc.utils.formaters.colors.Cursor": {"tf": 1}}, "df": 59}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common": {"tf": 1}, "mridc.collections.common.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.data": {"tf": 1}, "mridc.collections.common.data.dataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses": {"tf": 1}, "mridc.collections.common.losses.aggregator": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.common.parts": {"tf": 1}, "mridc.collections.common.parts.fft": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.patch_utils": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.core.classes.common": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}}, "df": 86}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.comparison": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}}, "df": 11}}}}, "e": {"docs": {"mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 4}}, "t": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}}, "df": 6}}}}}}}}}}, "j": {"docs": {"mridc.collections.common.parts.utils.complex_conj": {"tf": 1}}, "df": 1}, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1.4142135623730951}}, "df": 4, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}}, "df": 4}}}}, "docs": {"mridc.collections.reconstruction.models.conv": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}}, "df": 23, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.convrecnet": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}}, "df": 10}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}}, "df": 3}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}}, "df": 7}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}}, "df": 8}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}}, "df": 8}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.constants": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"mridc.core.conf": {"tf": 1}, "mridc.core.conf.base_config": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.dataloader": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.hydra_runner": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.conf.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}}, "df": 256, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.conf.base_config": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1.4142135623730951}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.base_config.Config.name": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.utils.config_utils": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 16, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}}, "df": 10, "s": {"docs": {"mridc.core.connectors": {"tf": 1}, "mridc.core.connectors.save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}}, "df": 10}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"mridc.core": {"tf": 1}, "mridc.core.classes": {"tf": 1}, "mridc.core.classes.common": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.classes.dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.loss": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.classes.module": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf": {"tf": 1}, "mridc.core.conf.base_config": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.dataloader": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.hydra_runner": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.conf.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.core.connectors": {"tf": 1}, "mridc.core.connectors.save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types": {"tf": 1}, "mridc.core.neural_types.axes": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.comparison": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}, "mridc.core.neural_types.elements": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim": {"tf": 1}, "mridc.core.optim.adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils": {"tf": 1}, "mridc.core.utils.numba_utils": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 556, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.common.callbacks": {"tf": 1}, "mridc.collections.common.callbacks.callbacks": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}}, "df": 7}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}}, "df": 18}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cascadenet": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 17, "s": {"docs": {"mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 34}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.cirim": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1.4142135623730951}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}}, "df": 11, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "p": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes": {"tf": 1}, "mridc.core.classes.common": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.classes.dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.loss": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.classes.module": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 103}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.cloud": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}}, "df": 12}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}}, "df": 2}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.Cursor": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.lightning_logger_patch": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 34, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging": {"tf": 1}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1}}, "df": 30}}}}, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.LogMode": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.core.classes.loss": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses": {"tf": 1}, "mridc.collections.common.losses.aggregator": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}}, "df": 11}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.lpd": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}}, "df": 11}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}}, "df": 6}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.lightning_logger_patch": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 1}}, "b": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}, "r": {"docs": {"mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.optim.lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 49}, "u": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.Model.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 191, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}}, "df": 8}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}}, "df": 3}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.package_info": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "f": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}}, "df": 3}}, "s": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 6}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"mridc.utils.app_state.AppState.device_id": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 16, "n": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.ptl_overrides": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.optim": {"tf": 1}, "mridc.core.optim.adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}}, "df": 75, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 27, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.conf.optimizers": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.optimizers": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}}, "df": 66}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}}, "df": 4}}}}}}}}}}}, "t": {"5": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}}, "df": 65, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}}, "df": 62}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.parts.transforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.neural_type": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 16, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.neural_types": {"tf": 1}, "mridc.core.neural_types.axes": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.comparison": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}, "mridc.core.neural_types.elements": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 109, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.__init__": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 23, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}}, "df": 1, "k": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 17}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.timers": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.set_title": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}}, "df": 12, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 13}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}}, "df": 3, "d": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"mridc.utils.env_var_parsing": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}}, "df": 14, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.env_var_parsing.get_envbool": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envint": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_envdate": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envdict": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.env_var_parsing.get_envlist": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1, "a": {"docs": {"mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1.4142135623730951}}, "df": 11}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}}, "df": 6}}}}, "x": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 16, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 82, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.utils.export_utils": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 23, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.decorators.experimental": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}}, "df": 20}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exceptions": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.elements": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}}, "df": 66}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}}, "df": 5}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.utils.app_state": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}}, "df": 36, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 14, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 11}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"mridc.utils.timers.NamedTimer.stop": {"tf": 1}}, "df": 1}}, "r": {"docs": {"mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.Style": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.losses.ssim": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {"mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}}, "df": 8, "e": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 2}}, "t": {"docs": {"mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}}, "df": 10, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 9}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}}, "df": 4}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.connectors.save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}}, "df": 22, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 19}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.formaters.utils.check_color_support": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}}, "df": 3}}, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}}, "df": 15, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}}, "df": 39, "s": {"docs": {"mridc.core.conf.schedulers": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}}, "df": 80}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}}, "df": 6}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}}, "df": 3}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.exp_manager.check_slurm": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.common.data": {"tf": 1}, "mridc.collections.common.data.dataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.reconstruction.data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}}, "df": 46, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 24, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}}, "df": 7}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.conf.dataloader": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 19, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}}, "df": 13}}}}}}, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.7320508075688772}}, "df": 17}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 8}}, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.dunet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.decorators": {"tf": 1}, "mridc.utils.decorators.deprecated": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.experimental": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.decorators.port_docs": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 7}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {"mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.app_state.AppState.device_id": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.decorators.port_docs": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.get_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 34, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"1": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 4}}}}}}}}}}, "2": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 4}}}}}}}}}}, "docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1.4142135623730951}}, "df": 4}}, "docs": {}, "df": 0}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {"mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.get_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1.4142135623730951}}, "df": 6}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 5}}, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction": {"tf": 1}, "mridc.collections.reconstruction.data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models": {"tf": 1}, "mridc.collections.reconstruction.models.base": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.conv": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.collections.reconstruction.parts": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 342, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}}, "df": 15, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "d": {"docs": {"mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}}, "df": 13, "d": {"docs": {"mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}}, "df": 3}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.rnn_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 36}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.rim": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 52, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.rvn": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.hydra_runner": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}}, "df": 4}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.losses.aggregator": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 3}}}}}}}, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}}, "df": 1}}, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 7}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}}, "df": 18}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 18}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}}, "df": 5}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.app_state": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}}, "df": 30, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}}, "df": 26}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 3}}}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.arguments": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}}, "df": 5}}}}}}}}, "w": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}}, "df": 6}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}}, "df": 5}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}}, "df": 6}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}, "d": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 9}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {"mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}}, "df": 3}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.axes": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}}, "df": 13, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}}, "df": 67}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters": {"tf": 1}, "mridc.utils.formaters.base": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.colors": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.formaters.colors.Fore": {"tf": 1}, "mridc.utils.formaters.colors.Back": {"tf": 1}, "mridc.utils.formaters.colors.Style": {"tf": 1}, "mridc.utils.formaters.colors.Cursor": {"tf": 1}, "mridc.utils.formaters.utils": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 68}}}}}}, "e": {"docs": {"mridc.utils.formaters.colors.Fore": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}}, "df": 1}}, "docs": {"mridc.collections.common.parts.fft": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 15}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}}, "df": 1}}}, "p": {"1": {"6": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.patch_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.parts.utils": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.utils": {"tf": 1}, "mridc.core.utils.numba_utils": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1.4142135623730951}, "mridc.utils": {"tf": 1}, "mridc.utils.app_state": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.arguments": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.cloud": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators": {"tf": 1}, "mridc.utils.decorators.deprecated": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.experimental": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.decorators.port_docs": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.env_var_parsing": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.export_utils": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}, "mridc.utils.formaters": {"tf": 1}, "mridc.utils.formaters.base": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.colors": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.formaters.colors.Fore": {"tf": 1}, "mridc.utils.formaters.colors.Back": {"tf": 1}, "mridc.utils.formaters.colors.Style": {"tf": 1}, "mridc.utils.formaters.colors.Cursor": {"tf": 1}, "mridc.utils.formaters.utils": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1.4142135623730951}, "mridc.utils.get_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.lightning_logger_patch": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.metaclasses": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.unique_names_check": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging": {"tf": 1}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1}, "mridc.utils.timers": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 322}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}}, "df": 24}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.common.parts": {"tf": 1}, "mridc.collections.common.parts.fft": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.patch_utils": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.parts": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 34}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 27}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.env_var_parsing": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}}, "df": 14}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.parts.patch_utils": {"tf": 1}, "mridc.utils.lightning_logger_patch": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {"mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 7}}, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}}, "df": 4}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.package_info": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.ptl_overrides": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 3}}}}}}}}}}, "docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.decorators.port_docs": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.primaldual": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}}, "df": 9}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}}, "df": 2}}, "l": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}}, "df": 10}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 3}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 23}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}}, "df": 5, "p": {"docs": {"mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.utils.numba_utils": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1.4142135623730951}}, "df": 7}}}}, "o": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1.4142135623730951}}, "df": 4, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.NotFoundError": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 10, "s": {"docs": {"mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 4}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 9}}}}}}}}, "n": {"docs": {"mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types": {"tf": 1}, "mridc.core.neural_types.axes": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.comparison": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}, "mridc.core.neural_types.elements": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1.4142135623730951}}, "df": 105, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.kikinet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.core.conf.base_config": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.utils.formaters.base": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 52, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}}, "df": 1}, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 1}}, "docs": {"mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.Back": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 56}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 13}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"mridc.utils.env_var_parsing": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.varnet": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}}, "df": 16, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}}, "df": 5}}}}}}}}}, "n": {"docs": {"mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}}, "df": 10}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}}, "df": 3}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.jointicnet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}}, "x": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.xpdnet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.hydra_runner": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 4}}}}}}}}, "z": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.zf": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.4142135623730951}}, "df": 6}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}}, "df": 2}}}}}}}}, "annotation": {"root": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 223, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 8}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}}, "df": 10}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 21}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}}, "df": 12}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}}, "df": 13}}}}}}}}}, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 11}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {"mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.output_types": {"tf": 1.4142135623730951}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}}, "df": 5}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}}, "df": 21}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}}, "df": 34}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}}, "df": 52}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1}}, "df": 17}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}}, "default_value": {"root": {"0": {"0": {"0": {"1": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "5": {"docs": {"mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}}, "df": 1}, "6": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}}, "df": 2}, "8": {"docs": {"mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}}, "df": 7}, "docs": {"mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 3.1622776601683795}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}}, "df": 56}, "1": {"0": {"0": {"0": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}}, "df": 2}, "docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}}, "df": 3}, "1": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}}, "df": 1}, "3": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}}, "df": 1}, "4": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}}, "df": 1}, "6": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}}, "df": 1}, "7": {"docs": {"mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}}, "df": 1}, "docs": {"mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}}, "df": 3}, "docs": {"mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 3.605551275463989}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}}, "df": 31, "e": {"docs": {"mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}}, "df": 11}, "s": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}, "2": {"0": {"0": {"0": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}}, "df": 1}, "docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}}, "df": 4}, "3": {"0": {"docs": {"mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}}, "df": 2}, "1": {"docs": {"mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}}, "df": 4}, "3": {"docs": {"mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}}, "df": 1}, "4": {"docs": {"mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}}, "df": 1}, "6": {"docs": {"mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}}, "df": 1}, "7": {"docs": {"mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}}, "df": 1}, "9": {"docs": {"mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}}, "df": 1}, "docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3}, "4": {"0": {"docs": {"mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}}, "df": 2}, "1": {"docs": {"mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}}, "df": 1}, "3": {"docs": {"mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}}, "df": 1}, "4": {"docs": {"mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}}, "df": 1}, "6": {"docs": {"mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}}, "df": 1}, "7": {"docs": {"mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}}, "df": 1}, "9": {"docs": {"mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}}, "df": 3}, "docs": {"mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1}}, "df": 1}, "8": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}}, "df": 1}, "9": {"0": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}}, "df": 1}, "1": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}}, "df": 1}, "3": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}}, "df": 1}, "4": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}}, "df": 2}, "6": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}}, "df": 1}, "7": {"docs": {"mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}}, "df": 1}, "8": {"docs": {"mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1}}, "df": 1}, "9": {"9": {"docs": {"mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}}, "df": 2}, "docs": {"mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}}, "df": 1}, "docs": {"mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}}, "df": 5}, "docs": {"mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1.7320508075688772}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1.7320508075688772}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 3}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 5.656854249492381}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 2.6457513110645907}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 2.6457513110645907}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1}, "mridc.utils.formaters.colors.Fore": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Back": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Style": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Cursor": {"tf": 1.7320508075688772}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1.7320508075688772}}, "df": 290, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3, "o": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1}, "mridc.core.conf.base_config.Config.name": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 3.872983346207417}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 3.605551275463989}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1}}, "df": 57}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 3.7416573867739413}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 2.8284271247461903}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 39}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 2.6457513110645907}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1}}, "df": 18}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 2, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}}, "df": 2, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.7320508075688772}}, "df": 1}}}}, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 4}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2.23606797749979}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1.4142135623730951}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}}, "df": 2}}}}, "l": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2.23606797749979}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.7320508075688772}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1, "w": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 2}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 2.23606797749979}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2.23606797749979}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 2.449489742783178}}, "df": 3}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1}}, "df": 1}}, "[": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 2.449489742783178}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1}}, "df": 1}}}}}, "signature": {"root": {"0": {"0": {"0": {"1": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "1": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 3}, "2": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 3}, "3": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}}, "df": 2}, "6": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}}, "df": 2}, "8": {"docs": {"mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 3.1622776601683795}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 2}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 2.23606797749979}}, "df": 65}, "1": {"0": {"0": {"0": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3}, "docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}, "docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}}, "df": 3}, "2": {"8": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}}, "df": 2}, "docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 3.872983346207417}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.4641016151377544}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 62, "e": {"docs": {"mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.4142135623730951}}, "df": 13}, "d": {"docs": {"mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 1}}, "2": {"0": {"0": {"0": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 12, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 4}}, "3": {"0": {"docs": {"mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 4}, "docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 5}, "4": {"2": {"9": {"4": {"9": {"6": {"7": {"2": {"9": {"6": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}}, "df": 4}, "5": {"0": {"docs": {"mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}, "docs": {"mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}}, "df": 1}, "6": {"4": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 1}, "docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}, "7": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1}, "8": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 5}, "9": {"5": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 2}, "8": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 2}, "9": {"9": {"docs": {"mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}}, "df": 2}, "docs": {"mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}}, "df": 1}, "docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}}, "df": 6}, "docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.sense": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 2.449489742783178}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.forward": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1.4142135623730951}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 3.3166247903554}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1.4142135623730951}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.__init__": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.decorators.experimental.experimental": {"tf": 1.4142135623730951}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.set_title": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.clear_line": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1.4142135623730951}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.unique_names_check": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.wrap_training_step": {"tf": 2}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 2}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 2}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 2}, "mridc.utils.mridc_logging.Logger.info": {"tf": 2}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 2}, "mridc.utils.mridc_logging.Logger.error": {"tf": 2}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 2}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.start": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.get": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.export": {"tf": 1.4142135623730951}}, "df": 565, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 372}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 25}}}}}}}, "e": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 5}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 3}}, "t": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3}, "s": {"docs": {"mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.6457513110645907}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.7320508075688772}}, "df": 14, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.7320508075688772}}, "df": 73, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 28}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}, "d": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 31, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}}, "df": 1}}, "d": {"docs": {"mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1.4142135623730951}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 2}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 2}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.error_checks": {"tf": 2}, "mridc.utils.exp_manager.check_resume": {"tf": 2}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 2}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2}, "mridc.utils.exp_manager.configure_loggers": {"tf": 2}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 2}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 47, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 3.3166247903554}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 33}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.sense": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 2}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 86, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 27, "s": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 2}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "o": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 7, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.sense": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 104}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 20}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.set_title": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 14, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}}, "df": 24, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"2": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}}, "df": 2}}}}}, "docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 29, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 5}, "k": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 11}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 27}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 2.8284271247461903}, "mridc.utils.export_utils.swap_modules": {"tf": 2}, "mridc.utils.export_utils.replace_modules": {"tf": 2.8284271247461903}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}}, "df": 32, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 2}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 2}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 16}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 13, "l": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 22, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 8}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 11, "s": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 32}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.7320508075688772}}, "df": 40, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 29, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 28, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 29}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 5}}}, "d": {"docs": {"mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 33, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}}, "df": 1}}, "m": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 23}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}}, "df": 12, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 9}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 2}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}}, "df": 36}}}}}}}}, "r": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}}, "df": 5}, "o": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}}, "df": 2}}}, "v": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}}, "df": 12}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 10}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "d": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 2}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 31}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 3}}}, "b": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}}, "df": 9}}, "w": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 1}}, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 10, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}}, "df": 5}}}, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 36}}}, "r": {"docs": {"mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 39, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.export": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.7416573867739413}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 58}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1.4142135623730951}}, "df": 20, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 1}}, "docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 2, "t": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "a": {"1": {"docs": {"mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 4}}}}, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}, "n": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}}, "df": 17}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "f": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}}, "df": 5}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}}, "df": 1}, "n": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}}, "df": 15, "o": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 8, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 2}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 5.385164807134504}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.872983346207417}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.7320508075688772}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 3.605551275463989}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 109, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 16}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1.4142135623730951}}, "df": 25, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 2}}, "df": 8}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 2}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 33, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 2}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 2}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 2}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1.7320508075688772}}, "df": 6, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "x": {"docs": {"mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}}, "df": 21, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.3166247903554}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 70, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1}}, "df": 28, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1.4142135623730951}}, "df": 18}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}}, "df": 11, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "f": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 3}}, "w": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 12, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 2}, "r": {"docs": {"mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1.4142135623730951}}, "df": 16}}}}}}, "k": {"1": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1}, "docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 42}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}}, "df": 15}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}}, "df": 2, "d": {"docs": {"mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 32, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.4142135623730951}}, "df": 10}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 2}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 2}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 40}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.export": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 4.69041575982343}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.4641016151377544}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1.7320508075688772}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 2.8284271247461903}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 57}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 8, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"3": {"2": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "x": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 43, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 22, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {"mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 18}}}, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 2}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}}, "df": 1}}, "docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 11, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}}, "df": 5}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 2}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 29, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}}, "df": 5}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}}, "df": 17}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 2}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 28}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.7320508075688772}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}}, "df": 17}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 9}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 14}}}}}}}}, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}}, "df": 20, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 9}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.6457513110645907}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 2}}, "df": 11}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 13}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 2}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.4142135623730951}}, "df": 27}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 12}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 2}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.449489742783178}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 2}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 2.8284271247461903}}, "df": 3}}}}}}}}}, "m": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 2}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 19, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}}, "df": 2}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 28}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}}, "df": 5}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 11}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 3.7416573867739413}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 16}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 12}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 7}}, "p": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 17}}}}}, "x": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 8}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 12}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1}}, "df": 2}}}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}}, "df": 7}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1.4142135623730951}, "mridc.core.classes.loss.Loss": {"tf": 1.4142135623730951}}, "df": 2}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.PredictionsType": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}}, "df": 4}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule": {"tf": 1.7320508075688772}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 14}}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.loss.Loss": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 17, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 5}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 54, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.StatelessTimer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 5}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 22, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule": {"tf": 1.4142135623730951}}, "df": 44, "s": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 45}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 14}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 5}}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 45}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType": {"tf": 1.4142135623730951}}, "df": 23}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}}, "df": 3}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.Length": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.mridc_logging.LogMode": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.StringLabel": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1.4142135623730951}, "mridc.core.classes.export.ExportFormat": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.4142135623730951}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}}, "df": 19}}}}}}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}}, "df": 6}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"0": {"1": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 2}, "2": {"6": {"2": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"2": {"3": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"5": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"2": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 1}, "2": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}, "3": {"0": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "4": {"2": {"3": {"5": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}}, "df": 1}, "7": {"0": {"7": {"1": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"9": {"0": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}}, "df": 1}, "9": {"6": {"3": {"9": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2.23606797749979}, "mridc.core.optim.novograd.Novograd": {"tf": 1.7320508075688772}, "mridc.utils.arguments.add_optimizer_args": {"tf": 2}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 18}, "1": {"0": {"0": {"2": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 2}}}}}, "7": {"docs": {}, "df": 0, "/": {"9": {"7": {"8": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 6}, "1": {"0": {"9": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"4": {"6": {"4": {"3": {"7": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1, "w": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}}}}}}}, "docs": {}, "df": 0}, "2": {"8": {"6": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"6": {"7": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"8": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"2": {"docs": {}, "df": 0, "\u2013": {"3": {"2": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"4": {"9": {"8": {"docs": {}, "df": 0, "v": {"1": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"5": {"9": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"2": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"9": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 77, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}}, "df": 6}, "}": {"docs": {}, "df": 0, "^": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}}, "df": 3}}, "2": {"0": {"1": {"5": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}, "7": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}}, "df": 1}, "8": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.4142135623730951}}, "df": 11}, "9": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 9}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 5}, "1": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 7}, "docs": {}, "df": 0}, "9": {"5": {"docs": {}, "df": 0, "\u2013": {"1": {"0": {"3": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"8": {"8": {"docs": {}, "df": 0, "\u2013": {"2": {"0": {"1": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}, "3": {"4": {"docs": {}, "df": 0, "\u2013": {"2": {"4": {"1": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "7": {"2": {"0": {"1": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"2": {"3": {"1": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 3}, "6": {"3": {"6": {"7": {"0": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"2": {"7": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 35, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}}, "df": 13}}, "3": {"0": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}, "2": {"2": {"5": {"1": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}, "8": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 3}, "docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 11}, "4": {"2": {"docs": {}, "df": 0, ":": {"9": {"5": {"2": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 4, "d": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}}, "df": 4}}, "5": {"0": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"6": {"6": {"docs": {}, "df": 0, "\u2013": {"7": {"5": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"5": {"7": {"docs": {}, "df": 0, "\u2013": {"5": {"4": {"6": {"6": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 3}, "6": {"4": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 1}, "docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 2}, "7": {"1": {"3": {"docs": {}, "df": 0, "\u2013": {"7": {"2": {"2": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "8": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "8": {"0": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}, "6": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}, "docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 5}, "9": {"5": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 1}, "6": {"2": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "9": {"9": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 5}, "docs": {"mridc": {"tf": 1.7320508075688772}, "mridc.collections": {"tf": 1.7320508075688772}, "mridc.collections.common": {"tf": 1.7320508075688772}, "mridc.collections.common.callbacks": {"tf": 1.7320508075688772}, "mridc.collections.common.callbacks.callbacks": {"tf": 1.7320508075688772}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1.4142135623730951}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1.7320508075688772}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1.7320508075688772}, "mridc.collections.common.data": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 3}, "mridc.collections.common.data.dataset.ConcatDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1.7320508075688772}, "mridc.collections.common.losses": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.ssim": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 2.449489742783178}, "mridc.collections.common.metrics": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 6.557438524302}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 4}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1.7320508075688772}, "mridc.collections.common.parts": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.fft2c": {"tf": 2.8284271247461903}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 2.8284271247461903}, "mridc.collections.common.parts.patch_utils": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.ptl_overrides": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.rnn_utils": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 2.23606797749979}, "mridc.collections.common.parts.utils": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 3.4641016151377544}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 3}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 3.4641016151377544}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 3.4641016151377544}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 3}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 3}, "mridc.collections.common.parts.utils.rss": {"tf": 3.3166247903554}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 3.3166247903554}, "mridc.collections.common.parts.utils.sense": {"tf": 3.7416573867739413}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 3}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 3}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 3}, "mridc.collections.reconstruction": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 3}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 3}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 4}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 3.7416573867739413}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.metrics": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 4.242640687119285}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 3}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 3}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 3}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 3}, "mridc.collections.reconstruction.models.cascadenet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 3}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 3}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.ccnn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.conv.gruconv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 3}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.convrecnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 3}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 3}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 3}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.crnn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 3}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.crossdomain.multicoil": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.didn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 4}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 4}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.dunet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 3}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.multidomainnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 4.358898943540674}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 4.358898943540674}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.primaldual": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.primaldual.pd": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 4.123105625617661}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 4.123105625617661}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 3}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.rim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 3}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 3}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rim_block": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.rim.rnn_cells": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 3}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 2}, "mridc.collections.reconstruction.models.rim.utils": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.rvn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 3}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 3}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 3.7416573867739413}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 3.7416573867739413}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 3.7416573867739413}, "mridc.collections.reconstruction.models.variablesplittingnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 3}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 3}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 3}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.varnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 3}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 3}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.vn": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 3}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 3}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 3}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 3.872983346207417}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.transforms": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.parts.utils": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 3}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 3}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 3}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 3.4641016151377544}, "mridc.constants": {"tf": 1.7320508075688772}, "mridc.core": {"tf": 1.7320508075688772}, "mridc.core.classes": {"tf": 1.7320508075688772}, "mridc.core.classes.common": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Typing": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Typing.input_types": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.output_types": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO": {"tf": 1.7320508075688772}, "mridc.core.classes.common.FileIO.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1.7320508075688772}, "mridc.core.classes.common.PretrainedModelInfo.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.PretrainedModelInfo.class_": {"tf": 1.7320508075688772}, "mridc.core.classes.common.PretrainedModelInfo.aliases": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Serialization": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Serialization.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1.4142135623730951}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.__init__": {"tf": 4.69041575982343}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.TypeState.UNINITIALIZED": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.Dataset": {"tf": 2.23606797749979}, "mridc.core.classes.dataset.Dataset.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 3.1622776601683795}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.batch_size": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.drop_last": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.shuffle": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.num_workers": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.DatasetConfig.pin_memory": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.IterableDataset": {"tf": 2.23606797749979}, "mridc.core.classes.dataset.IterableDataset.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 3.3166247903554}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1.7320508075688772}, "mridc.core.classes.export": {"tf": 1.7320508075688772}, "mridc.core.classes.export.ExportFormat": {"tf": 1.4142135623730951}, "mridc.core.classes.export.ExportFormat.ONNX": {"tf": 1.7320508075688772}, "mridc.core.classes.export.ExportFormat.TORCHSCRIPT": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.export": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.forward": {"tf": 1.7320508075688772}, "mridc.core.classes.loss": {"tf": 1.7320508075688772}, "mridc.core.classes.loss.Loss": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 3.872983346207417}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 3.7416573867739413}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 3.872983346207417}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 4}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.1622776601683795}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1.7320508075688772}, "mridc.core.classes.module": {"tf": 1.7320508075688772}, "mridc.core.classes.module.NeuralModule": {"tf": 1.7320508075688772}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1.7320508075688772}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 2.6457513110645907}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1.7320508075688772}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1.7320508075688772}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1.7320508075688772}, "mridc.core.conf": {"tf": 1.7320508075688772}, "mridc.core.conf.base_config": {"tf": 1.7320508075688772}, "mridc.core.conf.base_config.Config": {"tf": 1.7320508075688772}, "mridc.core.conf.base_config.Config.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.base_config.Config.name": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1.4142135623730951}, "mridc.core.conf.dataloader.DataLoaderConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_size": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.shuffle": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.sampler": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.batch_sampler": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.num_workers": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.collate_fn": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.pin_memory": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.drop_last": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.timeout": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.worker_init_fn": {"tf": 1.7320508075688772}, "mridc.core.conf.dataloader.DataLoaderConfig.multiprocessing_context": {"tf": 1.7320508075688772}, "mridc.core.conf.hydra_runner": {"tf": 1.7320508075688772}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 3}, "mridc.core.conf.modelPT": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig.name": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig.last_epoch": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.OptimConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.OptimConfig.name": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.OptimConfig.sched": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.train_ds": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.validation_ds": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.test_ds": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfig.optim": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.HydraConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.name": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.model": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.trainer": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.exp_manager": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.MRIDCConfig.hydra": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 8.54400374531753}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.OptimizerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.OptimizerParams.lr": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams.amsgrad": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2.8284271247461903}, "mridc.core.conf.optimizers.NovogradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.betas": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.grad_averaging": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.amsgrad": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.luc": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.luc_trust": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams.luc_eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.SGDParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.momentum": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.dampening": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.SGDParams.nesterov": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdadeltaParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams.rho": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamaxParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams.betas": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdagradParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.lr_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.initial_accumulator_value": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamWParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams.betas": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams.amsgrad": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RMSpropParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.alpha": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.weight_decay": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.momentum": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams.centered": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RpropParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RpropParams.etas": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RpropParams.step_sizes": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SchedulerParams.last_epoch": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams.constant_ratio": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupSchedulerParams.max_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupSchedulerParams.warmup_ratio": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.hold_ratio": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.constant_ratio": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareAnnealingParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.SquareRootAnnealingParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.CosineAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CosineAnnealingParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.NoamAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.NoamAnnealingParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.WarmupAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.WarmupAnnealingParams.warmup_ratio": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.power": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams.cycle": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.power": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams.cycle": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.StepLRParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.StepLRParams.step_size": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.StepLRParams.gamma": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ExponentialLRParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ExponentialLRParams.gamma": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.mode": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.factor": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.patience": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.verbose": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.threshold_mode": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.cooldown": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.min_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams.eps": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.base_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.max_lr": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_up": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.step_size_down": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.mode": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.gamma": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.scale_mode": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.cycle_momentum": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.base_momentum": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.CyclicLRParams.max_momentum": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.logger": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.enable_checkpointing": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.callbacks": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.default_root_dir": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_val": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.process_position": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.num_nodes": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.num_processes": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.gpus": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.auto_select_gpus": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.tpu_cores": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.log_gpu_memory": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.progress_bar_refresh_rate": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.enable_progress_bar": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.overfit_batches": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.track_grad_norm": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.check_val_every_n_epoch": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.fast_dev_run": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.accumulate_grad_batches": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.max_epochs": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.min_epochs": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.max_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.min_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.limit_train_batches": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.limit_val_batches": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.limit_test_batches": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.val_check_interval": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.flush_logs_every_n_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.log_every_n_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.accelerator": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.sync_batchnorm": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.precision": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.weights_summary": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.weights_save_path": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.num_sanity_val_steps": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.resume_from_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.profiler": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.benchmark": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.deterministic": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_epoch": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.auto_lr_find": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.replace_sampler_ddp": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.detect_anomaly": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.terminate_on_nan": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.auto_scale_batch_size": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.prepare_data_per_node": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.amp_backend": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.amp_level": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.plugins": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.move_metrics_to_cpu": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.multiple_trainloader_mode": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.limit_predict_batches": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.stochastic_weight_avg": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.gradient_clip_algorithm": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.max_time": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.reload_dataloaders_every_n_epochs": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.ipus": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.devices": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.strategy": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig.enable_model_summary": {"tf": 1.7320508075688772}, "mridc.core.connectors": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.__init__": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 2.8284271247461903}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 3.7416573867739413}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1.7320508075688772}, "mridc.core.neural_types": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Batch": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Time": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Dimension": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Channel": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Width": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Height": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Any": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Sequence": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.FlowGroup": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.Singleton": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 2.23606797749979}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 2.23606797749979}, "mridc.core.neural_types.axes.AxisType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.LESS": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.GREATER": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.DIM_INCOMPATIBLE": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.TRANSPOSE_SAME": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.CONTAINER_SIZE_MISMATCH": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.INCOMPATIBLE": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.SAME_TYPE_INCOMPATIBLE_PARAMS": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult.UNCHECKED": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.VoidType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.VoidType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ChannelType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.MRISignal": {"tf": 2.449489742783178}, "mridc.core.neural_types.elements.MRISignal.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RecurrentsType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LabelsType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LogprobsType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ProbsType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LossType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LossType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RegressionValuesType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.CategoricalValuesType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.PredictionsType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LengthsType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.MaskType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.MaskType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Target": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Target.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ReconstructionTarget.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ImageFeatureValue.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Index": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Index.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ImageValue.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalizedImageValue.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.StringLabel.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.StringType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.StringType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Length": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Length.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.IntType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.IntType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.FloatType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.FloatType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionSamplesType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionMeanType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LogDeterminantType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 2.8284271247461903}, "mridc.core.neural_types.neural_type.NeuralType.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor": {"tf": 5}, "mridc.core.optim.adafactor.Adafactor.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 2.6457513110645907}, "mridc.core.optim.lr_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 2.6457513110645907}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.CosineAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.NoamAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 3.1622776601683795}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 5.477225575051661}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd.Novograd": {"tf": 3}, "mridc.core.optim.novograd.Novograd.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd.Novograd.step": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.GradBucket.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 2.6457513110645907}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 2.449489742783178}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.AVAILABLE_OPTIMIZERS": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.7320508075688772}, "mridc.core.utils": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 2.449489742783178}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 2.449489742783178}, "mridc.package_info": {"tf": 1.7320508075688772}, "mridc.utils": {"tf": 1.7320508075688772}, "mridc.utils.app_state": {"tf": 1.7320508075688772}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1.7320508075688772}, "mridc.utils.app_state.ModelMetadataRegistry.__init__": {"tf": 1.7320508075688772}, "mridc.utils.app_state.ModelMetadataRegistry.restoration_path": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.__init__": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.device_id": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.world_size": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.name": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.version": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1.7320508075688772}, "mridc.utils.arguments": {"tf": 1.7320508075688772}, "mridc.utils.arguments.add_optimizer_args": {"tf": 3.605551275463989}, "mridc.utils.arguments.add_scheduler_args": {"tf": 2}, "mridc.utils.arguments.add_recon_args": {"tf": 2}, "mridc.utils.cloud": {"tf": 1.7320508075688772}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}, "mridc.utils.config_utils": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.update_model_config": {"tf": 4.69041575982343}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.8284271247461903}, "mridc.utils.decorators": {"tf": 1.7320508075688772}, "mridc.utils.decorators.deprecated": {"tf": 1.7320508075688772}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 3.4641016151377544}, "mridc.utils.decorators.experimental": {"tf": 1.7320508075688772}, "mridc.utils.decorators.experimental.experimental": {"tf": 1.7320508075688772}, "mridc.utils.decorators.port_docs": {"tf": 1.7320508075688772}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.CoercionError.__init__": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.RequiredSettingMissingError.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exceptions": {"tf": 1.7320508075688772}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.LightningNotInstalledException.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exceptions.CheckInstall": {"tf": 1.7320508075688772}, "mridc.utils.exceptions.CheckInstall.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerMisconfigurationError.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.CallbackParams.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.filepath": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.dirpath": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.filename": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.monitor": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.verbose": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.save_last": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.save_top_k": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.save_weights_only": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.mode": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.every_n_epochs": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.prefix": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.postfix": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.save_best_model": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.always_save_mridc": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.save_mridc_on_train_end": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.CallbackParams.model_parallel_size": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams.reduction": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams.sync_cuda": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StepTimingParams.buffer_size": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.explicit_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.exp_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.name": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.version": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.use_datetime_version": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.resume_if_exists": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.resume_past_end": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.resume_ignore_no_checkpoint": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.create_tensorboard_logger": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.summary_writer_kwargs": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.create_wandb_logger": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.wandb_logger_kwargs": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.create_checkpoint_callback": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.checkpoint_callback_params": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.files_to_copy": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.log_step_timing": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.step_timing_kwargs": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.ExpManagerConfig.model_parallel_size": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 4.47213595499958}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.get_log_dir": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 3.3166247903554}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 3.3166247903554}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 3}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_slurm": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1.7320508075688772}, "mridc.utils.export_utils": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 2.23606797749979}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 2.23606797749979}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 2.23606797749979}, "mridc.utils.export_utils.simple_replace": {"tf": 2.6457513110645907}, "mridc.utils.export_utils.swap_modules": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.replace_modules": {"tf": 2.23606797749979}, "mridc.utils.export_utils.replace_for_export": {"tf": 2.23606797749979}, "mridc.utils.formaters": {"tf": 1.7320508075688772}, "mridc.utils.formaters.base": {"tf": 1.7320508075688772}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1.7320508075688772}, "mridc.utils.formaters.base.BaseMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1.7320508075688772}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1.7320508075688772}, "mridc.utils.formaters.base.DebugMRIDCFormatter.DEFAULT_FORMAT": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.set_title": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.clear_screen": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.clear_line": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiCodes.__init__": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiCursor.__init__": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 3.1622776601683795}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 3.3166247903554}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.BLACK": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.RED": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.GREEN": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.YELLOW": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.BLUE": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.MAGENTA": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.CYAN": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.WHITE": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.RESET": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLACK_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTRED_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTGREEN_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTYELLOW_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTBLUE_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTMAGENTA_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTCYAN_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiFore.LIGHTWHITE_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.BLACK": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.RED": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.GREEN": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.YELLOW": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.BLUE": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.MAGENTA": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.CYAN": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.WHITE": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.RESET": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLACK_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTRED_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTGREEN_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTYELLOW_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTBLUE_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTMAGENTA_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTCYAN_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiBack.LIGHTWHITE_EX": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiStyle.BRIGHT": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiStyle.DIM": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiStyle.NORMAL": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiStyle.RESET_ALL": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Fore": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Back": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Style": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.Cursor": {"tf": 1.7320508075688772}, "mridc.utils.formaters.utils": {"tf": 1.7320508075688772}, "mridc.utils.formaters.utils.check_color_support": {"tf": 2.449489742783178}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1.7320508075688772}, "mridc.utils.get_rank": {"tf": 1.7320508075688772}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1.7320508075688772}, "mridc.utils.lightning_logger_patch": {"tf": 1.7320508075688772}, "mridc.utils.lightning_logger_patch.HANDLERS": {"tf": 1.7320508075688772}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.7320508075688772}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.7320508075688772}, "mridc.utils.metaclasses": {"tf": 1.7320508075688772}, "mridc.utils.metaclasses.Singleton": {"tf": 1.4142135623730951}, "mridc.utils.model_utils": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactPathType.LOCAL_PATH": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactPathType.TAR_PATH": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactItem.__init__": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactItem.hashed_path": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 12.36931687685298}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.unique_names_check": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2.6457513110645907}, "mridc.utils.model_utils.wrap_training_step": {"tf": 3.605551275463989}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 3.1622776601683795}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 5.830951894845301}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.NOTSET": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.DEBUG": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.INFO": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.WARNING": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.ERROR": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.CRITICAL": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 2}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 2}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 2}, "mridc.utils.mridc_logging.Logger.info": {"tf": 2}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 2}, "mridc.utils.mridc_logging.Logger.error": {"tf": 2}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 2.23606797749979}, "mridc.utils.mridc_logging.LogMode": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.LogMode.EACH": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.LogMode.ONCE": {"tf": 1.7320508075688772}, "mridc.utils.timers": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 2.23606797749979}, "mridc.utils.timers.NamedTimer.buffer_size": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.reset": {"tf": 2.23606797749979}, "mridc.utils.timers.NamedTimer.start": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.get": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.export": {"tf": 1.4142135623730951}}, "df": 1246, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 42, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}}, "df": 2}, "y": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 58}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 16, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.core.neural_types.elements.MRISignal": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.449489742783178}}, "df": 2, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}}, "df": 5, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 4}}, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.8284271247461903}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 69, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2}}, "df": 21, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.set_verbosity": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "f": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 10}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 2}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}}, "df": 39}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1.4142135623730951}}, "df": 14}}, "t": {"docs": {"mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 2}}}, "q": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Serialization": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1, "e": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.4641016151377544}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3.4641016151377544}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 34, "s": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 15}}}, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.check_resume": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 37, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 2}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}}, "df": 41, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}}, "df": 5, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 1}}, "e": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 20, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 3.3166247903554}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 3}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}}, "df": 21}, "l": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.StepLRParams": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 2}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 8}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.elements.Length": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {"mridc.utils.timers.NamedTimer.stop": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.utils.timers.NamedTimer.stop": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 3.1622776601683795}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Index": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 2}, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}}, "df": 28}}}}}, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 21}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}}, "df": 15, "d": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 8}, "s": {"docs": {"mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 7}}, "c": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 2}}, "y": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 27}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.23606797749979}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 8}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 36}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 56}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}}, "df": 12, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 25, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3.1622776601683795}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.449489742783178}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}}, "df": 6}, "d": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 8, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 12}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}}, "df": 7}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1, "r": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}}, "df": 23, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 9}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2}}, "df": 10, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}}, "df": 4}}}, "o": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 11, "f": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.PredictionsType": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 12, "d": {"docs": {"mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}}, "df": 3}, "s": {"docs": {"mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2.8284271247461903}}, "df": 2}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 2, "#": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.optimizers.SGDParams": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 21}}, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 4}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 51, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2.23606797749979}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 2}}, "df": 5, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1.4142135623730951}}, "df": 16, "s": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "t": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 6}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}}, "df": 2, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 5}, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}}, "df": 8}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}}, "df": 25}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 9}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 17, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2.23606797749979}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3}, "mridc.utils.exp_manager.check_resume": {"tf": 2}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1.7320508075688772}}, "df": 29, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 4}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 19}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 18}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}}, "df": 13}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 2}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 2}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 13, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 13}, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 6}, "r": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}}, "df": 18}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 2, "d": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 3}, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 2}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}}, "df": 3}, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.coil_combination": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}}, "df": 4}}}}}}}}, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"5": {"4": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 17}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 12}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 21}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.7320508075688772}}, "df": 2}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.7320508075688772}}, "df": 6, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}}, "df": 2}}}}}, "docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 10, "s": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 7}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}}, "df": 23, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}}, "df": 41}}, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}}, "df": 6}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 2}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}}, "df": 13}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": null}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": null}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": null}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": null}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": null}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": null}}, "df": 6, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 2}}, "df": 3, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2.6457513110645907}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2.8284271247461903}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1.7320508075688772}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 2.449489742783178}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3.7416573867739413}, "mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 2.8284271247461903}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 3.1622776601683795}, "mridc.utils.config_utils.update_model_config": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.8284271247461903}}, "df": 42, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 52}}}}}, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 8}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 6}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 18}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 31, "s": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}}, "df": 15}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2.23606797749979}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}}, "df": 4}}}}, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 6}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2.8284271247461903}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 3.7416573867739413}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.metaclasses.Singleton": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 76, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.adafactor.Adafactor.step": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 6}, "i": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 3, "p": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 17, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 16}, "d": {"docs": {"mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"1": {"0": {"0": {"docs": {"mridc.core.neural_types.elements.StringLabel": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}}, "df": 16}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.6457513110645907}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 28}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}}, "df": 9}}, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1, "w": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}}, "df": 5}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}}, "df": 4}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}}, "df": 6, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}}, "df": 2, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3.1622776601683795}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2.449489742783178}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 2}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 2}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.23606797749979}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 101}, "n": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 8}}, "e": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 2}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 3}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.fft2c": {"tf": 2}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 2}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 2.23606797749979}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 2.449489742783178}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.rss": {"tf": 2.449489742783178}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 2.449489742783178}, "mridc.collections.common.parts.utils.sense": {"tf": 2}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 2.23606797749979}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 3.3166247903554}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 4.123105625617661}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 3}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 3}, "mridc.core.classes.common.typecheck": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 2.449489742783178}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 2}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 3.3166247903554}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 3.3166247903554}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.3166247903554}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1.7320508075688772}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 2.23606797749979}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 4.242640687119285}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2.449489742783178}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 2}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 2}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.7320508075688772}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 2.6457513110645907}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3.3166247903554}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 2.449489742783178}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 2}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 2.449489742783178}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2.449489742783178}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2}, "mridc.utils.config_utils.update_model_config": {"tf": 4.47213595499958}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 3.605551275463989}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 2.6457513110645907}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 5.830951894845301}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.get_log_dir": {"tf": 3.605551275463989}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 2}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_slurm": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 2}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 4.795831523312719}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 3.7416573867739413}, "mridc.utils.model_utils.wrap_training_step": {"tf": 3.1622776601683795}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 2.23606797749979}, "mridc.utils.model_utils.check_lib_version": {"tf": 2.8284271247461903}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 2.8284271247461903}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 405, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}}, "df": 26}, "m": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}}, "df": 10}}, "y": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 9, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 22}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.6457513110645907}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 3}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 107}, "n": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.mridc_logging.Logger.debug": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 6}, "n": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 2}}, "df": 21}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}}, "df": 18}}}}}, "e": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 2.8284271247461903}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.23606797749979}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 2}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 3.3166247903554}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.8284271247461903}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 3}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2.449489742783178}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 3.1622776601683795}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 2}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2.23606797749979}, "mridc.core.optim.novograd.Novograd": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2.449489742783178}, "mridc.utils.config_utils.update_model_config": {"tf": 2.23606797749979}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 2.449489742783178}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 6.6332495807108}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.7320508075688772}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 2}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 2}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 3.605551275463989}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2.8284271247461903}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 2}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 2.449489742783178}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 2.23606797749979}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 314, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}}, "df": 18}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 52}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}}, "df": 5}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}}, "df": 3, "k": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 2}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 76, "s": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}}, "df": 5}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.449489742783178}}, "df": 36, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 16}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}}, "df": 20}}}, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}}, "df": 4, "{": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 2}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.23606797749979}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.3166247903554}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 46}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 24, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 51}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 2}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 2}, "mridc.utils.exp_manager.check_slurm": {"tf": 2.23606797749979}}, "df": 34, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.trainer.TrainerConfig": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2}}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.TimingCallback": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}, "d": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 2}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 2}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.VoidType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.simple_replace": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 65, "s": {"docs": {"mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 14}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 17, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 4}, "r": {"docs": {"mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.start": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.get": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.StepTimingParams": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.colors.set_title": {"tf": 1.7320508075688772}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 13, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"2": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}, "docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.449489742783178}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 2}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.7320508075688772}}, "df": 25, "s": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 22}, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.8284271247461903}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 15, "s": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {"mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 2.6457513110645907}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 3.3166247903554}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 2.23606797749979}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_loss": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 22, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 7}, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}}, "df": 7}}}, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}, "p": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 31, ":": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.7320508075688772}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.unique_names_check": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 27, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1.4142135623730951}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}}, "df": 5}, "f": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}, "b": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 2.449489742783178}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 2.449489742783178}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}}, "df": 4}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2.8284271247461903}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 52}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}}, "df": 4}}}}}}}, "n": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mridc.core.neural_types.elements.LengthsType": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 37, "s": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}}, "df": 21}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 2}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 25}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2, "r": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.core.neural_types.elements.LabelsType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}, "h": {"5": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}, "docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 15, "o": {"docs": {}, "df": 0, "w": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}, "d": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}}, "df": 5}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 2}}, "df": 24}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 12, "h": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 8}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 32}}, "j": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.elements.StringLabel": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {"mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 5}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 8}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 9}}}}}}}}}}}, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 8}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 7}}}}}}, "?": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "e": {"docs": {"mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 10}}}}}, "x": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 8}, "h": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 1}, "*": {"2": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 2}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.trainer.TrainerConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {"mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 26}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 20}}}, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}}, "df": 16, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.Typing": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}}, "df": 3}, "d": {"docs": {"mridc.core.neural_types.elements.MRISignal": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {"mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 2.23606797749979}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 2.449489742783178}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 2}}}}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 4}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 5}}, "s": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.decorators.experimental.experimental": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}}, "df": 4}}, "s": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.export.ExportFormat": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1.4142135623730951}}, "df": 4, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.StatelessTimer": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.23606797749979}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}}, "df": 12}}}, "t": {"docs": {"mridc.utils.exp_manager.check_slurm": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {"mridc.utils.mridc_logging.Logger.debug": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 11, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 30}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}}, "df": 27, "s": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 4}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 16}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 21, "a": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 4}, "c": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 3}}, "o": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 3}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 7, "n": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.449489742783178}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.7320508075688772}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 3.1622776601683795}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 150, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 21, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}}, "df": 18, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.__init__": {"tf": 1}}, "df": 17, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}}, "df": 12}, "d": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 3}, "r": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 18}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.utils.decorators.experimental.experimental": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 9}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 33, "o": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 19}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 27, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}}, "df": 6}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.mridc_logging.Logger.info": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}}, "df": 42}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 25, "s": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}}, "df": 3}, "d": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 12}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 10}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}}, "df": 5}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 10}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 27}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}}, "df": 7}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.4142135623730951}}, "df": 125, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 10, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}}, "df": 1}}}}}}}}}, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.ChannelType": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}}, "df": 8}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.info": {"tf": 2}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 7, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1.4142135623730951}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 17}}}}}}}, "s": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}}, "df": 14}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {"mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 2, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 2}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2.23606797749979}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 2}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 76, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}}, "df": 3}}}, "s": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}}, "df": 18}}}}}, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.6457513110645907}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 2}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 2.23606797749979}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2.449489742783178}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 2.23606797749979}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.23606797749979}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 2.449489742783178}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 2}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1.7320508075688772}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 3}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 134, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 3}, "d": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.449489742783178}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2.23606797749979}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.t_with_string": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.449489742783178}, "mridc.utils.env_var_parsing.get_env": {"tf": 2.23606797749979}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.605551275463989}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_slurm": {"tf": 2.23606797749979}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2.23606797749979}, "mridc.utils.model_utils.check_lib_version": {"tf": 2.449489742783178}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 111, "f": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.loss.Loss": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}}, "df": 21}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 12}}, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}}, "df": 42, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 8}}}}}, "d": {"docs": {"mridc.utils.app_state.AppState.device_id": {"tf": 1}}, "df": 1, "x": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 10, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1.4142135623730951}}, "df": 2}}, "h": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}, "d": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"mridc.core.classes.common.FileIO": {"tf": 1}}, "df": 1}}, "a": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.23606797749979}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2.6457513110645907}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3.872983346207417}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2.6457513110645907}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 3}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2.449489742783178}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 3.872983346207417}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 2.23606797749979}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 4.242640687119285}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 2}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 2}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2.449489742783178}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 2}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 2.8284271247461903}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 242, "t": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 40, "t": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 7}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {"mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 90, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 20}, "s": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.4641016151377544}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3.4641016151377544}}, "df": 4}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"1": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.23606797749979}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 13, "s": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 33}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 2}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.7320508075688772}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 242, "/": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 40, "n": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 9, "s": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 19}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2.449489742783178}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2.6457513110645907}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}}, "df": 20, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 10, ":": {"1": {"8": {"0": {"5": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"1": {"0": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"1": {"1": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.log_image": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}}, "df": 64, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.872983346207417}, "mridc.utils.exp_manager.error_checks": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 2}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1.7320508075688772}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}}, "df": 153, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 9}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}}, "df": 14}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {"mridc.utils.formaters.colors.code_to_chars": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCodes": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}}, "df": 6}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 5, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 12}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 21}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}}, "df": 4}, "d": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}}, "df": 13}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 10}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 21, "l": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 2.23606797749979}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}}, "df": 62, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 7}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 13}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 6}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 2}, "mridc.core.neural_types.axes.AxisType": {"tf": 2}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 12, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 14, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}}, "df": 15}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}, "#": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.conf.optimizers.AdamParams": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.conf.optimizers.AdamaxParams": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {"mridc.core.conf.optimizers.AdamWParams": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.AdagradParams": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 5, "y": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 39}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}}, "df": 8}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}}, "df": 2}, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 17}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}}, "df": 3, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 19}, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 2}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 1}, "d": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 3, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 2}, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}}, "df": 9}}}}, "t": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}}, "df": 12, "s": {"docs": {"mridc.core.neural_types.elements.PredictionsType": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}}, "df": 3, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1.4142135623730951}}, "df": 4, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "s": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.conf.schedulers.SquareAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.CosineAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.NoamAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2.449489742783178}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 13, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 72}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}}, "df": 16}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 4}, "s": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2}, "r": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1.7320508075688772}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1.7320508075688772}, "mridc.utils.arguments.add_recon_args": {"tf": 1.7320508075688772}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "h": {"2": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 3}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 2}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.449489742783178}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}}, "df": 50, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 7}}}}}, "d": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 49, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}}, "df": 2}, "d": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exceptions.CheckInstall": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 3}, "y": {"docs": {"mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1.4142135623730951}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 14}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 2}}, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}}, "df": 1}}, "r": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.image_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 15}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}}, "df": 5}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}}, "df": 1}}, "p": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 13}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}}, "df": 2}}}, "o": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2, "f": {"docs": {"mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_start": {"tf": 1}, "mridc.collections.common.callbacks.callbacks.LogEpochTimeCallback.on_train_epoch_end": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 2.23606797749979}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 3}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 3.605551275463989}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.7320508075688772}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1.4142135623730951}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3.605551275463989}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2.23606797749979}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 2.449489742783178}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2.6457513110645907}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2.6457513110645907}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2.23606797749979}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 2.23606797749979}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2.6457513110645907}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.app_state.AppState": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2.6457513110645907}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.6457513110645907}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_test_batch_end": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.8284271247461903}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.23606797749979}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 2.23606797749979}, "mridc.utils.model_utils.check_lib_version": {"tf": 2.23606797749979}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 342, "f": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 51, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 15}}, "e": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 15, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "x": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 92, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}}, "df": 2, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "g": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 11, "/": {"1": {"0": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"1": {"7": {"0": {"3": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"1": {"8": {"0": {"4": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}, "5": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"5": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"1": {"0": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"1": {"1": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 33, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}}, "df": 60, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 12}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 28, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2, "r": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 2}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_optim": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 2.449489742783178}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 3}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.load_state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 2.23606797749979}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 2.6457513110645907}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2}, "mridc.utils.arguments.add_optimizer_args": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}}, "df": 62, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}}, "df": 5}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2.23606797749979}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.novograd.Novograd": {"tf": 2.23606797749979}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 42, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 28}}, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 12}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.set_trainer": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 36, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 21}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 8}}}, "e": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 20}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_training_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_test_data": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 2.449489742783178}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.7320508075688772}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2.449489742783178}}, "df": 121, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.DatasetConfig": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_train_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_test_ds": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 35, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.7320508075688772}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 13, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.23606797749979}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.6457513110645907}, "mridc.utils.model_utils.ArtifactItem": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "e": {"docs": {"mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 3}, "mridc.core.optim.novograd.Novograd": {"tf": 2}, "mridc.utils.arguments.add_optimizer_args": {"tf": 2}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 49, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.7416573867739413}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 2}, "d": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 5}}}}}, "v": {"1": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 2}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.TypeState": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 20, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 21}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.typecheck": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}}, "df": 3}, "d": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.PolynomialDecayAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.PolynomialHoldDecayAnnealingParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1}}, "df": 8}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}}, "df": 6}}}}}}}}}, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.poisson_disc2d": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.disable_checks": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}}, "df": 18, "d": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 2}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 23, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 2.23606797749979}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 2}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 28, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 2.449489742783178}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 2.449489742783178}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 2}}, "df": 17}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_part_of_state_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.4641016151377544}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3.4641016151377544}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 2.6457513110645907}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 14}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 2}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.4142135623730951}}, "df": 25}}}}}}, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.3166247903554}, "mridc.utils.exp_manager.check_resume": {"tf": 2}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.449489742783178}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}}, "df": 11, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1.4142135623730951}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}}, "df": 1}}}}}}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.4142135623730951}}, "df": 5}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "o": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 7, "n": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}}, "df": 1, "t": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.4142135623730951}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}}, "df": 2}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 7}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}}, "df": 8, "s": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}, "t": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 29}}}}, "b": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}, "e": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 2}}, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}}, "df": 21}, "c": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1.4142135623730951}}, "df": 2}}, "l": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}}, "df": 2}, "t": {"docs": {"mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}, "m": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}}, "df": 35, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 17}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}}, "df": 1}, "r": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}}, "df": 9}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}}, "df": 35}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 12}, "s": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 2.449489742783178}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}}, "df": 40, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}}, "df": 4}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 19}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.4142135623730951}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 22}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {"mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}}, "df": 18, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}, "d": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.449489742783178}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.449489742783178}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 3}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 33, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 19}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.ssim": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {"mridc.utils.metaclasses.Singleton": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.7320508075688772}}, "df": 3}, "t": {"docs": {"mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 2}}, "df": 1}}}}}, "s": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.timers.NamedTimer": {"tf": 1}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 2}}, "df": 5, "s": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 9}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2.449489742783178}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2.449489742783178}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 2}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 42, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {"mridc.utils.formaters.colors.clear_screen": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.clear_line": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 3, "l": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2.6457513110645907}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2.8284271247461903}, "mridc.core.classes.common.PretrainedModelInfo": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 3.1622776601683795}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.3166247903554}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 4.123105625617661}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 2.8284271247461903}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 3.1622776601683795}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3.3166247903554}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 2}, "mridc.utils.export_utils.replace_for_export": {"tf": 2}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 2}}, "df": 99, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 30}, "p": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 22}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 2, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"mridc.utils.mridc_logging.LogMode": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}}, "df": 5, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 17}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 8}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}}, "df": 15}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}, "d": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "r": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}}, "df": 17, "d": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 3.3166247903554}, "mridc.core.conf.base_config.Config": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 2.23606797749979}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 3.3166247903554}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.7320508075688772}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 2.23606797749979}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 48, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "b": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.mse": {"tf": 1}}, "df": 1}, "g": {"docs": {"mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 5}}, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}}, "df": 5}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 2.6457513110645907}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.compute_max_steps": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}}, "df": 56}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 2}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.test_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.configure_optimizers": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.module.NeuralModule.freeze": {"tf": 1}, "mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.SchedConfig": {"tf": 1}, "mridc.core.conf.modelPT.OptimConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfig": {"tf": 1}, "mridc.core.conf.modelPT.HydraConfig": {"tf": 1}, "mridc.core.conf.modelPT.MRIDCConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.StepLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ExponentialLRParams": {"tf": 1}, "mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}, "mridc.core.conf.schedulers.CyclicLRParams": {"tf": 1}, "mridc.core.conf.trainer.TrainerConfig": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.7320508075688772}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2.23606797749979}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exp_manager.CallbackParams": {"tf": 1}, "mridc.utils.exp_manager.StepTimingParams": {"tf": 1}, "mridc.utils.exp_manager.ExpManagerConfig": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.colors.AnsiFore": {"tf": 1}, "mridc.utils.formaters.colors.AnsiBack": {"tf": 1}, "mridc.utils.formaters.colors.AnsiStyle": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.mridc_logging.LogMode": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 212, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.core.classes.export.Exportable.forward": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}}, "df": 51, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 8, "s": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.formaters.base.DebugMRIDCFormatter": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.formaters.colors.AnsiFore": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}}, "df": 8}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 8, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 24}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}}, "df": 6}}, "s": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.8284271247461903}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 31}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 19}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 21, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1.7320508075688772}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 2}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.23606797749979}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 2}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1.4142135623730951}}, "df": 47, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.7320508075688772}}, "df": 6}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}}}}}, ":": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.teardown": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 3}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 2}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2.449489742783178}, "mridc.core.optim.novograd.Novograd": {"tf": 2}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}}, "df": 13, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "w": {"docs": {"mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}}, "df": 19, "s": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 16}}, "t": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 2.449489742783178}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}}, "df": 13}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 2}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 2}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 39, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}}, "df": 3}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}}, "df": 17}}}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 9}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 7, "y": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}}, "df": 2}}, "p": {"1": {"6": {"docs": {"mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO": {"tf": 1}, "mridc.core.classes.common.Serialization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.schedulers.SchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupHoldSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.WarmupAnnealingHoldSchedulerParams": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.exceptions.MRIDCBaseException": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.formaters.base.BaseMRIDCFormatter": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 41, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 12}, "t": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 2}}, "df": 1}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_before_backward": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.formaters.colors.AnsiBack": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}}, "df": 43, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.7320508075688772}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {"mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 35, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 1}}, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.23606797749979}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.7320508075688772}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.export.Exportable": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.6457513110645907}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1.4142135623730951}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2.8284271247461903}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_env": {"tf": 2}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1.7320508075688772}}, "df": 126, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}}, "df": 24}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.compare": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 9}}}}, "a": {"1": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.LoggerList": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 4}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.TimingCallback.on_train_batch_start": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "y": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.6457513110645907}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_train_batch_end": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.import_class_by_path": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 76, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 9}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.allreduce_buffer": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.6457513110645907}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.8284271247461903}}, "df": 2}}, "s": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "x": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}}, "df": 20, "s": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"mridc.utils.mridc_logging.Logger.warning": {"tf": 1}}, "df": 1}}, "f": {"1": {"6": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "n": {"1": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}, "w": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 12, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_memory_efficient_fp16": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.supports_flat_params": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 49}}}}, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.error_checks": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 46}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 18}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Model": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 63}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 17}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 2}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.7320508075688772}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2.449489742783178}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.simple_replace": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 108, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 15}}}}}, "n": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 2.23606797749979}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 3}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 2.8284271247461903}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 3}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 2.23606797749979}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.4142135623730951}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.setLevel": {"tf": 1}, "mridc.utils.mridc_logging.Logger.temp_verbosity": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 69}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}}, "df": 10}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.23606797749979}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 5, "s": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.save_to": {"tf": 1}, "mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}}, "df": 24}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}}, "df": 2, "s": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 7}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "m": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.schedulers.WarmupAnnealingParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2.449489742783178}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 2}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 16, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 7}, "d": {"docs": {}, "df": 0, "b": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}}, "df": 1}, "r": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint": {"tf": 1}}, "df": 3}, "d": {"docs": {"mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.decorators.port_docs.add_port_docs": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 2.23606797749979}}, "df": 3}}}}}}, "*": {"2": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 2.8284271247461903}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 2.6457513110645907}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 3.4641016151377544}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 3.1622776601683795}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1.4142135623730951}}, "df": 43, "o": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 19, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 2, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 50, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.23606797749979}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.exceptions.LightningNotInstalledException": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.StatelessTimer.on_load_checkpoint": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 62, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.dataset.Dataset": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_after_backward": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 28, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.7320508075688772}}, "df": 2}, "d": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 2}}}}}}}}}}}, "r": {"docs": {"mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 3, "m": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock": {"tf": 1}}, "df": 13}}}}}, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}}, "df": 7}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}}, "df": 2}}}, "v": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.error_checks": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}}, "df": 22, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}}, "df": 73, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.with_numba_compat_strictness": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1.4142135623730951}}, "df": 6}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2}}, "df": 3}}}, "n": {"docs": {"mridc.collections.common.losses.aggregator.AggregatorLoss.__init__": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.__init__": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConv2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvTranspose2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.__init__": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}}, "df": 4}}, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_file_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_err_file_handler": {"tf": 1}}, "df": 10}, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.4142135623730951}}, "df": 11, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.primaldual.pd.PrimalNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.process_inputs": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}}, "df": 36, "s": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 12}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.core.classes.common.Typing": {"tf": 1}, "mridc.core.classes.common.Typing.input_types": {"tf": 1}, "mridc.core.classes.common.Typing.output_types": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.export.Exportable.export": {"tf": 1}, "mridc.core.classes.module.NeuralModule": {"tf": 1}, "mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1.4142135623730951}, "mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}}, "df": 24, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.export_utils.swap_modules": {"tf": 1.4142135623730951}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {"mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.parts.ptl_overrides.MRIDCNativeMixedPrecisionPlugin": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 2}, "mridc.core.conf.schedulers.SquareRootConstantSchedulerParams": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 2}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 2}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 2.449489742783178}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 2}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 3}, "mridc.utils.exp_manager.check_resume": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.name": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.unique_names_check": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.start": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer.get": {"tf": 1.4142135623730951}}, "df": 42, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 2.23606797749979}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"mridc.utils.timers.NamedTimer": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer.start": {"tf": 1}, "mridc.utils.timers.NamedTimer.stop": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}, "mridc.utils.timers.NamedTimer.export": {"tf": 1}}, "df": 6}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.nmse": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "w": {"docs": {"mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.7320508075688772}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}}, "df": 8, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}}, "df": 4}}}, "w": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2.8284271247461903}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.CosineAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}}, "df": 50, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 2}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.psnr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 2}, "mridc.core.optim.lr_scheduler.SquareAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.PolynomialHoldDecayAnnealing.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 16}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}}, "df": 4, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNameMismatchError": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralPortNmTensorMismatchError": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exp_manager.NotFoundError": {"tf": 1}, "mridc.utils.exp_manager.LoggerMisconfigurationError": {"tf": 1}, "mridc.utils.exp_manager.CheckpointMisconfigurationError": {"tf": 1}}, "df": 10}, "s": {"docs": {"mridc.core.neural_types.neural_type.NeuralType.compare_and_raise_error": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}, "mridc.utils.exp_manager.configure_checkpointing": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.core.conf.schedulers.SquareRootAnnealingParams": {"tf": 1}, "mridc.core.conf.schedulers.InverseSquareRootAnnealingParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.InverseSquareRootAnnealing": {"tf": 1}, "mridc.core.optim.lr_scheduler.T5InverseSquareRootAnnealing": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 14, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.export.Exportable.disabled_deployment_input_names": {"tf": 1}, "mridc.core.classes.export.Exportable.disabled_deployment_output_names": {"tf": 1}, "mridc.core.classes.export.Exportable.supported_export_formats": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.train_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state_dict": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.get_parameters": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.mridc_logging.Logger.getEffectiveLevel": {"tf": 1}, "mridc.utils.timers.NamedTimer.active_timers": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 32, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.get_iterable": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.input_types": {"tf": 1}, "mridc.collections.common.losses.aggregator.AggregatorLoss.output_types": {"tf": 1}, "mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.compute": {"tf": 1}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.common.parts.utils.coil_combination": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.choose_acceleration": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.TransposeMultiDomainConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.compute_model_per_coil": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.orthotogonalize_weights": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.determine_conv_class": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_input": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.check_forward_hidden": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.TransposeConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.complex_center_crop": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.FileIO.from_config_file": {"tf": 1}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.Serialization.to_config_dict": {"tf": 1}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.export.Exportable.get_format": {"tf": 1}, "mridc.core.classes.export.Exportable.input_module": {"tf": 1}, "mridc.core.classes.export.Exportable.output_module": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal.type_parameters": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.utils.app_state.AppState.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.device_id": {"tf": 1}, "mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.local_rank": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_rank": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.random_seed": {"tf": 1}, "mridc.utils.app_state.AppState.log_dir": {"tf": 1}, "mridc.utils.app_state.AppState.exp_dir": {"tf": 1}, "mridc.utils.app_state.AppState.name": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_name": {"tf": 1}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.create_checkpoint_callback": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}, "mridc.utils.app_state.AppState.mridc_file_folder": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.arguments.add_scheduler_args": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_save_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.on_train_end": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}, "mridc.utils.formaters.colors.code_to_chars": {"tf": 1}, "mridc.utils.formaters.colors.set_title": {"tf": 1}, "mridc.utils.formaters.colors.clear_screen": {"tf": 1}, "mridc.utils.formaters.colors.clear_line": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.DOWN": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.FORWARD": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.BACK": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1}, "mridc.utils.formaters.utils.check_color_support": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.__init__": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 243}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 1}, "mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 2}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.formaters.utils.to_unicode": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 10}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}}, "df": 4, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1}, "mridc.utils.arguments.add_optimizer_args": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.export_utils.expand_Conv1D": {"tf": 1}, "mridc.utils.export_utils.expand_BatchNorm1d": {"tf": 1}, "mridc.utils.export_utils.expand_ConvTranspose1D": {"tf": 1}}, "df": 15, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.reinforce_type": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.reinforce_type": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 2.23606797749979}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.7320508075688772}, "mridc.utils.app_state.AppState.model_restore_path": {"tf": 1}, "mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}}, "df": 27, "d": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 2}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.is_model_being_restored": {"tf": 1}}, "df": 20}, "s": {"docs": {"mridc.core.classes.common.FileIO.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.extract_state_dict_from": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}}, "df": 25}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.comparison.NeuralTypeComparisonResult": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 2}}, "df": 3, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.utils.model_utils.check_lib_version": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 3.605551275463989}, "mridc.utils.exp_manager.check_resume": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 3, "s": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 2}, "d": {"docs": {"mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.unique_names_check": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.reset_parameters": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.reset_parameters": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.utils.timers.NamedTimer.reset": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.reset_parameters": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mridc.utils.decorators.experimental.experimental": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.timers.NamedTimer.reset": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.center_crop": {"tf": 1.4142135623730951}}, "df": 6}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.load_from_checkpoint": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.conf.optimizers.AdamParams": {"tf": 1}, "mridc.core.conf.optimizers.SGDParams": {"tf": 1}, "mridc.core.conf.optimizers.AdadeltaParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamaxParams": {"tf": 1}, "mridc.core.conf.optimizers.AdagradParams": {"tf": 1}, "mridc.core.conf.optimizers.AdamWParams": {"tf": 1}, "mridc.core.conf.optimizers.RMSpropParams": {"tf": 1}, "mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 29}}}}}, "s": {"docs": {"mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.utils.arguments.add_recon_args": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.evaluate": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}}, "df": 30, "s": {"docs": {"mridc.collections.common.parts.utils.save_reconstructions": {"tf": 1.7320508075688772}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}}, "df": 6}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.didn.didn.ReconBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}}, "df": 6}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 2}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 3.1622776601683795}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}}, "df": 17, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1.4142135623730951}}, "df": 2, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.model_utils.import_class_by_path": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.7320508075688772}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 2}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.utils.app_state.ModelMetadataRegistry": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}}, "df": 11}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}}, "df": 3, "d": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 2}, "s": {"docs": {"mridc.utils.mridc_logging.Logger.remove_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.reset_stream_handler": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ChannelType": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}, "mridc.core.neural_types.elements.RecurrentsType": {"tf": 1}, "mridc.core.neural_types.elements.LabelsType": {"tf": 1}, "mridc.core.neural_types.elements.LogprobsType": {"tf": 1}, "mridc.core.neural_types.elements.ProbsType": {"tf": 1}, "mridc.core.neural_types.elements.LossType": {"tf": 1}, "mridc.core.neural_types.elements.RegressionValuesType": {"tf": 1}, "mridc.core.neural_types.elements.CategoricalValuesType": {"tf": 1}, "mridc.core.neural_types.elements.PredictionsType": {"tf": 1}, "mridc.core.neural_types.elements.MaskType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionMeanType": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}, "mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}}, "df": 19, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind.from_str": {"tf": 1}, "mridc.core.neural_types.elements.MRISignal": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.neural_types.elements.LengthsType": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.neural_types.elements.Index": {"tf": 1}, "mridc.core.neural_types.elements.ImageValue": {"tf": 1}, "mridc.core.neural_types.elements.NormalizedImageValue": {"tf": 1}, "mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.StringType": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.core.neural_types.elements.IntType": {"tf": 1}, "mridc.core.neural_types.elements.FloatType": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 19}}}, "s": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1.4142135623730951}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}}, "df": 8, "d": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.conf.schedulers.ReduceLROnPlateauParams": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.utils.timers.NamedTimer.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}, "mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.mridc_logging.Logger.captureWarnings": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.__init__": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.elements.ElementType": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.neural_type.NeuralTypeError": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}}, "df": 1}}}}, "x": {"docs": {"mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.reload_model_params": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.optim.adafactor.Adafactor.step": {"tf": 1}, "mridc.core.optim.novograd.Novograd.step": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.error_checks": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.StatelessTimer": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm.forward": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.4142135623730951}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}, "mridc.utils.exp_manager.check_slurm": {"tf": 1.7320508075688772}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 11}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 4}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack": {"tf": 1}}, "df": 1}}, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.common.parts.utils.rss": {"tf": 2}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 2}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 4}, "i": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.optimizers.RMSpropParams": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.conf.optimizers.RpropParams": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"1": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"1": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 2}, "2": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2.8284271247461903}}, "df": 6, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.rss": {"tf": 1}, "mridc.collections.common.parts.utils.rss_complex": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.neural_types.elements.Target": {"tf": 1}, "mridc.core.neural_types.elements.ReconstructionTarget": {"tf": 1}, "mridc.core.neural_types.elements.ImageFeatureValue": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.is_numba_compat_strict": {"tf": 1.4142135623730951}, "mridc.core.utils.numba_utils.set_numba_compat_strictness": {"tf": 1.7320508075688772}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.env_var_parsing.CoercionError": {"tf": 1}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 2.6457513110645907}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.mridc_topk_check_previous_run": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.timers.NamedTimer.get": {"tf": 1}}, "df": 31, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2.23606797749979}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.convert_model_config_to_dict_config": {"tf": 1}}, "df": 22}, "d": {"docs": {"mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.utils.complex_abs": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.utils.complex_abs_sq": {"tf": 1}, "mridc.collections.common.parts.utils.check_stacked_complex": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.module.NeuralModule.input_example": {"tf": 1}, "mridc.core.neural_types.elements.NormalDistributionSamplesType": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.setup_validation_data": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.val_dataloader": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 2}, "mridc.core.classes.modelPT.ModelPT.multi_validation_epoch_end": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.multi_test_epoch_end": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.set_validation_ds": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_start": {"tf": 1}, "mridc.utils.exp_manager.TimingCallback.on_validation_batch_end": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 2}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 32, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}}, "df": 16}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {"mridc.core.conf.modelPT.ModelConfigBuilder.build": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 2.23606797749979}, "mridc.utils.env_var_parsing.get_envbool": {"tf": 1}, "mridc.utils.env_var_parsing.get_envint": {"tf": 1}, "mridc.utils.env_var_parsing.get_envfloat": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdecimal": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdate": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdatetime": {"tf": 1}, "mridc.utils.env_var_parsing.get_envlist": {"tf": 1}, "mridc.utils.env_var_parsing.get_envdict": {"tf": 1}, "mridc.utils.env_var_parsing.RequiredSettingMissingError": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.neural_types.elements.NormalDistributionLogVarianceType": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.mridc_logging.Logger.add_stream_handlers": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.common.parts.utils.to_tensor": {"tf": 1}, "mridc.collections.common.parts.utils.tensor_to_complex_np": {"tf": 1}, "mridc.core.utils.numba_utils.numba_cpu_is_supported": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.numba_cuda_is_supported": {"tf": 1.7320508075688772}, "mridc.core.utils.numba_utils.skip_numba_cuda_test_if_unsupported": {"tf": 1.4142135623730951}, "mridc.utils.app_state.AppState.version": {"tf": 1}, "mridc.utils.app_state.AppState.checkpoint_callback_params": {"tf": 1}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.exp_manager": {"tf": 3.7416573867739413}, "mridc.utils.exp_manager.check_resume": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_explicit_log_dir": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_log_dir": {"tf": 2.449489742783178}, "mridc.utils.exp_manager.LoggerList": {"tf": 1}, "mridc.utils.exp_manager.LoggerList.version": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.check_lib_version": {"tf": 3}}, "df": 15, "s": {"docs": {"mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.elements.VoidType.compare": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.state": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1.4142135623730951}}, "df": 14}, "e": {"docs": {}, "df": 0, "w": {"docs": {"mridc.core.optim.optimizer_with_master_params.GradBucket.get": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1.4142135623730951}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.WeightedAverageTerm": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"mridc.collections.reconstruction.models.vn.VarNet": {"tf": 1}}, "df": 1}}, "u": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase.determine_conv_class": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1.7320508075688772}, "mridc.core.classes.export.ExportFormat": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}, "mridc.utils.decorators.experimental.experimental": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2.23606797749979}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 48, "d": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1.7320508075688772}, "mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.common.parts.fft.fft2c": {"tf": 1}, "mridc.collections.common.parts.fft.ifft2c": {"tf": 1}, "mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cirim.CIRIM.process_intermediate_pred": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.process_intermediate_eta": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.extra_repr": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.DataConsistencyLayer": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.common.typecheck.TypeState": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_training_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_validation_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_multiple_test_data": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1.4142135623730951}, "mridc.core.conf.hydra_runner.hydra_runner": {"tf": 1.7320508075688772}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1}, "mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1.7320508075688772}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1.7320508075688772}, "mridc.utils.decorators.deprecated.deprecated": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.check_resume": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1.4142135623730951}, "mridc.utils.timers.NamedTimer": {"tf": 1}}, "df": 62}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 5}}}, "r": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.OptimizerParams": {"tf": 1}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 7, "s": {"docs": {"mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 1}}, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc.centered_circle": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.core.classes.common.Serialization.from_config_dict": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.elements.LogDeterminantType": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {"mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.Unet.__init__": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.formaters.colors.AnsiCursor.UP": {"tf": 1}}, "df": 13, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_C": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.update_X": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.update_save_restore_connector": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 2}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 2.449489742783178}}, "df": 8, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.set_world_size": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1}, "mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 4}, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.cfg": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.update_model_config": {"tf": 1}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.mridc_logging.Logger.patch_stderr_handler": {"tf": 1}, "mridc.utils.mridc_logging.Logger.patch_stdout_handler": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.common.Model.list_available_models": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}, "mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.4142135623730951}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.utils.model_utils.parse_dataset_as_name": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.MaskFunc.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}}, "df": 19, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.MultiDomainUnet2d": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 1, "d": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mridc.utils.env_var_parsing.get_env": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.unfreeze": {"tf": 1}}, "df": 1, "s": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.dataset.Dataset.collate_fn": {"tf": 1}, "mridc.core.classes.dataset.IterableDataset.collate_fn": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.conf.dataloader.DataLoaderConfig": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_memory_handlers_to_pl_logger": {"tf": 1}, "mridc.utils.lightning_logger_patch.add_filehandlers_to_pl_logger": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.classes.modelPT.ModelPT.num_weights": {"tf": 1}, "mridc.core.classes.module.NeuralModule.num_weights": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.resolve_cache_dir": {"tf": 1}}, "df": 4}}}}}, "f": {"8": {"docs": {"mridc.utils.formaters.utils.to_unicode": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mridc.utils.cloud.maybe_download_from_cloud": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {"mridc.core.neural_types.elements.StringLabel": {"tf": 1}, "mridc.core.neural_types.elements.Length": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.set_typecheck_enabled": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.global_rank": {"tf": 1}, "mridc.utils.app_state.AppState.get_model_metadata_from_guid": {"tf": 1}, "mridc.utils.get_rank.is_global_rank_zero": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}}, "df": 22}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mridc.core.classes.module.NeuralModule.input_example": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mridc.collections.common.data.dataset.ConcatDataset.round_robin_generator": {"tf": 1}, "mridc.collections.common.data.dataset.ConcatDataset.random_generator": {"tf": 1}}, "df": 2}, "d": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}}, "df": 4}}}, "l": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.core.neural_types.elements.SequenceToSequenceAlignmentType": {"tf": 1}, "mridc.utils.model_utils.ArtifactPathType": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"mridc.utils.export_utils.simple_replace": {"tf": 1}, "mridc.utils.metaclasses.Singleton": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 1}, "mridc.core.classes.common.Model.get_available_model_names": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_validation_dataloader_prefix": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.get_test_dataloader_prefix": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_weights_ckpt": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy.get_lr": {"tf": 1}, "mridc.core.optim.lr_scheduler.NoamAnnealing.get_lr": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_log_dir": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1}, "mridc.utils.exp_manager.get_git_diff": {"tf": 1}}, "df": 16, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.core.classes.common.is_typecheck_enabled": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.mridc_logging.Logger.get_verbosity": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1.4142135623730951}, "mridc.core.conf.optimizers.NovogradParams": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 2}, "mridc.core.optim.novograd.Novograd": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.grad_sync": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.GradBucket": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.fp32_grad_accumulation": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.copy_model_grads_to_main_grads": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.allreduce_main_grads": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.async_master_grads_allreudce": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1}}, "h": {"docs": {"mridc.utils.model_utils.resolve_subclass_pretrained_model_info": {"tf": 1.7320508075688772}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_group": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_group": {"tf": 1}}, "df": 6, "s": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.core.optim.novograd.Novograd": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.param_groups": {"tf": 1.4142135623730951}}, "df": 5}}}}, "u": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell": {"tf": 1}}, "df": 5}}, "t": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.7320508075688772}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 1}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}}, "df": 1, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.temp_seed": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics": {"tf": 1}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.crop_to_shape": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.7320508075688772}}, "df": 18}, "s": {"docs": {"mridc.core.classes.export.Exportable": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.exp_manager.get_git_hash": {"tf": 1.7320508075688772}, "mridc.utils.exp_manager.get_git_diff": {"tf": 2}}, "df": 3}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.create_mask_for_mask_type": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 10}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase": {"tf": 1}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"mridc.utils.app_state.AppState.register_model_guid": {"tf": 1}, "mridc.utils.app_state.AppState.reset_model_guid_registry": {"tf": 1}}, "df": 2, "e": {"docs": {"mridc.core.classes.modelPT.ModelPT.prepare_test": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.utils.exp_manager.error_checks": {"tf": 1}}, "df": 4, "s": {"docs": {"mridc.utils.app_state.AppState.world_size": {"tf": 1}, "mridc.utils.app_state.AppState.model_parallel_size": {"tf": 1}, "mridc.utils.app_state.AppState.data_parallel_size": {"tf": 1}}, "df": 3}}}, "z": {"docs": {"mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.elements.VoidType": {"tf": 1}}, "df": 1}}}}, "k": {"1": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"mridc.collections.reconstruction.data.subsample.RandomMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.EquispacedMaskFunc": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kspace": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_coordinates": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Poisson2DMaskFunc": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 2}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.kspace_correction": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1.7320508075688772}}, "df": 25, "p": {"docs": {"mridc.collections.common.parts.utils.sense": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.data.mri_data.FastMRICombinedSliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.data.mri_data.FastMRISliceDataset.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.forward": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rim.utils.log_likelihood_gradient": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.apply_mask": {"tf": 1}}, "df": 29}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.subsample.Gaussian1DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.data.subsample.Gaussian2DMaskFunc.gaussian_kernel": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.recurrentvarnet.conv2gru.Conv2dGRU.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvNonlinear.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvGRUCell.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCellBase.__init__": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.rnn_cells.ConvMGUCell.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCellBase.__init__": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.rim.rnn_cells.IndRNNCell.__init__": {"tf": 1.7320508075688772}}, "df": 13, "s": {"docs": {"mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "y": {"2": {"docs": {"mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.validation_epoch_end": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.test_epoch_end": {"tf": 1}, "mridc.core.conf.optimizers.register_optimizer_params": {"tf": 1}, "mridc.core.conf.schedulers.register_scheduler_params": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.optim.lr_scheduler.register_scheduler": {"tf": 1}, "mridc.core.optim.optimizers.register_optimizer": {"tf": 1}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1.4142135623730951}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.model_utils.resolve_dataset_name_from_cfg": {"tf": 4.47213595499958}, "mridc.utils.model_utils.resolve_validation_dataloaders": {"tf": 1}}, "df": 14, "s": {"docs": {"mridc.collections.reconstruction.metrics.evaluate.Metrics.__init__": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.push": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.means": {"tf": 1}, "mridc.collections.reconstruction.metrics.evaluate.Metrics.stddevs": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.maybe_init_from_pretrained_checkpoint": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1}, "mridc.utils.model_utils.unique_names_check": {"tf": 1}}, "df": 8}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}, "mridc.core.optim.lr_scheduler.prepare_lr_scheduler": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.mridc_logging.Logger.debug": {"tf": 1}, "mridc.utils.mridc_logging.Logger.info": {"tf": 1}, "mridc.utils.mridc_logging.Logger.warning": {"tf": 1}, "mridc.utils.mridc_logging.Logger.error": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"mridc.collections.reconstruction.models.base.BaseSensitivityModel.get_pad_and_num_low_freqs": {"tf": 2}, "mridc.collections.reconstruction.models.rim.rim_block.RIMBlock.forward": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.cirim.CIRIM": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.kikinet.KIKINet": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}, "mridc.core.neural_types.axes.AxisType": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mridc.core.neural_types.axes.AxisKind": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.crossdomain.crossdomain.CrossDomainNetwork.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.primaldual.pd.DualNet.__init__": {"tf": 1}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.setup_optimization": {"tf": 1}, "mridc.core.conf.optimizers.get_optimizer_config": {"tf": 1.7320508075688772}, "mridc.core.conf.schedulers.get_scheduler_config": {"tf": 1.7320508075688772}, "mridc.core.optim.lr_scheduler.WarmupPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.SquareRootConstantPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.WarmupHoldPolicy": {"tf": 1}, "mridc.core.optim.lr_scheduler.WarmupAnnealHoldPolicy": {"tf": 1.4142135623730951}, "mridc.core.optim.lr_scheduler.get_scheduler": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.get_optimizer": {"tf": 1.7320508075688772}, "mridc.core.optim.optimizers.parse_optimizer_args": {"tf": 1}, "mridc.utils.env_var_parsing.get_env": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 2}, "mridc.utils.exp_manager.configure_loggers": {"tf": 1.4142135623730951}, "mridc.utils.exp_manager.MRIDCModelCheckpoint.__init__": {"tf": 1}, "mridc.utils.model_utils.wrap_training_step": {"tf": 1}, "mridc.utils.mridc_logging.Logger.critical": {"tf": 1}}, "df": 19}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.common.parts.utils.complex_conj": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.chans_to_batch_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.batch_chans_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.divide_root_sum_of_squares": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.cascadenet.ccnn_block.CascadeNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.conv.conv2d.Conv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.crossdomain.multicoil.MultiCoil.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.Subpixel.forward": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.pad": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DUB.forward": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN.crop_to_shape": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.didn.didn.DIDN.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 3}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DWT.forward": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.IWT.forward": {"tf": 2}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.ConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.DilatedConvBlock.forward": {"tf": 1}, "mridc.collections.reconstruction.models.mwcnn.mwcnn.MWCNN.forward": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit.forward": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.rim.conv_layers.ConvRNNStack.forward": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.complex_to_chan_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.chan_complex_to_last_dim": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.norm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unnorm": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.unpad": {"tf": 1}, "mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.forward": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_expand": {"tf": 1}, "mridc.collections.reconstruction.models.varnet.vn_block.VarNetBlock.sens_reduce": {"tf": 1}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2}, "mridc.collections.reconstruction.parts.utils.mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.batched_mask_center": {"tf": 1}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 2}, "mridc.core.classes.common.typecheck.__init__": {"tf": 1}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.utils.config_utils.assert_dataclass_signature_match": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1.4142135623730951}, "mridc.utils.model_utils.maybe_update_config_version": {"tf": 1.7320508075688772}}, "df": 61, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mridc.collections.common.parts.rnn_utils.rnn_weights_init": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d.forward": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {"mridc.collections.reconstruction.models.multidomain.multidomain.StandardizationLayer": {"tf": 1}}, "df": 1}}, "y": {"docs": {"mridc.collections.common.losses.ssim.SSIMLoss.forward": {"tf": 1}, "mridc.collections.common.parts.utils.complex_mul": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.ccnn.CascadeNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.cirim.CIRIM.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.crnn.CRNNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.dunet.DUNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.jointicnet.JointICNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.kikinet.KIKINet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.lpd.LPDNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.multidomainnet.MultiDomainNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.unet.UNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.vn.VarNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.vsnet.VSNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.xpdnet.XPDNet.forward": {"tf": 2.449489742783178}, "mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 2.23606797749979}, "mridc.collections.reconstruction.parts.utils.center_crop_to_smallest": {"tf": 2}, "mridc.core.conf.modelPT.ModelConfigBuilder.__init__": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.utils.formaters.colors.AnsiCursor.POS": {"tf": 1.4142135623730951}}, "df": 21, "u": {"docs": {"mridc.collections.reconstruction.models.didn.didn.Subpixel": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.ReconBlock": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DUB": {"tf": 1}, "mridc.collections.reconstruction.models.didn.didn.DIDN": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1}}}, "u": {"docs": {"mridc.core.classes.common.typecheck.__init__": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisType": {"tf": 1}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1.7320508075688772}, "mridc.core.neural_types.elements.ElementType.fields": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.VoidType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType": {"tf": 1}, "mridc.core.neural_types.neural_type.NeuralType.compare": {"tf": 1}, "mridc.core.optim.adafactor.Adafactor": {"tf": 1}, "mridc.utils.exp_manager.exp_manager": {"tf": 1.7320508075688772}, "mridc.utils.export_utils.swap_modules": {"tf": 1}, "mridc.utils.export_utils.replace_modules": {"tf": 1}, "mridc.utils.export_utils.replace_for_export": {"tf": 1}}, "df": 17, "r": {"docs": {"mridc.core.classes.modelPT.ModelPT.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.register_artifact": {"tf": 1.4142135623730951}, "mridc.core.neural_types.axes.AxisKindAbstract": {"tf": 1.4142135623730951}, "mridc.core.neural_types.elements.ElementType.type_parameters": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentInit": {"tf": 1}, "mridc.collections.reconstruction.models.recurrentvarnet.recurentvarnet.RecurrentVarNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.rvn.RecurrentVarNet": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"mridc.core.classes.module.NeuralModule.as_frozen": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"mridc.core.classes.common.FileIO.from_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.FileIO.to_config_file": {"tf": 1.4142135623730951}, "mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.save_to": {"tf": 1.4142135623730951}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.save_to": {"tf": 1.4142135623730951}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.model_config_yaml": {"tf": 1}}, "df": 8, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mridc.utils.config_utils.update_model_config": {"tf": 1}}, "df": 1}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mridc.collections.common.metrics.global_average_loss_metric.GlobalAverageLossMetric.update": {"tf": 1.4142135623730951}, "mridc.collections.reconstruction.models.base.BaseMRIReconstructionModel.training_step": {"tf": 1}, "mridc.collections.reconstruction.models.base.BaseSensitivityModel.__init__": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF": {"tf": 1}, "mridc.collections.reconstruction.parts.transforms.MRIDataTransforms.__init__": {"tf": 1.4142135623730951}, "mridc.core.optim.optimizer_with_master_params.GradBucket.zero": {"tf": 1}, "mridc.core.optim.optimizer_with_master_params.MasterOptimizerWrapper.zero_grad": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"mridc.collections.reconstruction.models.unet_base.unet_block.NormUnet.pad": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {"mridc.collections.reconstruction.models.zf.ZF.forward": {"tf": 1}, "mridc.collections.reconstruction.models.zf.ZF.test_step": {"tf": 1}}, "df": 2}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.data.mri_data.et_query": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}}, "df": 4}}}, "j": {"docs": {"mridc.collections.reconstruction.models.ccnn.CascadeNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1.7320508075688772}, "mridc.collections.reconstruction.models.dunet.DUNet": {"tf": 1}, "mridc.collections.reconstruction.models.variablesplittingnet.vsnet_block.VSNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.vsnet.VSNet": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.conv.gruconv2d.GRUConv2d": {"tf": 1}, "mridc.collections.reconstruction.models.convrecnet.crnn_block.RecurrentConvolutionalNetBlock": {"tf": 1}, "mridc.collections.reconstruction.models.crnn.CRNNet": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 2}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"mridc.utils.exp_manager.exp_manager": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"mridc.collections.reconstruction.models.jointicnet.JointICNet": {"tf": 1}}, "df": 1, "e": {"docs": {"mridc.collections.reconstruction.models.lpd.LPDNet": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"mridc.collections.reconstruction.models.xpdnet.XPDNet": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mridc.core.classes.common.Model.from_pretrained": {"tf": 1}, "mridc.core.classes.modelPT.ModelPT.restore_from": {"tf": 1}, "mridc.core.connectors.save_restore_connector.SaveRestoreConnector.restore_from": {"tf": 1}}, "df": 3}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on docs tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();